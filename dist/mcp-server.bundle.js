#!/usr/bin/env node
"use strict";
var ae=(e,t)=>()=>(e&&(t=e(e=0)),t);import rn from"dotenv";var H,te,Qe,Jr,U,Ke,Qr,B=ae(()=>{rn.config();H=process.env.TURSO_DATABASE_URL,te=process.env.TURSO_AUTH_TOKEN,Qe=process.env.LOG_LEVEL||"INFO",Jr=process.env.DB_LOGGING_ENABLED==="true",U=parseInt(process.env.DEFAULT_TOKEN_BUDGET||"4000",10),Ke=parseFloat(process.env.CONTEXT_DECAY_RATE||"0.95"),Qr=parseInt(process.env.MAX_CACHE_SIZE||"1000",10)});function Ce(){return process.env.MCP_MODE==="true"||process.env.MCP_MODE===!0||global.MCP_MODE===!0}var ve,Ze,c,M=ae(()=>{B();ve={DEBUG:0,INFO:1,WARN:2,ERROR:3};Ze=Ce(),c=(e,t,n=null)=>{if(Ce()||Ze||process.env.MCP_MODE==="true")return;let r=e.toUpperCase();if(!ve.hasOwnProperty(r)||ve[r]<ve[Qe])return;let s=`[${new Date().toISOString()}] [${r}]: ${t}`;if(n){let a=typeof n=="string"?n:JSON.stringify(n);s+=` - ${a}`}Ce()||Ze||process.env.MCP_MODE==="true"||(r==="DEBUG"||r==="INFO"?console.log(s):console.error(s))}});import{createClient as on}from"@libsql/client";async function sn(){let e=process.env.MCP_MODE==="true";try{let t=!1;try{let r=await C(`
        SELECT name FROM sqlite_master
        WHERE type='table' AND name='project_patterns'
      `);t=r&&r.rows&&r.rows.length>0}catch(r){e||c("warn",`Error checking table existence: ${r.message}`);return}if(!t){e||c("info","project_patterns table doesn't exist yet, skipping migration");return}let n=!1;try{let r=await C(`
        PRAGMA table_info(project_patterns)
      `);if(r&&r.rows){for(let o of r.rows)if(o&&o.name==="language"){n=!0;break}}}catch(r){e||c("warn",`Error checking column existence: ${r.message}`);return}if(n){e||c("debug","Language column already exists in project_patterns table");return}e||c("info","Adding language column to project_patterns table");try{await C("ALTER TABLE project_patterns ADD COLUMN language TEXT"),e||c("info","Successfully added language column to project_patterns table")}catch(r){if(r.message&&r.message.includes("duplicate column"))e||c("info","Language column already exists, skipping");else{e||c("warn",`Error adding language column: ${r.message}`);return}}try{await C("CREATE INDEX IF NOT EXISTS idx_project_patterns_language ON project_patterns(language)"),e||c("info","Created index for language column")}catch(r){e||c("warn",`Error creating index: ${r.message}`)}}catch(t){e||c("warn",`Migration warning: ${t.message}`)}}var J,Q,xe,C,be,N=ae(()=>{B();M();J=null,Q=()=>{let e=process.env.MCP_MODE==="true";if(J)return J;if(!H){let t="TURSO_DATABASE_URL is not defined in environment variables";throw e?new Error:new Error(t)}if(!te){let t="TURSO_AUTH_TOKEN is not defined in environment variables";throw e?new Error:new Error(t)}return J=on({url:H,authToken:te}),e||c("info","Database client created",{url:H.substring(0,20)+"..."}),J},xe=async(e=null)=>{let t=process.env.MCP_MODE==="true";try{let r=0;for(;r<3;)try{return await(e||Q()).execute("SELECT 1"),!0}catch(o){if(r++,r>=3){if(t)return!1;throw new Error(`Database connection test failed: ${o.message}`)}let s=Math.pow(2,r)*100;await new Promise(a=>setTimeout(a,s)),e||(J=null)}return!0}catch(n){if(t)return!1;throw new Error(`Database connection test failed: ${n.message}`)}},C=async(e,t=[])=>{let n=process.env.MCP_MODE==="true";try{n||c("debug","DB - EXECUTING QUERY",{sql:e.substring(0,150)+(e.length>150?"...":""),args:t.length>0?JSON.stringify(t.slice(0,3))+(t.length>3?"...":""):"[]"});let r=3,o=0,s;for(;o<r;)try{s=await Q().execute({sql:e,args:t});break}catch(a){o++;let l=a.message?.includes("connection")||a.message?.includes("timeout")||a.message?.includes("closed");if(o>=r||!l)throw a;let i=Math.pow(2,o)*100;await new Promise(u=>setTimeout(u,i)),J=null}return n||c("debug","DB - QUERY RESULT",{rowCount:s.rows?.length||0,rowsPreview:s.rows?.length>0?JSON.stringify(s.rows[0]).substring(0,100)+"...":"No rows",affectedRows:s.rowsAffected||0}),s}catch(r){throw n||c("error","DB - QUERY ERROR",{message:r.message,query:e.substring(0,150),args:t.length>0?JSON.stringify(t.slice(0,3)):"[]"}),n?new Error:new Error(`Query execution failed: ${r.message}
Query: ${e}`)}};be=async()=>{let e=process.env.MCP_MODE==="true";try{let t=Q(),n=!0;try{await sn()}catch(o){e||c("warn",`Migration warning: ${o.message}`)}let r=[`CREATE TABLE IF NOT EXISTS code_entities (
        entity_id TEXT PRIMARY KEY, -- UUID
        file_path TEXT, -- Full path for file entities, or path to file containing the entity
        entity_type TEXT NOT NULL, -- e.g., 'file', 'function', 'class', 'method', 'variable', 'interface', 'comment_block'
        name TEXT, -- Name of the function, class, variable etc.
        start_line INTEGER,
        end_line INTEGER,
        content_hash TEXT, -- Hash of the raw content to detect changes
        raw_content TEXT,
        summary TEXT, -- AI or rule-based summary
        language TEXT, -- Programming language
        parent_entity_id TEXT, -- For hierarchical structure (e.g., function inside a class, class inside a file)
        last_modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        last_accessed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- For recency
        importance_score REAL DEFAULT 1.0, -- For prioritization, can decay
        custom_metadata TEXT, -- JSON blob for other properties
        FOREIGN KEY (parent_entity_id) REFERENCES code_entities(entity_id) ON DELETE CASCADE
      )`,"CREATE INDEX IF NOT EXISTS idx_code_entities_file_path ON code_entities(file_path)","CREATE INDEX IF NOT EXISTS idx_code_entities_type ON code_entities(entity_type)","CREATE INDEX IF NOT EXISTS idx_code_entities_name ON code_entities(name)","CREATE INDEX IF NOT EXISTS idx_code_entities_last_accessed ON code_entities(last_accessed_at DESC)","CREATE INDEX IF NOT EXISTS idx_code_entities_importance ON code_entities(importance_score DESC)",`CREATE TABLE IF NOT EXISTS entity_keywords (
        keyword_id INTEGER PRIMARY KEY AUTOINCREMENT,
        entity_id TEXT NOT NULL,
        keyword TEXT NOT NULL,
        term_frequency REAL,
        weight REAL DEFAULT 1.0,
        keyword_type TEXT, -- e.g., 'identifier', 'comment', 'string_literal', 'n_gram_2', 'n_gram_3'
        FOREIGN KEY (entity_id) REFERENCES code_entities(entity_id) ON DELETE CASCADE
      )`,"CREATE INDEX IF NOT EXISTS idx_entity_keywords_keyword ON entity_keywords(keyword)","CREATE INDEX IF NOT EXISTS idx_entity_keywords_entity ON entity_keywords(entity_id)","CREATE UNIQUE INDEX IF NOT EXISTS idx_entity_keywords_entity_keyword_type ON entity_keywords(entity_id, keyword, keyword_type)",`CREATE VIRTUAL TABLE IF NOT EXISTS code_entities_fts USING fts5(
        entity_id UNINDEXED,
        name,
        searchable_content
      )`,`CREATE TRIGGER IF NOT EXISTS code_entities_ai AFTER INSERT ON code_entities BEGIN
        INSERT INTO code_entities_fts (entity_id, name, searchable_content)
        VALUES (new.entity_id, new.name, new.raw_content || ' ' || COALESCE(new.summary, ''));
      END`,`CREATE TRIGGER IF NOT EXISTS code_entities_ad AFTER DELETE ON code_entities BEGIN
        DELETE FROM code_entities_fts WHERE entity_id = old.entity_id;
      END`,`CREATE TRIGGER IF NOT EXISTS code_entities_au AFTER UPDATE ON code_entities BEGIN
        UPDATE code_entities_fts SET
          name = new.name,
          searchable_content = new.raw_content || ' ' || COALESCE(new.summary, '')
        WHERE entity_id = old.entity_id;
      END`,`CREATE TABLE IF NOT EXISTS code_relationships (
        relationship_id TEXT PRIMARY KEY, -- UUID
        source_entity_id TEXT NOT NULL,
        target_entity_id TEXT NOT NULL,
        relationship_type TEXT NOT NULL,
        weight REAL DEFAULT 1.0,
        metadata TEXT, -- JSON blob
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (source_entity_id) REFERENCES code_entities(entity_id) ON DELETE CASCADE,
        FOREIGN KEY (target_entity_id) REFERENCES code_entities(entity_id) ON DELETE CASCADE
      )`,"CREATE INDEX IF NOT EXISTS idx_code_relationships_source ON code_relationships(source_entity_id, relationship_type)","CREATE INDEX IF NOT EXISTS idx_code_relationships_target ON code_relationships(target_entity_id, relationship_type)","CREATE UNIQUE INDEX IF NOT EXISTS idx_code_relationships_unique ON code_relationships(source_entity_id, target_entity_id, relationship_type)",`CREATE TABLE IF NOT EXISTS conversation_history (
        message_id TEXT PRIMARY KEY, -- UUID
        conversation_id TEXT NOT NULL,
        role TEXT NOT NULL, -- 'user', 'assistant', 'system'
        content TEXT NOT NULL,
        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        related_context_entity_ids TEXT, -- JSON array of entity_ids
        summary TEXT,
        user_intent TEXT,
        topic_segment_id TEXT,        -- Reference to topic segment
        semantic_markers TEXT,        -- JSON array of semantic markers found in message
        sentiment_indicators TEXT      -- JSON structure for sentiment analysis
      )`,"CREATE INDEX IF NOT EXISTS idx_conversation_history_conversation_ts ON conversation_history(conversation_id, timestamp DESC)","CREATE INDEX IF NOT EXISTS idx_conversation_history_topic ON conversation_history(topic_segment_id)",`CREATE TABLE IF NOT EXISTS conversation_topics (
        topic_id TEXT PRIMARY KEY, -- UUID
        conversation_id TEXT NOT NULL,
        topic_name TEXT NOT NULL,
        description TEXT,
        start_message_id TEXT NOT NULL,
        end_message_id TEXT,    -- NULL if ongoing
        start_timestamp TIMESTAMP NOT NULL,
        end_timestamp TIMESTAMP,  -- NULL if ongoing
        primary_entities TEXT,    -- JSON array of entity_ids
        keywords TEXT,            -- JSON array of keywords
        summary TEXT,
        parent_topic_id TEXT,     -- For hierarchical topic structure
        FOREIGN KEY (start_message_id) REFERENCES conversation_history(message_id) ON DELETE CASCADE,
        FOREIGN KEY (parent_topic_id) REFERENCES conversation_topics(topic_id) ON DELETE SET NULL
      )`,"CREATE INDEX IF NOT EXISTS idx_conversation_topics_conversation ON conversation_topics(conversation_id)","CREATE INDEX IF NOT EXISTS idx_conversation_topics_timestamps ON conversation_topics(start_timestamp, end_timestamp)",`CREATE TABLE IF NOT EXISTS conversation_purposes (
        purpose_id TEXT PRIMARY KEY, -- UUID
        conversation_id TEXT NOT NULL,
        purpose_type TEXT NOT NULL,  -- 'debugging', 'feature_planning', 'code_review', etc.
        confidence REAL DEFAULT 0.0, -- Confidence score (0.0 to 1.0)
        start_timestamp TEXT NOT NULL, -- ISO timestamp
        end_timestamp TEXT, -- ISO timestamp, NULL if still active
        metadata TEXT -- Additional metadata in JSON format
      )`,"CREATE INDEX IF NOT EXISTS idx_conversation_purposes_conversation ON conversation_purposes(conversation_id)","CREATE INDEX IF NOT EXISTS idx_conversation_purposes_type ON conversation_purposes(purpose_type, confidence DESC)",`CREATE TABLE IF NOT EXISTS timeline_events (
        event_id TEXT PRIMARY KEY, -- UUID
        event_type TEXT NOT NULL,
        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        data TEXT, -- JSON blob
        associated_entity_ids TEXT, -- JSON array of code_entity_ids
        conversation_id TEXT -- If related to a specific conversation
      )`,"CREATE INDEX IF NOT EXISTS idx_timeline_events_ts ON timeline_events(timestamp DESC)","CREATE INDEX IF NOT EXISTS idx_timeline_events_type ON timeline_events(event_type)",`CREATE TABLE IF NOT EXISTS context_snapshots (
        snapshot_id TEXT PRIMARY KEY, -- UUID
        name TEXT,
        description TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        timeline_event_id TEXT,
        snapshot_data TEXT NOT NULL, -- JSON blob
        FOREIGN KEY (timeline_event_id) REFERENCES timeline_events(event_id) ON DELETE SET NULL
      )`,"CREATE INDEX IF NOT EXISTS idx_context_snapshots_name ON context_snapshots(name)",`CREATE TABLE IF NOT EXISTS focus_areas (
        focus_id TEXT PRIMARY KEY, -- UUID
        focus_type TEXT NOT NULL,
        identifier TEXT,
        description TEXT,
        related_entity_ids TEXT, -- JSON array of code_entity_ids
        keywords TEXT, -- JSON array of defining keywords
        last_activated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        is_active BOOLEAN DEFAULT FALSE
      )`,"CREATE INDEX IF NOT EXISTS idx_focus_areas_active ON focus_areas(is_active, last_activated_at DESC)",`CREATE TABLE IF NOT EXISTS project_patterns (
        pattern_id TEXT PRIMARY KEY, -- UUID
        pattern_type TEXT NOT NULL,
        name TEXT,
        description TEXT,
        representation TEXT NOT NULL, -- JSON or textual
        detection_rules TEXT,
        frequency INTEGER DEFAULT 0,
        last_detected_at TIMESTAMP,
        utility_score REAL DEFAULT 0.0,
        confidence_score REAL DEFAULT 0.5, -- confidence in pattern validity
        reinforcement_count INTEGER DEFAULT 1, -- times pattern was reinforced
        is_global BOOLEAN DEFAULT FALSE, -- indicates if promoted to global status
        session_origin_id TEXT, -- originating session if any
        language TEXT, -- NEW COLUMN: programming language the pattern applies to
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )`,"CREATE INDEX IF NOT EXISTS idx_project_patterns_type ON project_patterns(pattern_type)","CREATE INDEX IF NOT EXISTS idx_project_patterns_global ON project_patterns(is_global, confidence_score DESC)","CREATE INDEX IF NOT EXISTS idx_project_patterns_utility ON project_patterns(utility_score DESC)",`CREATE TABLE IF NOT EXISTS pattern_observations (
        observation_id TEXT PRIMARY KEY, -- UUID
        pattern_id TEXT NOT NULL,
        conversation_id TEXT,
        context_entities TEXT, -- JSON array of entity_ids
        observation_type TEXT NOT NULL, -- 'usage', 'confirmation', 'rejection'
        observation_data TEXT, -- JSON with details
        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (pattern_id) REFERENCES project_patterns(pattern_id) ON DELETE CASCADE
      )`,"CREATE INDEX IF NOT EXISTS idx_pattern_observations_pattern ON pattern_observations(pattern_id)","CREATE INDEX IF NOT EXISTS idx_pattern_observations_type_ts ON pattern_observations(observation_type, timestamp DESC)",`CREATE TABLE IF NOT EXISTS system_logs (
        log_id INTEGER PRIMARY KEY AUTOINCREMENT,
        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        level TEXT NOT NULL, -- 'INFO', 'WARN', 'ERROR', 'DEBUG'
        message TEXT NOT NULL,
        data TEXT -- Optional JSON blob
      )`,"CREATE INDEX IF NOT EXISTS idx_system_logs_timestamp_level ON system_logs(timestamp DESC, level)",`CREATE TABLE IF NOT EXISTS knowledge_items (
        item_id TEXT PRIMARY KEY, -- UUID
        item_type TEXT NOT NULL, -- Type of knowledge item (concept, code_pattern, domain_term, etc.)
        name TEXT NOT NULL, -- Display name of the knowledge item
        content TEXT, -- JSON or raw content depending on type
        metadata TEXT, -- Additional metadata as JSON
        confidence_score REAL DEFAULT 0.5, -- Confidence score
        created_at TEXT NOT NULL, -- Creation timestamp
        updated_at TEXT NOT NULL, -- Last update timestamp
        conversation_id TEXT -- Source conversation ID
      )`,"CREATE INDEX IF NOT EXISTS idx_knowledge_items_type ON knowledge_items(item_type)","CREATE INDEX IF NOT EXISTS idx_knowledge_items_conversation ON knowledge_items(conversation_id)","CREATE INDEX IF NOT EXISTS idx_knowledge_items_confidence ON knowledge_items(confidence_score DESC)",`CREATE TABLE IF NOT EXISTS context_states (
        state_id TEXT PRIMARY KEY, -- UUID
        milestone_id TEXT,
        conversation_id TEXT,
        topic_id TEXT,
        state_type TEXT NOT NULL, -- Type of context state
        state_data TEXT, -- JSON data representing the state
        created_at TEXT NOT NULL, -- Creation timestamp
        metadata TEXT -- Additional metadata as JSON
      )`,"CREATE INDEX IF NOT EXISTS idx_context_states_milestone ON context_states(milestone_id)","CREATE INDEX IF NOT EXISTS idx_context_states_conversation ON context_states(conversation_id)"];for(let o of r)try{await t.execute(o)}catch(s){e||(c("error",`Error executing schema statement: ${s.message}`),c("error",`Failed statement: ${o.substring(0,100)}...`)),n=!1}return n}catch(t){if(e)return!1;throw new Error(`Database schema initialization failed: ${t.message}`)}}});import{v4 as gn}from"uuid";async function Ie(e,t,n,r=1,o={}){if(!e||!t||!n)throw new Error("Source entity ID, target entity ID, and relationship type are required");let s=gn(),a=JSON.stringify(o);try{await C(`
      INSERT INTO code_relationships (
        relationship_id, source_entity_id, target_entity_id, relationship_type, weight, metadata
      ) VALUES (?, ?, ?, ?, ?, ?)
    `,[s,e,t,n,r,a])}catch(l){if(l.message&&l.message.includes("UNIQUE constraint failed"))await C(`
        UPDATE code_relationships 
        SET weight = ?, metadata = ? 
        WHERE source_entity_id = ? AND target_entity_id = ? AND relationship_type = ?
      `,[r,a,e,t,n]);else throw console.error(`Error adding relationship between ${e} and ${t}:`,l),l}}async function ce(e,t="outgoing",n=[]){if(!e)throw new Error("Entity ID is required");if(!["outgoing","incoming","both"].includes(t))throw new Error("Direction must be 'outgoing', 'incoming', or 'both'");let r=`
    SELECT 
      relationship_id, 
      source_entity_id, 
      target_entity_id, 
      relationship_type, 
      weight, 
      metadata
    FROM code_relationships
    WHERE 
  `,o=[];if(t==="outgoing"?(r+="source_entity_id = ?",o.push(e)):t==="incoming"?(r+="target_entity_id = ?",o.push(e)):(r+="(source_entity_id = ? OR target_entity_id = ?)",o.push(e,e)),n.length>0){let s=n.map(()=>"?").join(", ");r+=` AND relationship_type IN (${s})`,o.push(...n)}try{return(await C(r,o)).map(a=>({...a,metadata:a.metadata?JSON.parse(a.metadata):{}}))}catch(s){throw console.error(`Error getting relationships for entity ${e}:`,s),s}}var W=ae(()=>{N()});B();N();M();import{McpServer as jr}from"@modelcontextprotocol/sdk/server/mcp.js";import{StdioServerTransport as Wr}from"@modelcontextprotocol/sdk/server/stdio.js";N();import"zod";import{v4 as Yn}from"uuid";N();import{v4 as Pe}from"uuid";function I(e,t="plaintext"){let n=e.toLowerCase();switch(t){case"javascript":case"typescript":case"jsx":case"tsx":return Ye(n);case"python":return Ve(n);case"java":case"csharp":case"c#":return mn(n);case"ruby":return et(n);case"go":return fn(n);case"plaintext":default:return O(n)}}function Re(e,t){if(!e)return[];let n=[];switch(t.toLowerCase()){case"javascript":case"typescript":case"jsx":case"tsx":an(e,n);break;case"python":cn(e,n);break;case"csharp":case"c#":ln(e,n);break}return n}function an(e,t){let n=/\.\s*then\s*\(\s*(?:function\s*\([^)]*\)|[^=>(]*=>\s*[^)]*)\s*\)(?:\s*\.(?:then|catch|finally)\s*\([^)]*\))+/g,r;for(;(r=n.exec(e))!==null;)t.push({idiom:r[0],type:"js_promise_chain",location:{start:r.index,end:r.index+r[0].length}});let o=/\basync\s+(?:function\s*[a-zA-Z0-9_$]*\s*\([^)]*\)|(?:[a-zA-Z0-9_$]+\s*=>)|(?:\([^)]*\)\s*=>))(?:(?:.|\n)*?\bawait\b(?:.|\n)*?)/g;for(;(r=o.exec(e))!==null;)t.push({idiom:r[0],type:"js_async_await",location:{start:r.index,end:r.index+r[0].length}});let s=/(?:\.|\()(?:[a-zA-Z0-9_$]+)?\s*\(\s*(?:\([^)]*\)|[a-zA-Z0-9_$]+)\s*=>\s*(?:{[^}]*}|[^);,]*)/g;for(;(r=s.exec(e))!==null;)t.some(l=>l.type==="js_promise_chain"&&r.index>=l.location.start&&r.index+r[0].length<=l.location.end)||t.push({idiom:r[0],type:"js_arrow_callback",location:{start:r.index,end:r.index+r[0].length}})}function cn(e,t){let n=/\[\s*[^\[\]]*\s+for\s+[^\[\]]+\s+in\s+[^\[\]]+(?:\s+if\s+[^\[\]]+)?\s*\]/g,r;for(;(r=n.exec(e))!==null;)t.push({idiom:r[0],type:"python_list_comprehension",location:{start:r.index,end:r.index+r[0].length}});let o=/\{\s*[^{}]*\s*:\s*[^{}]*\s+for\s+[^{}]+\s+in\s+[^{}]+(?:\s+if\s+[^{}]+)?\s*\}/g;for(;(r=o.exec(e))!==null;)t.push({idiom:r[0],type:"python_dict_comprehension",location:{start:r.index,end:r.index+r[0].length}});let s=/lambda\s+[^:]+:[^,\n)]+/g;for(;(r=s.exec(e))!==null;)t.push({idiom:r[0],type:"python_lambda",location:{start:r.index,end:r.index+r[0].length}});let a=/\(\s*[^()]*\s+for\s+[^()]+\s+in\s+[^()]+(?:\s+if\s+[^()]+)?\s*\)/g;for(;(r=a.exec(e))!==null;)t.push({idiom:r[0],type:"python_generator_expression",location:{start:r.index,end:r.index+r[0].length}})}function ln(e,t){let n=/\.\s*(?:Where|Select|OrderBy|OrderByDescending|GroupBy|Join|Skip|Take|First|FirstOrDefault|Any|All|Count)\s*\(\s*[^)]*\)(?:\s*\.\s*(?:Where|Select|OrderBy|OrderByDescending|GroupBy|Join|Skip|Take|First|FirstOrDefault|Any|All|Count)\s*\(\s*[^)]*\))*/g,r;for(;(r=n.exec(e))!==null;)t.push({idiom:r[0],type:"csharp_linq_method",location:{start:r.index,end:r.index+r[0].length}});let o=/from\s+\w+\s+in\s+[^{]+(?:where\s+[^{]+)?(?:orderby\s+[^{]+)?(?:select\s+[^{;]+)?(?:group\s+[^{;]+by\s+[^{;]+)?/g;for(;(r=o.exec(e))!==null;)t.push({idiom:r[0],type:"csharp_linq_query",location:{start:r.index,end:r.index+r[0].length}});let s=/\basync\s+[^(]*\([^)]*\)(?:\s*<[^>]*>)?\s*(?:=>)?\s*{(?:(?:.|\n)*?\bawait\b(?:.|\n)*?)}/g;for(;(r=s.exec(e))!==null;)t.push({idiom:r[0],type:"csharp_async_await",location:{start:r.index,end:r.index+r[0].length}});let a=/(?:\([^)]*\)|\w+)\s*=>\s*(?:{[^}]*}|[^;]+)/g;for(;(r=a.exec(e))!==null;)t.some(i=>(i.type==="csharp_linq_method"||i.type==="csharp_linq_query")&&r.index>=i.location.start&&r.index+r[0].length<=i.location.end)||t.push({idiom:r[0],type:"csharp_lambda",location:{start:r.index,end:r.index+r[0].length}})}function L(e,t=10,n="plaintext"){let r=dn(n),o={};for(let a of e)o[a]||(o[a]=0),o[a]++;let s=[];for(let[a,l]of Object.entries(o)){if(r.has(a)&&a.length<6&&!/[_\-$#@]/.test(a))continue;let i=l;un(a,n)&&(i*=2),a.length>6&&(i*=1.5),/[_$]/.test(a)&&(i*=1.2),a.length<3&&!/[_\-$#@]/.test(a)&&(i*=.5),i=pn(a,i,n),s.push({keyword:a,score:i})}return s.sort((a,l)=>l.score-a.score).slice(0,t)}function un(e,t){return!!(/[a-z][A-Z]/.test(e)||/^[A-Z][a-z]/.test(e)||e.includes("_")&&e.length>4||/^(on|handle|process|get|set|is|has|should|with)/i.test(e)||/[a-z][0-9]/.test(e)||(t==="javascript"||t==="typescript")&&(/\$/.test(e)||/^use[A-Z]/.test(e))||t==="python"&&(/^__.*__$/.test(e)||/^self\./.test(e)))}function pn(e,t,n){switch(n){case"javascript":case"typescript":case"jsx":case"tsx":/^(use|component|props|state|render|effect|memo|callback)/.test(e)&&(t*=1.5),/^(on[A-Z]|handle[A-Z])/.test(e)&&(t*=1.3);break;case"python":/^(def|class|self|super|__init__|__main__)/.test(e)&&(t*=1.3),/^@/.test(e)&&(t*=1.4);break;case"java":case"csharp":case"c#":/^(public|private|protected|static|final|override|virtual|abstract)/.test(e)&&(t*=1.2),/^(class|interface|enum|record|struct)/.test(e)&&(t*=1.3);break;case"ruby":/^(attr_|def|class|module|require|include|extend)/.test(e)&&(t*=1.3),/^:/.test(e)&&(t*=1.2);break;case"go":/^(func|struct|interface|type|go|chan|defer|goroutine)/.test(e)&&(t*=1.3);break}return t}function dn(e){let t=new Set(["a","an","the","and","or","but","if","then","else","when","at","from","by","for","with","about","against","between","into","through","during","before","after","above","below","to","is","am","are","was","were","be","been","being","have","has","had","having","do","does","did","doing","would","should","could","ought","i","you","he","she","it","we","they","their","this","that","these","those","of","in","as","on","not","no","its","his","her"]),n=new Set(["function","class","if","else","for","while","do","switch","case","break","continue","return","try","catch","finally","throw","throws","public","private","protected","static","final","abstract","interface","extends","implements","import","export","package","namespace","var","let","const","new","this","super","null","undefined","true","false"]),r=new Set([...t,...n]);switch(e){case"javascript":case"typescript":case"jsx":case"tsx":["typeof","instanceof","async","await","yield","void","delete","module","require","console","log","window","document","event","prototype","constructor","string","number","boolean","object","array"].forEach(o=>r.add(o));break;case"python":["def","lambda","from","as","import","with","is","in","not","and","or","global","nonlocal","pass","yield","assert","del","raise","except","print","exec","eval","None","True","False","range","len","self"].forEach(o=>r.add(o));break;case"java":["void","boolean","byte","char","short","int","long","float","double","instanceof","strictfp","synchronized","transient","volatile","native","package","throws","throw","exception","assert","enum"].forEach(o=>r.add(o));break;case"csharp":case"c#":["using","namespace","where","select","from","group","into","orderby","join","equals","out","ref","in","value","is","as","void","int","string","bool","decimal","object","char","byte","sbyte","uint","long","ulong","short","ushort","double","float","dynamic","delegate","event","async","await","partial","virtual","override","sealed","base"].forEach(o=>r.add(o));break;case"ruby":["def","end","module","require","include","extend","attr","attr_reader","attr_writer","attr_accessor","lambda","proc","yield","self","nil","true","false","unless","until","begin","rescue","ensure","alias"].forEach(o=>r.add(o));break;case"go":["func","type","struct","interface","map","chan","go","select","package","import","const","var","iota","make","new","append","len","cap","nil","true","false","int","int8","int16","int32","int64","uint","uint8","uint16","uint32","uint64","float32","float64","string","byte","rune","defer","panic","recover"].forEach(o=>r.add(o));break}return r}function O(e){return e.replace(/([a-z0-9])[-_]([a-z0-9])/g,"$1$2").replace(/[.,;:(){}[\]<>?!]/g," $& ").replace(/\u0001/g,"_").split(/\s+/).filter(r=>r.length>0)}function Ye(e){let t=[],n={},r=0,s=e.replace(/\/\*[\s\S]*?\*\//g,S=>{let b=`__COMMENT_BLOCK_${r++}__`;return n[b]=S,b}).replace(/\/\/[^\n]*/g,S=>{let b=`__COMMENT_LINE_${r++}__`;return n[b]=S,b}),a={},l=0,h=s.replace(/(?<![a-zA-Z0-9_\)\]\}])\/(?:\\\/|[^\/\n])+\/[gimuy]*/g,S=>{let b=`__REGEX_${l++}__`;return a[b]=S,b}).replace(/`(?:\\`|\\\\|[^`])*`/g,S=>{let b=`__TEMPLATE_${l++}__`;a[b]=S;let x=[],v=S.match(/\${([^}]*)}/g);return v&&(v.forEach(R=>{x.push(R.slice(2,-1))}),x.forEach(R=>{let A=Ye(R);t.push(...A)})),b}).replace(/'(?:\\'|\\\\|[^'])*'|"(?:\\"|\\\\|[^"])*"/g,S=>{let b=`__STRING_${l++}__`;return a[b]=S,b}).replace(/<([A-Z][a-zA-Z0-9]*|[a-z][a-z0-9]*)((?:\s+[a-zA-Z0-9_]+(?:=(?:"|'|\{).*?(?:"|'|\}))?)*)\s*(?:\/)?>/g,(S,b,x)=>{let v=`__JSX_TAG_${l++}__`;if(a[v]=S,t.push(b),x){let R=x.match(/[a-zA-Z0-9_]+(?==)/g);R&&t.push(...R)}return v}).replace(/<\/([A-Z][a-zA-Z0-9]*|[a-z][a-z0-9]*)>/g,(S,b)=>{let x=`__JSX_CLOSING_${l++}__`;return a[x]=S,t.push(b),x}).replace(/@([a-zA-Z][a-zA-Z0-9_]*)(?:\((?:[^)(]*|\([^)(]*\))*\))?/g,(S,b)=>{let x=`__DECORATOR_${l++}__`;a[x]=S,t.push(b);let v=S.match(/\((.*)\)/);if(v&&v[1]){let R=O(v[1]);t.push(...R)}return x}).replace(/=>/g,S=>(t.push("arrow_function")," => ")).replace(/\?\./g,S=>(t.push("optional_chaining")," ?. ")).replace(/\?\?/g,S=>(t.push("nullish_coalescing")," ?? ")).replace(/import\s+(?:{[^}]*}|\*\s+as\s+[a-zA-Z][a-zA-Z0-9_]*|[a-zA-Z][a-zA-Z0-9_]*)\s+from\s+['"][^'"]*['"]/g,S=>{t.push("import");let b=S.match(/from\s+['"]([^'"]*)['"]/);b&&b[1]&&t.push(b[1]);let x=S.match(/import\s+({[^}]*}|\*\s+as\s+[a-zA-Z][a-zA-Z0-9_]*|[a-zA-Z][a-zA-Z0-9_]*)/);if(x&&x[1]){let v=x[1];if(v.startsWith("{")){let R=v.replace(/[{}]/g,"").split(",").map(A=>A.trim()).filter(A=>A.length>0);t.push(...R)}else if(v.includes("* as")){let R=v.match(/\*\s+as\s+([a-zA-Z][a-zA-Z0-9_]*)/);R&&R[1]&&t.push(R[1])}else t.push(v.trim())}return" "}),f=O(h),p=[];for(let S of f){if(S.startsWith("__")&&S.endsWith("__")){p.push(S);continue}if(["=>","?.","??"].includes(S)){p.push(S);continue}let b=S.replace(/([a-z])([A-Z])/g,"$1 $2").toLowerCase().split(" ");p.push(S),b.length>1&&p.push(...b)}let E=[];for(let S of p)if(a[S]){if(S.startsWith("__REGEX_")?E.push("regex_literal"):S.startsWith("__JSX_")?E.push("jsx_element"):S.startsWith("__DECORATOR_")?E.push("decorator"):E.push(S),S.startsWith("__STRING_")||S.startsWith("__TEMPLATE_")){let x=a[S].replace(/^[`'"](.*)[`'"]$/s,"$1"),v=O(x);E.push(...v)}}else if(n[S]){E.push("code_comment");let x=n[S].replace(/^\/\*|\*\/$/g,"").replace(/^\/\//g,"").split(/\s+/).filter(v=>/^[a-z0-9_]{3,}$/i.test(v)).map(v=>v.toLowerCase());E.push(...x)}else E.push(S);return[...new Set(E)]}function Ve(e){let t=[],n={},r=0,s=e.replace(/(?:'''[\s\S]*?'''|"""[\s\S]*?""")/g,h=>{let f=`__PYCOMMENT_BLOCK_${r++}__`;return n[f]=h,f}).replace(/#[^\n]*/g,h=>{let f=`__PYCOMMENT_LINE_${r++}__`;return n[f]=h,f}),a={},l=0,y=s.replace(/(?:f|fr|rf)(?:'''[\s\S]*?'''|"""[\s\S]*?"""|'(?:\\'|\\\\|[^'])*'|"(?:\\"|\\\\|[^"])*")/g,h=>{let f=`__PYFSTRING_${l++}__`;a[f]=h;let p=[],E=h.match(/(?<!\\){([^{}]*)}/g);return E&&(E.forEach(S=>{p.push(S.slice(1,-1))}),p.forEach(S=>{let b=Ve(S);t.push(...b)})),f}).replace(/(?:r|b|rb|br)?(?:'''[\s\S]*?'''|"""[\s\S]*?"""|'(?:\\'|\\\\|[^'])*'|"(?:\\"|\\\\|[^"])*")/g,h=>{let f=`__PYSTRING_${l++}__`;return a[f]=h,f}).replace(/@([a-zA-Z][a-zA-Z0-9_.]*)(?:\((?:[^)(]*|\([^)(]*\))*\))?/g,(h,f)=>{let p=`__PYDECORATOR_${l++}__`;a[p]=h,t.push(f);let E=h.match(/\((.*)\)/);if(E&&E[1]){let S=O(E[1]);t.push(...S)}return p}).replace(/:=/g,h=>(t.push("walrus_operator")," := ")).replace(/\[.*:.*\]/g,h=>(t.push("slice_operation"),h.slice(1,-1).split(":").forEach(E=>{if(E.trim()){let S=O(E.trim());t.push(...S)}}),h)),_=y.split(`
`),g=0;for(let h of _){if(h.trim()==="")continue;let f=h.match(/^(\s*)/),p=f?f[1].length:0;if(p!==g){if(p>g)t.push("indent");else{let S=Math.floor((g-p)/4);for(let b=0;b<S;b++)t.push("dedent")}g=p}let E=h.trim();if(E){let S=["def","class","lambda","return","yield","from","import","as","with","try","except","finally","raise","assert","if","elif","else","while","for","in","continue","break","pass","global","nonlocal","del","is","not","and","or","async","await","comprehension","self"];for(let x of S)E.includes(x)&&new RegExp(`\\b${x}\\b`,"g").test(E)&&t.push(x);let b=O(E);t.push(...b)}}(y.includes("append(")||y.includes(".extend("))&&t.push("list_operation"),(y.includes(".get(")||y.includes(".items()")||y.includes(".keys()")||y.includes(".values()"))&&t.push("dict_operation");let w=[];for(let h of t){if(h.startsWith("__")&&h.endsWith("__")){w.push(h);continue}if(h.includes("_")){let f=h.split("_").filter(p=>p.length>0);w.push(h),w.push(...f)}else w.push(h)}let T=[];for(let h of w)if(a[h]){if(h.startsWith("__PYFSTRING_")?T.push("f_string"):h.startsWith("__PYSTRING_")?T.push("string_literal"):h.startsWith("__PYDECORATOR_")?T.push("decorator"):T.push(h),h.startsWith("__PYSTRING_")||h.startsWith("__PYFSTRING_")){let p=a[h];if(p.startsWith("f")||p.startsWith("r")||p.startsWith("fr")||p.startsWith("rf")||p.startsWith("b")||p.startsWith("rb")||p.startsWith("br")){let S=/^[a-z]+/.exec(p)[0].length;p=p.substring(S)}p=p.replace(/^['"]|['"]$/g,""),p=p.replace(/^'''|'''$/g,""),p=p.replace(/^"""|"""$/g,""),p=p.replace(/{[^{}]*}/g," ");let E=O(p);T.push(...E)}}else if(n[h]){T.push("code_comment");let p=n[h].replace(/^#{1}/,"").replace(/^'''|'''$/g,"").replace(/^"""|"""$/g,"").split(/\s+/).filter(E=>/^[a-z0-9_]{3,}$/i.test(E)).map(E=>E.toLowerCase());T.push(...p)}else T.push(h);return[...new Set(T)]}function mn(e){let t=[],n={},r=0,s=e.replace(/\/\*[\s\S]*?\*\//g,f=>{let p=`__JAVA_COMMENT_BLOCK_${r++}__`;return n[p]=f,p}).replace(/\/\/[^\n]*/g,f=>{let p=`__JAVA_COMMENT_LINE_${r++}__`;return n[p]=f,p}),a={},l=0,y=s.replace(/"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'/g,f=>{let p=`__JAVASTRING_${l++}__`;return a[p]=f,p}).replace(/@([a-zA-Z][a-zA-Z0-9_.]*)(?:\s*\((?:[^)(]*|\([^)(]*\))*\))?/g,(f,p)=>{let E=`__ANNOTATION_${l++}__`;a[E]=f,t.push("annotation"),t.push(p.toLowerCase());let S=f.match(/\((.*)\)/);if(S&&S[1]){let x=S[1].split(",");for(let v of x){let R=v.split("=");R.length===2&&t.push(R[0].trim());let A=O(v);t.push(...A)}}return E}).replace(/<([^<>]*(?:<[^<>]*(?:<[^<>]*>)*[^<>]*>)*[^<>]*)>/g,f=>{let p=`__GENERIC_${l++}__`;a[p]=f,t.push("generic_type");let S=f.slice(1,-1).split(/,(?![^<>]*>)/);for(let b of S){let x=O(b.trim());t.push(...x)}return p}).replace(/(?:\(.*?\)|[a-zA-Z_][a-zA-Z0-9_]*)\s*(?:->|=>)\s*(?:{[\s\S]*?}|[^;]*)/g,f=>{let p=`__LAMBDA_${l++}__`;a[p]=f,t.push("lambda_expression");let E=O(f);return t.push(...E),p}),_=["public","private","protected","internal","static","final","abstract","override","virtual","readonly","const","sealed","partial","async","volatile","transient","synchronized","unsafe","extern"],g=y;for(let f of _){let p=new RegExp(`\\b${f}\\b`,"gi");g=g.replace(p,E=>(t.push(E.toLowerCase()),t.push("access_modifier"),E))}if(g=g.replace(/\b(?:package|namespace)\s+([a-zA-Z_][a-zA-Z0-9_.]*)/g,(f,p)=>{t.push("package_declaration");let E=p.split(".");return t.push(p),t.push(...E),f}),g=g.replace(/\b(?:import|using)\s+(?:static\s+)?([a-zA-Z_][a-zA-Z0-9_.]*(?:\.\*)?)/g,(f,p)=>{t.push("import_statement");let E=p.split(".");return t.push(p),E.length>0&&E[E.length-1]==="*"&&(E.pop(),t.push("wildcard_import")),t.push(...E),f}),/\bfrom\b.*\bin\b.*\bselect\b/i.test(g)){t.push("linq_expression");let f=["from","in","select","where","group","by","into","orderby","join","let","on","equals"];for(let p of f)new RegExp(`\\b${p}\\b`,"gi").test(g)&&t.push(`linq_${p}`)}let w=O(g);t.push(...w);let T=[];for(let f of t){if(f.startsWith("__")&&f.endsWith("__")){T.push(f);continue}if(f.includes(".")){let p=f.split(".");T.push(f),T.push(...p);continue}if(T.push(f),/[a-z][A-Z]/.test(f)){let p=f.replace(/([a-z])([A-Z])/g,"$1 $2").toLowerCase().split(" ");p.length>1&&T.push(...p)}}let h=[];for(let f of T)if(a[f]){if(f.startsWith("__JAVASTRING_")?h.push("string_literal"):f.startsWith("__ANNOTATION_")?h.push("annotation"):f.startsWith("__GENERIC_")?h.push("generic"):f.startsWith("__LAMBDA_")?h.push("lambda"):h.push(f),f.startsWith("__JAVASTRING_")){let E=a[f].replace(/^"|"$/g,"").replace(/^'|'$/g,"");if(E.trim().length>0){let S=O(E);h.push(...S)}}}else if(n[f]){h.push("code_comment");let E=n[f].replace(/^\/\*|\*\/$/g,"").replace(/^\/\//g,"").split(/\s+/).filter(S=>/^[a-z0-9_]{3,}$/i.test(S)).map(S=>S.toLowerCase());h.push(...E)}else h.push(f);return[...new Set(h)]}function et(e){let t=[],n={},r=0,s=e.replace(/=begin[\s\S]*?=end/g,p=>{let E=`__RUBY_COMMENT_BLOCK_${r++}__`;return n[E]=p,E}).replace(/#[^\n]*/g,p=>{let E=`__RUBY_COMMENT_LINE_${r++}__`;return n[E]=p,E}),a={},l=0,_=s.replace(/"(?:[^"\\]|\\.|#\{[^}]*\})*"/g,p=>{let E=`__RUBY_INTERPOLATED_STRING_${l++}__`;a[E]=p;let S=[],b=p.match(/#\{([^}]*)\}/g);return b&&(b.forEach(x=>{S.push(x.slice(2,-1))}),S.forEach(x=>{let v=et(x);t.push(...v)})),E}).replace(/('(?:[^'\\]|\\.)*'|%[qQ]?\{(?:[^\\}]|\\.)*\}|%[qQ]?\((?:[^\\)]|\\.)*\)|%[qQ]?\[(?:[^\\]]|\\.)*\]|%[qQ]?<(?:[^\\>]|\\.)*>|<<-?(['"]?)(\w+)\1[\s\S]*?\2)/g,p=>{let E=`__RUBY_STRING_${l++}__`;return a[E]=p,E}).replace(/\/(?:[^\/\\]|\\.)*\/[iomxneus]*/g,p=>{let E=`__RUBY_REGEXP_${l++}__`;return a[E]=p,t.push("regexp"),E}).replace(/:(?:@?[a-zA-Z_][a-zA-Z0-9_]*(?:[?!]|=(?!=))?|"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'|\S+)/g,p=>{let E=`__RUBY_SYMBOL_${l++}__`;a[E]=p;let S=p.substring(1);return t.push("symbol"),t.push(`symbol_${S}`),(S.endsWith("?")||S.endsWith("!"))&&t.push(`symbol_${S.slice(0,-1)}`),E});_=_.replace(/\bdo\s*(?:\|[^|]*\|)?[\s\S]*?\bend\b/g,p=>{let E=`__RUBY_BLOCK_DO_${l++}__`;a[E]=p,t.push("block_do_end");let S=p.match(/\|\s*([^|]*)\s*\|/);S&&S[1]&&S[1].split(",").forEach(R=>{t.push(R.trim())});let b=p.replace(/\bdo\s*(?:\|[^|]*\|)?/,"").replace(/\bend\b$/,""),x=O(b);return t.push(...x),E}),_=_.replace(/\{(?:\s*\|[^|]*\|\s*)?[^{}]*(?:\{[^{}]*\}[^{}]*)*\}/g,p=>{if(/^\{\s*:/.test(p)||/^\{\s*['"]/.test(p))return p;let E=`__RUBY_BLOCK_BRACE_${l++}__`;a[E]=p,t.push("block_brace");let S=p.match(/\|\s*([^|]*)\s*\|/);S&&S[1]&&S[1].split(",").forEach(R=>{t.push(R.trim())});let b=p.slice(1,-1);S&&(b=b.replace(/\|\s*[^|]*\s*\|/,""));let x=O(b);return t.push(...x),E});let g=_.replace(/\.\.(\.)?/g,p=>(t.push(p===".."?"range_operator_inclusive":"range_operator_exclusive")," "+p+" "));g=g.replace(/\bdef\s+(?:self\.)?([a-zA-Z_][a-zA-Z0-9_]*[?!=]?)/g,(p,E)=>(t.push("method_definition"),t.push(E),(E.endsWith("?")||E.endsWith("!")||E.endsWith("="))&&t.push(E.slice(0,-1)),p)),g=g.replace(/\b(?:class|module)\s+([A-Z][a-zA-Z0-9_]*(?:::[A-Z][a-zA-Z0-9_]*)*)/g,(p,E)=>{if(t.push(p.startsWith("class")?"class_definition":"module_definition"),t.push(E),E.includes("::")){let S=E.split("::");t.push(...S)}return p});let w=O(g),T=["if","unless","else","elsif","end","begin","rescue","ensure","while","until","for","break","next","redo","retry","return","super","self","nil","true","false","and","or","not","yield"];for(let p of T)new RegExp(`\\b${p}\\b`,"g").test(g)&&t.push(p);t.push(...w);let h=[];for(let p of t){if(p.startsWith("__RUBY_")){h.push(p);continue}h.push(p),(p.endsWith("?")||p.endsWith("!"))&&h.push(p.slice(0,-1)),p.endsWith("=")&&!["==","!=",">=","<=","=>"].includes(p)&&h.push(p.slice(0,-1))}let f=[];for(let p of h)if(a[p])if(p.startsWith("__RUBY_STRING_")||p.startsWith("__RUBY_INTERPOLATED_STRING_")){f.push("string_literal");let S=a[p];if(S.startsWith("'")&&S.endsWith("'")||S.startsWith('"')&&S.endsWith('"')?S=S.slice(1,-1):(S.startsWith("%q")||S.startsWith("%Q"))&&(S=S.slice(3,-1)),S=S.replace(/#\{[^}]*\}/g," "),S.trim()){let b=O(S);f.push(...b)}}else p.startsWith("__RUBY_SYMBOL_")?f.push("symbol"):p.startsWith("__RUBY_BLOCK_")?f.push("block"):p.startsWith("__RUBY_REGEXP_")?f.push("regexp"):f.push(p);else if(n[p]){f.push("code_comment");let S=n[p].replace(/^#/,"").replace(/^=begin\s*|\s*=end$/g,"").split(/\s+/).filter(b=>/^[a-z0-9_]{3,}$/i.test(b)).map(b=>b.toLowerCase());f.push(...S)}else f.push(p);return[...new Set(f)]}function fn(e){let t=[],n={},r=0,s=e.replace(/\/\*[\s\S]*?\*\//g,v=>{let R=`__GO_COMMENT_BLOCK_${r++}__`;return n[R]=v,R}).replace(/\/\/[^\n]*/g,v=>{let R=`__GO_COMMENT_LINE_${r++}__`;return n[R]=v,R}),a={},l=0,f=s.replace(/`[^`]*`/g,v=>{let R=`__GO_RAW_STRING_${l++}__`;return a[R]=v,R}).replace(/"(?:[^"\\]|\\.)*"/g,v=>{let R=`__GO_STRING_${l++}__`;return a[R]=v,R}).replace(/'(?:[^'\\]|\\.)*'/g,v=>{let R=`__GO_RUNE_${l++}__`;return a[R]=v,R}).replace(/`(?:[a-zA-Z0-9_]+:"[^"]*")+`/g,v=>{let R=`__GO_STRUCT_TAG_${l++}__`;a[R]=v,t.push("struct_tag");let A=v.slice(1,-1).split(" ");for(let k of A){if(!k.trim())continue;let[D,se]=k.split(":");if(D&&se){t.push(`tag_${D}`);let ie=se.replace(/^"|"$/g,"");if(ie)if(ie.includes(",")){let nn=ie.split(",");t.push(...nn)}else t.push(ie)}}return R}).replace(/<-/g,v=>(t.push("channel_operation")," <- ")).replace(/\bgo\s+(?:func\b|[a-zA-Z_][a-zA-Z0-9_]*\s*\()/g,v=>{t.push("goroutine");let R=v.match(/go\s+([a-zA-Z_][a-zA-Z0-9_]*)/);return R&&R[1]&&t.push(R[1]),v}).replace(/\bselect\s*{[\s\S]*?}/g,v=>{t.push("select_statement");let R=v.match(/case\s+[^:]+:/g);if(R)for(let A of R){let k=A.slice(4,-1).trim(),D=O(k);t.push(...D)}return v}).replace(/\bdefer\s+[a-zA-Z_][a-zA-Z0-9_]*\s*\(/g,v=>{t.push("defer");let R=v.match(/defer\s+([a-zA-Z_][a-zA-Z0-9_]*)/);return R&&R[1]&&t.push(R[1]),v}).replace(/\btype\s+([a-zA-Z_][a-zA-Z0-9_]*)\s+(?:struct|interface)\s*{[\s\S]*?}/g,(v,R)=>{if(t.push("type_declaration"),t.push(R),v.includes("struct")){t.push("struct_type");let A=v.match(/([a-zA-Z_][a-zA-Z0-9_]*)\s+([a-zA-Z_][a-zA-Z0-9_.*[\]]*)/g);if(A)for(let k of A){let D=k.trim().split(/\s+/);D.length>=2&&(t.push(D[0]),t.push(D[1]))}}else if(v.includes("interface")){t.push("interface_type");let A=v.match(/([a-zA-Z_][a-zA-Z0-9_]*)\s*\([\s\S]*?\)(?:\s*\([\s\S]*?\))?\s*[,{]/g);if(A)for(let k of A){let D=k.match(/([a-zA-Z_][a-zA-Z0-9_]*)/);D&&D[1]&&t.push(D[1])}}return v}),p=["make","new","len","cap","append","copy","delete","close","complex","real","imag","panic","recover"];for(let v of p){let R=new RegExp(`\\b${v}\\s*\\(`,"g");f=f.replace(R,A=>(t.push(`builtin_${v}`),A))}let E=["package","import","func","return","var","const","type","struct","interface","map","chan","go","select","case","default","defer","if","else","switch","for","range","continue","break","fallthrough","goto","nil","iota","true","false"];for(let v of E)new RegExp(`\\b${v}\\b`,"g").test(f)&&t.push(v);let S=O(f);t.push(...S);let b=[];for(let v of t){if(v.startsWith("__GO_")){b.push(v);continue}if(b.push(v),/[a-z][A-Z]/.test(v)){let R=v.replace(/([a-z])([A-Z])/g,"$1 $2").toLowerCase().split(" ");R.length>1&&b.push(...R)}}let x=[];for(let v of b)if(a[v])if(v.startsWith("__GO_STRING_")){x.push("string_literal");let A=a[v].slice(1,-1);if(A.trim().length>0){let k=O(A);x.push(...k)}}else if(v.startsWith("__GO_RAW_STRING_")){x.push("raw_string_literal");let A=a[v].slice(1,-1);if(A.includes(`
`)){let k=A.split(`
`);for(let D of k)if(D.trim()){let se=O(D.trim());x.push(...se)}}else if(A.trim()){let k=O(A);x.push(...k)}}else v.startsWith("__GO_STRUCT_TAG_")?x.push("struct_tag"):v.startsWith("__GO_RUNE_")?x.push("rune_literal"):x.push(v);else if(n[v]){x.push("code_comment");let A=n[v].replace(/^\/\*|\*\/$/g,"").replace(/^\/\//g,"").split(/\s+/).filter(k=>/^[a-z0-9_]{3,}$/i.test(k)).map(k=>k.toLowerCase());x.push(...A)}else x.push(v);return[...new Set(x)]}function Ae(e){if(typeof e!="string")return"";let t=e.toLowerCase();if(t.length<=2)return t;if(t.endsWith("ing")){let n=t.slice(0,-3);return n.length>2?n:t}if(t.endsWith("ed")){let n=t.slice(0,-2);return n.length>2?n:t}return t.endsWith("s")&&!t.endsWith("ss")?t.slice(0,-1):t.endsWith("es")||t.endsWith("ly")||t.endsWith("er")?t.slice(0,-2):t}N();import{v4 as rt}from"uuid";import hn from"crypto";import it from"path";import"acorn";W();N();import*as tt from"acorn";async function Oe(e,t){if(!e||e.trim()==="")return console.warn("Empty code content provided to buildAST"),null;let n=t.toLowerCase();if(["javascript","typescript","js","ts","jsx","tsx"].includes(n))try{return tt.parse(e,{ecmaVersion:"latest",sourceType:"module",locations:!0,ranges:!0,allowAwaitOutsideFunction:!0,allowImportExportEverywhere:!0,allowReserved:!0,allowReturnOutsideFunction:!1,allowSuperOutsideMethod:!1})}catch(r){return console.error(`Error parsing ${n} code:`,r.message),{error:!0,message:r.message,location:r.loc,type:"AST_PARSE_ERROR"}}else return console.log(`AST generation is not yet supported for ${n}`),null}M();function yn(e){return hn.createHash("sha256").update(e).digest("hex")}function _n(e){return it.basename(e)}function En(e,t){if(t)return t.toLowerCase();let n=it.extname(e).toLowerCase();return{".js":"javascript",".jsx":"javascript",".ts":"typescript",".tsx":"typescript",".py":"python",".rb":"ruby",".java":"java",".go":"go",".rs":"rust",".php":"php",".c":"c",".cpp":"cpp",".h":"c",".hpp":"cpp",".cs":"csharp",".swift":"swift",".kt":"kotlin",".html":"html",".css":"css",".scss":"scss",".json":"json",".md":"markdown",".xml":"xml",".yaml":"yaml",".yml":"yaml"}[n]||"unknown"}function ot(e,t){return e.substring(0,t).split(`
`).length}function st(e,t){let n=[],r={function:{python:/def\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*\([^)]*\)\s*:/g,ruby:/def\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(\([^)]*\))?\s*(do|\n)/g,java:/(public|private|protected|static|\s) +[\w\<\>\[\]]+\s+(\w+) *\([^\)]*\) *(\{?|[^;])/g,go:/func\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*\([^)]*\)\s*(?:\([^)]*\))?\s*\{/g,php:/function\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*\([^)]*\)\s*\{/g,default:/function\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*\([^)]*\)\s*\{/g},class:{python:/class\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(\([^)]*\))?\s*:/g,ruby:/class\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*((<|::)\s*[A-Za-z0-9_:]*)?/g,java:/class\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(extends\s+[A-Za-z0-9_]+)?\s*(implements\s+[A-Za-z0-9_,\s]+)?\s*\{/g,go:/type\s+([a-zA-Z_][a-zA-Z0-9_]*)\s+struct\s*\{/g,php:/class\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(extends\s+[A-Za-z0-9_]+)?\s*(implements\s+[A-Za-z0-9_,\s]+)?\s*\{/g,default:/class\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(extends\s+[A-Za-z0-9_]+)?\s*\{/g},variable:{python:/(^|\s)([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(?!==)/g,ruby:/(^|\s)([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(?!=)/g,java:/(private|protected|public|static|\s) +[\w\<\>\[\]]+\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*[^;]+;/g,go:/var\s+([a-zA-Z_][a-zA-Z0-9_]*)\s+[\w\[\]]+(\s*=\s*[^;]+)?/g,php:/(\$[a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(?!=)/g,default:/(const|let|var)\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*[^;]+;/g}},o=r.function[t]||r.function.default,s;for(;(s=o.exec(e))!==null;){let l=s[1]||s[2],i=s.index,u=ot(e,i),m=u+10;n.push({type:"function",name:l,start_position:i,start_line:u,end_line:m,raw_content:e.substring(i,i+s[0].length+100)})}let a=r.class[t]||r.class.default;for(;(s=a.exec(e))!==null;){let l=s[1],i=s.index,u=ot(e,i),m=u+20;n.push({type:"class",name:l,start_position:i,start_line:u,end_line:m,raw_content:e.substring(i,i+s[0].length+500)})}return n}function wn(e,t){let n=[],r=[],o=new Map,s=new WeakSet;function a(i,u,m,y,_,g,w,T=null,h={}){let f={type:i,name:u,start_position:m,end_position:y,start_line:_,end_line:g,raw_content:w,custom_metadata:h};return n.push(f),T&&r.push({source:T,target:f,type:"contains"}),f}function l(i,u=null,m=null,y=null){if(!i||typeof i!="object"||s.has(i)||(s.add(i),!i.loc))return;let _=i.loc?.start?.line,g=i.loc?.end?.line,w=i.start,T=i.end,h=t.substring(w,T),f=null;switch(i.type){case"FunctionDeclaration":{let p=i.id?.name||"anonymous",E=i.params?.map(S=>S.type==="Identifier"?S.name:"param");f=a("function",p,w,T,_,g,h,m,{ast_node_type:i.type,params:E||[],is_async:i.async||!1,is_generator:i.generator||!1}),o.set(i,f),i.body&&l(i.body,i,f,p);break}case"FunctionExpression":case"ArrowFunctionExpression":{let p="anonymous",E="function_expression";u&&u.type==="VariableDeclarator"&&u.id?(p=u.id.name,E="function"):u&&u.type==="AssignmentExpression"&&u.left?u.left.type==="Identifier"?(p=u.left.name,E="function"):u.left.type==="MemberExpression"&&u.left.property&&(p=u.left.property.name,E="method"):u&&u.type==="Property"&&u.key?(p=u.key.name||u.key.value||"anonymous",E="method"):u&&u.type==="MethodDefinition"&&u.key&&(p=u.key.name||"anonymous",E="method");let S=i.params?.map(b=>b.type==="Identifier"?b.name:"param");f=a(E,p,w,T,_,g,h,m,{ast_node_type:i.type,params:S||[],is_async:i.async||!1,is_generator:i.generator||!1,is_arrow:i.type==="ArrowFunctionExpression"}),o.set(i,f),i.body&&l(i.body,i,f,p);break}case"ClassDeclaration":{let p=i.id?.name||"anonymous";f=a("class",p,w,T,_,g,h,m,{ast_node_type:i.type}),o.set(i,f),i.superClass&&i.superClass.type==="Identifier"&&r.push({source:f,target:{name:i.superClass.name,type:"class"},type:"extends"}),i.body&&l(i.body,i,f,p);break}case"ClassExpression":{let p=i.id?.name||"anonymous";u&&u.type==="VariableDeclarator"&&u.id&&(p=u.id.name),f=a("class",p,w,T,_,g,h,m,{ast_node_type:i.type}),o.set(i,f),i.superClass&&i.superClass.type==="Identifier"&&r.push({source:f,target:{name:i.superClass.name,type:"class"},type:"extends"}),i.body&&l(i.body,i,f,p);break}case"MethodDefinition":{let p=i.key?.name||i.key?.value||"anonymous",E=i.kind||"method";f=a(E==="constructor"?"constructor":"method",p,w,T,_,g,h,m,{ast_node_type:i.type,kind:E,is_static:!!i.static,is_async:i.value?.async||!1,is_generator:i.value?.generator||!1}),o.set(i,f),i.value&&l(i.value,i,f,p);break}case"VariableDeclaration":{i.declarations.forEach(p=>{l(p,i,m,y)});break}case"VariableDeclarator":{if(i.id&&i.id.type==="Identifier"){let p=i.id.name,E=!1,S="variable";i.init?["FunctionExpression","ArrowFunctionExpression","ClassExpression","ObjectExpression","NewExpression"].includes(i.init.type)?(E=!0,i.init.type==="ObjectExpression"&&(S="object")):i.init.type==="Literal"&&typeof i.init.value=="object"?(E=!0,S="object"):m&&m.type!=="variable"&&(E=!0):E=!0,E&&(f=a(S,p,w,T,_,g,h,m,{ast_node_type:i.type,variable_kind:u?.kind||"var"}),o.set(i,f))}i.init&&l(i.init,i,m||f,y);break}case"ImportDeclaration":{let p=i.source.value,E=i.specifiers.map(S=>S.type==="ImportDefaultSpecifier"?{type:"default",name:S.local.name}:S.type==="ImportNamespaceSpecifier"?{type:"namespace",name:S.local.name}:{type:"named",name:S.local.name,imported:S.imported?.name||S.local.name});f=a("import",p,w,T,_,g,h,m,{ast_node_type:i.type,specifiers:E}),o.set(i,f),E.forEach(S=>{r.push({source:f,target:{name:S.name,type:"imported"},type:"imports",metadata:{source_module:p,import_type:S.type,original_name:S.imported}})});break}case"ExportNamedDeclaration":{let p="named_export";i.declaration?i.declaration.type==="FunctionDeclaration"||i.declaration.type==="ClassDeclaration"?p=i.declaration.id?.name||"anonymous":i.declaration.type==="VariableDeclaration"&&i.declaration.declarations.length>0&&(p=i.declaration.declarations[0].id?.name||"anonymous"):i.specifiers&&i.specifiers.length>0&&(p=i.specifiers.map(E=>E.exported?.name||E.local?.name||"anonymous").join(",")),f=a("export",p,w,T,_,g,h,m,{ast_node_type:i.type,source:i.source?.value}),o.set(i,f),i.declaration&&l(i.declaration,i,m,y),i.specifiers&&i.specifiers.forEach(E=>{E.local&&E.exported&&r.push({source:f,target:{name:E.local.name,type:"exported"},type:"exports",metadata:{exported_as:E.exported.name,source_module:i.source?.value}})});break}case"ExportDefaultDeclaration":{let p="default";i.declaration&&(i.declaration.type==="FunctionDeclaration"||i.declaration.type==="ClassDeclaration"?p=i.declaration.id?.name||"default":i.declaration.type==="Identifier"&&(p=i.declaration.name)),f=a("export",p,w,T,_,g,h,m,{ast_node_type:i.type,is_default:!0}),o.set(i,f),i.declaration&&l(i.declaration,i,m,y),r.push({source:f,target:{name:p,type:"exported"},type:"exports",metadata:{is_default:!0}});break}case"InterfaceDeclaration":{let p=i.id?.name||"anonymous";f=a("interface",p,w,T,_,g,h,m,{ast_node_type:i.type}),o.set(i,f),i.extends&&i.extends.forEach(E=>{E.expression&&E.expression.type==="Identifier"&&r.push({source:f,target:{name:E.expression.name,type:"interface"},type:"extends"})}),i.body&&l(i.body,i,f,p);break}case"TypeAliasDeclaration":{let p=i.id?.name||"anonymous";f=a("type_alias",p,w,T,_,g,h,m,{ast_node_type:i.type}),o.set(i,f),i.typeAnnotation&&l(i.typeAnnotation,i,f,p);break}case"EnumDeclaration":{let p=i.id?.name||"anonymous";f=a("enum",p,w,T,_,g,h,m,{ast_node_type:i.type}),o.set(i,f),i.members&&i.members.forEach(E=>{l(E,i,f,p)});break}case"CallExpression":{m&&(i.callee.type==="Identifier"?r.push({source:m,target:{name:i.callee.name,type:"function"},type:"calls"}):i.callee.type==="MemberExpression"&&i.callee.property&&i.callee.property.type==="Identifier"&&r.push({source:m,target:{name:i.callee.property.name,type:"method"},type:"calls",metadata:{object:i.callee.object.type==="Identifier"?i.callee.object.name:null}})),i.callee&&l(i.callee,i,m,y),i.arguments&&i.arguments.forEach(p=>{l(p,i,m,y)});break}default:for(let p in i){let E=i[p];if(!(p==="type"||p==="loc"||p==="range"||p==="parent"))if(Array.isArray(E))for(let S of E)l(S,i,m||f,y);else E&&typeof E=="object"&&l(E,i,m||f,y)}}}return l(e),{entities:n,relationships:r}}async function at(e,t,n){try{let r=yn(t),o=_n(e),s=En(e,n),l=await C(`
      SELECT entity_id, content_hash 
      FROM code_entities 
      WHERE file_path = ? AND entity_type = 'file'
    `,[e]),i;if(l&&l.length>0){if(i=l[0].entity_id,l[0].content_hash===r){c("info",`File ${e} is unchanged, skipping indexing`);return}await C(`
        UPDATE code_entities
        SET raw_content = ?, content_hash = ?, language = ?, last_modified_at = CURRENT_TIMESTAMP
        WHERE entity_id = ?
      `,[t,r,s,i]),await C(`
        DELETE FROM code_entities
        WHERE parent_entity_id = ?
      `,[i]),await C(`
        DELETE FROM entity_keywords
        WHERE entity_id = ?
      `,[i])}else i=rt(),await C(`
        INSERT INTO code_entities (
          entity_id, file_path, entity_type, name, content_hash, raw_content, language
        ) VALUES (?, ?, ?, ?, ?, ?, ?)
      `,[i,e,"file",o,r,t,s]);let u=[],m=[];if(s==="javascript"||s==="typescript"){let w=await Oe(t,s);if(w&&!w.error){let T=wn(w,t);u=T.entities,m=T.relationships}else c("error",`Error building AST for ${e}:`,{error:w?.error||"Unknown error"}),u=st(t,s)}else u=st(t,s);let y=[],_=[];for(let w of u){let T=rt();w.db_entity_id=T;let h=w.custom_metadata?JSON.stringify(w.custom_metadata):null;y.push(C(`
          INSERT INTO code_entities (
            entity_id, parent_entity_id, file_path, entity_type, name, 
            start_line, end_line, raw_content, language, custom_metadata
          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
          `,[T,i,e,w.type,w.name,w.start_line,w.end_line,w.raw_content,s,h]));let f=I(w.raw_content);L(f,20,s).forEach(E=>{_.push(C(`
            INSERT INTO entity_keywords (
              entity_id, keyword, term_frequency, weight, keyword_type
            ) VALUES (?, ?, ?, ?, ?)
            `,[T,E.keyword,E.score||1,E.score||1,"term"]))})}y.length>0&&(await Promise.all(y),c("debug",`Inserted ${y.length} entities for ${e}`)),_.length>0&&(await Promise.all(_),c("debug",`Inserted ${_.length} keywords for ${e}`));let g=[];for(let w of m){if(!w.source||!w.target)continue;let T=w.source.db_entity_id,h=w.target.db_entity_id;w.type==="contains"&&T&&h?g.push(C(`
            UPDATE code_entities
            SET parent_entity_id = ?
            WHERE entity_id = ?
            `,[T,h])):T&&h?g.push(Ie(T,h,w.type,1,w.metadata||{})):T&&!h&&w.target.name&&g.push((async()=>{let f=await C("SELECT entity_id FROM code_entities WHERE name = ? AND entity_type = ?",[w.target.name,w.target.type]);f&&f.length>0&&await Ie(T,f[0].entity_id,w.type,1,w.metadata||{})})())}g.length>0&&(await Promise.all(g),c("debug",`Processed ${g.length} relationships for ${e}`)),c("info",`Successfully indexed file ${e}`)}catch(r){throw c("error",`Error indexing file ${e}:`,{error:r}),r}}async function ct(e){try{if(c("debug","===== INDEX MESSAGE - START ====="),c("debug","Input parameters:",{message_id:e.message_id,conversation_id:e.conversation_id,role:e.role,content_length:e.content?e.content.length:0,timestamp:e.timestamp}),!e.message_id||!e.conversation_id||!e.role||!e.content)throw new Error("Message object missing required properties");let t=e.relatedContextEntityIds?e.relatedContextEntityIds:null,n=e.semantic_markers?e.semantic_markers:null,r=e.sentiment_indicators?e.sentiment_indicators:null,o=e.timestamp instanceof Date?e.timestamp.toISOString():e.timestamp||new Date().toISOString(),s=`
      SELECT message_id FROM conversation_history 
      WHERE message_id = ?
    `;c("debug","Checking if message exists:",{message_id:e.message_id});let a=await C(s,[e.message_id]);if(c("debug","Existing message check result:",{result:JSON.stringify(a)}),a&&a.rows&&a.rows.length>0){c("debug","Updating existing message:",{message_id:e.message_id});try{let u=`UPDATE conversation_history 
         SET content = ?, 
             summary = ?, 
             user_intent = ?, 
             topic_segment_id = ?, 
             related_context_entity_ids = ?, 
             semantic_markers = ?, 
             sentiment_indicators = ?
         WHERE message_id = ?`,m=[e.content,e.summary||null,e.userIntent||null,e.topicSegmentId||null,t,n,r,e.message_id];c("debug","Update query parameters:",{message_id:e.message_id,content_length:e.content?e.content.length:0});let y=await C(u,m);c("debug","Message update result:",{result:JSON.stringify(y)})}catch(u){throw c("error","Update error:",{error:u}),u}}else{c("debug","Inserting new message:",{message_id:e.message_id});try{let u=`INSERT INTO conversation_history (
          message_id, 
          conversation_id, 
          role, 
          content, 
          timestamp, 
          summary, 
          user_intent, 
          topic_segment_id, 
          related_context_entity_ids, 
          semantic_markers, 
          sentiment_indicators
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,m=[e.message_id,e.conversation_id,e.role,e.content,o,e.summary||null,e.userIntent||null,e.topicSegmentId||null,t,n,r];c("debug","Insert query parameters:",{message_id:e.message_id,conversation_id:e.conversation_id,role:e.role,timestamp:o});let y=await C(u,m);c("debug","Message insert result:",{result:JSON.stringify(y)})}catch(u){throw c("error","Insert error:",{error:u}),c("error","Error stack:",{stack:u.stack}),u}}let l=I(e.content),i=L(l);return c("debug","===== INDEX MESSAGE - COMPLETE ====="),c("info","Successfully indexed message:",{message_id:e.message_id}),{messageId:e.message_id,keywords:i}}catch(t){throw c("error","===== INDEX MESSAGE - ERROR ====="),c("error",`Error indexing message ${e?.message_id}:`,{error:t.message}),c("error","Error stack:",{stack:t.stack}),t}}N();import{v4 as kn}from"uuid";function ut(e,t,n=[]){if(!e||e.length===0)return[];let r=[],o=t,s=e.reduce((l,i)=>l+i.score,0),a=e.map(l=>Math.max(100,Math.floor(l.score/s*t)));for(let l=0;l<e.length;l++){let i=e[l],u=i.content||i.entity.raw_content||"";if(!u)continue;let m=Math.min(a[l],o);if(!(m<50)){if(u.length<=m)r.push({entity_id:i.entity.entity_id,summarizedContent:u,originalScore:i.score}),o-=u.length;else{let y;i.entity.entity_type?y=pt(i.entity,m,n):y=P(u,m),y&&(r.push({entity_id:i.entity.entity_id,summarizedContent:y,originalScore:i.score}),o-=y.length)}if(o<=50)break;if(l<e.length-1){let y=e.length-l-1,_=e.slice(l+1).reduce((g,w)=>g+w.score,0);for(let g=l+1;g<e.length;g++)a[g]=Math.max(100,Math.floor(e[g].score/_*o))}}}return o>200&&r.length>0&&Sn(r,e,o,n),r}function Sn(e,t,n,r){let o=new Map;e.forEach(l=>{o.set(l.entity_id,l)});let s=t.filter(l=>o.has(l.entity.entity_id)).sort((l,i)=>i.score-l.score),a=Math.floor(n/s.length);for(let l of s){let i=o.get(l.entity.entity_id),u=i.summarizedContent.length,m=u+a,y=l.content||l.entity.raw_content||"";if(y.length<=m)i.summarizedContent=y,n-=y.length-u;else{let _;l.entity.entity_type?_=pt(l.entity,m,r):_=P(y,m),_&&_.length>u&&(n-=_.length-u,i.summarizedContent=_)}if(n<100)break}}function P(e,t,n="rule-based"){return e?e.length<=t?e:(n==="ml-light"&&(console.log("ML-light summarization not fully implemented, falling back to rule-based method"),n="rule-based"),In(e,t)):""}function pt(e,t,n=[]){if(!e)return"";if(e.summary&&e.summary.length<=t)return e.summary;if(!e.raw_content)return`${e.name} (${e.entity_type})`;if(e.raw_content.length<=t)return e.raw_content;switch((e.entity_type||"").toLowerCase()){case"function":case"method":return Tn(e,t,n);case"class":return vn(e,t,n);case"file":return Cn(e,t,n);default:return P(e.raw_content,t)}}function Tn(e,t,n){let o=e.raw_content.split(`
`),s=xn(o);if(s.length>=t-10)return q(s,t);let a=ke(o,n,"function"),l=s,i=t-s.length,u=An(o);return u&&u.length<i*.4&&(l+=`
`+u,i-=u.length),l+=`
`+Le(a,i),q(l,t)}function vn(e,t,n){let o=e.raw_content.split(`
`),s=bn(o),a=Rn(o),l=s,i=t-s.length;if(a&&a.length<i&&(l+=`
`+a,i-=a.length),i>50){let u=ke(o,n,"class");l+=`
`+Le(u,i)}return q(l,t)}function Cn(e,t,n){let r=e.raw_content,o=r.split(`
`);if((e.name||"").toLowerCase().includes("readme")||(e.name||"").toLowerCase().includes("doc"))return P(r,t);let a=o.filter(y=>y.trim().startsWith("import ")||y.trim().startsWith("require(")||y.trim().startsWith("from ")||y.trim().includes(" from ")).join(`
`),l=o.filter(y=>y.trim().startsWith("export ")||y.trim().startsWith("module.exports")).join(`
`),i=`// File: ${e.name||"Unnamed"}
`;a&&a.length<t*.3&&(i+=`// Imports:
${a}
`);let u=t-i.length;l&&l.length<u*.3&&(i+=`// Exports:
${l}
`);let m=t-i.length;if(m>100){let y=ke(o,n,"file");i+=`// Key sections:
${Le(y,m)}`}return q(i,t)}function xn(e){for(let t=0;t<e.length;t++){let n=e[t].trim();if(n.match(/^(async\s+)?(function\s+\w+|\w+\s*=\s*(async\s+)?function|\w+\s*:\s*(async\s+)?function|const\s+\w+\s*=\s*(async\s+)?(\([^)]*\)|[^=]*)\s*=>)/)){let r=n;if(!n.includes("{")&&!n.includes("=>")){let o=t+1;for(;o<e.length&&!e[o].includes("{");)r+=" "+e[o].trim(),o++;o<e.length&&(r+=" "+e[o].trim().split("{")[0]+"{ ... }")}else n.includes("{")?r=r.split("{")[0]+"{ ... }":n.includes("=>")&&(r=r.split("=>")[0]+"=> { ... }");return r}}return"function() { ... }"}function bn(e){for(let t=0;t<e.length;t++){let n=e[t].trim();if(n.startsWith("class ")){let r=n;if(n.includes("{"))r=r.split("{")[0]+"{ ... }";else{let o=t+1;for(;o<e.length&&!e[o].includes("{");)r+=" "+e[o].trim(),o++;o<e.length&&(r+=" "+e[o].trim().split("{")[0]+"{ ... }")}return r}}return"class { ... }"}function Rn(e){let t=[],n=/^\s*(async\s+)?(\w+)\s*\([^)]*\)/,r=Math.min(5,e.length);for(let o=r;o<e.length;o++){let s=e[o].match(n);s&&!e[o].trim().startsWith("//")&&t.push(s[2])}return t.length===0?"":`// Methods: ${t.join(", ")}`}function An(e){let t=!1,n=[];for(let r=0;r<Math.min(20,e.length);r++){let o=e[r].trim();if(o.startsWith("/**")){t=!0,n.push(o);continue}if(t&&(n.push(o),o.endsWith("*/")))break;if(!t&&n.length===0&&o.startsWith("//"))n.push(o);else if(!t&&n.length>0&&o.startsWith("//"))n.push(o);else if(!t&&n.length>0)break}return n.join(`
`)}function ke(e,t,n){let r=[],o={function:[/\breturn\s+/,/\bthrow\s+/,/\bif\s*\(/,/\bfor\s*\(/,/\bcatch\s*\(/,/\bswitch\s*\(/,/\bconst\s+\w+\s*=/,/\blet\s+\w+\s*=/,/\/\/ [A-Z]/],class:[/\bconstructor\s*\(/,/\bstatic\s+/,/\bget\s+\w+\s*\(/,/\bset\s+\w+\s*\(/,/\bextends\s+/,/\bimplements\s+/,/\breturn\s+/],file:[/\bexport\s+(default\s+)?function\s+/,/\bexport\s+(default\s+)?class\s+/,/\bexport\s+(default\s+)?const\s+/,/\bmodule\.exports\s*=/,/\bimport\s+/,/\brequire\s*\(/]},s=[/\/\/ TODO:/,/\/\/ FIXME:/,/\/\/ NOTE:/,/\/\*\*/],a=[...o[n]||[],...s];for(let l=0;l<e.length;l++){let i=e[l].trim();if(!i)continue;let u=0;if(t.length>0){let m=I(i,{includeIdentifiers:!0}),y=t.filter(_=>m.includes(_.toLowerCase())||i.toLowerCase().includes(_.toLowerCase()));u+=y.length*3}for(let m of a)if(m.test(i)){u+=2;break}l<5&&(u+=1),(i.includes("{")||i.includes("}"))&&(u+=.5),r.push({line:i,score:u,index:l})}return r.sort((l,i)=>i.score-l.score)}function Le(e,t){let n=[],r=0,o=e.filter(s=>s.score>=3);for(let s of o)r+s.line.length+1<=t&&(n.push(s),r+=s.line.length+1);if(r<t){let s=e.filter(a=>a.score<3).sort((a,l)=>l.score-a.score);for(let a of s)r+a.line.length+1<=t&&(n.push(a),r+=a.line.length+1)}return n.sort((s,a)=>s.index-a.index),n.map(s=>s.line).join(`
`)}function In(e,t){let n=Nn(e);if(n.length<=3)return q(e,t);let r=n.map((l,i)=>({text:l,score:On(l,i,n.length),index:i}));r.sort((l,i)=>i.score-l.score);let o=[],s=0;for(let l of r)if(s+l.text.length+1<=t)o.push(l),s+=l.text.length+1;else{if(o.length===0)return q(l.text,t);break}o.sort((l,i)=>l.index-i.index);let a=o.map(l=>l.text).join(" ");return q(a,t)}function Nn(e){let t=/[^.!?]*[.!?](?:\s|$)/g,n=e.match(t);return n?n.map(r=>r.trim()).filter(r=>r.length>0):[e]}function On(e,t,n){let r=0;t===0?r+=3:t===n-1?r+=2:(t===1||t===n-2)&&(r+=1);let o=e.split(/\s+/).length;o>=5&&o<=20?r+=1:(o<3||o>30)&&(r-=1);let s=["key","important","significant","critical","essential","main","primary","crucial","fundamental","vital","result","conclude","summary","therefore","thus","implement","function","method","class","object","return","export","import","require","define"],a=e.toLowerCase();for(let l of s)if(a.includes(l)){r+=1;break}return(a.includes("function")||a.includes("class")||a.includes("=")||a.includes("return")||e.includes("()")||e.includes("{}")||e.includes("[]"))&&(r+=2),r}function q(e,t){if(e.length<=t)return e;for(let n=t-1;n>=0;n--)if(e[n]==="."||e[n]==="!"||e[n]==="?")return e.substring(0,n+1);for(let n=t-1;n>=0;n--)if(e[n]===" ")return e.substring(0,n)+"...";return e.substring(0,t-3)+"..."}async function dt(e,t={}){if(!e||e.length===0)return[];let n=t.detailLevel||"medium",r=t.targetTokens||2e3,o=t.queryKeywords||[],s=1/6,a=Math.floor(r/s),l=e.map(m=>({entity:{entity_id:m.entity_id,entity_type:m.type,raw_content:m.content,name:m.name,file_path:m.path},score:m.relevanceScore||.5,content:m.content})),i=a;switch(n){case"high":i=Math.floor(a*1.3);break;case"low":i=Math.floor(a*.7);break;default:break}return ut(l,i,o).map(m=>{let y=e.find(_=>_.entity_id===m.entity_id);return y?{...y,content:m.summarizedContent,compression:{originalLength:y.content.length,compressedLength:m.summarizedContent.length,compressionRatio:m.summarizedContent.length/y.content.length,detailLevel:n}}:null}).filter(Boolean)}var Ln=["anyway","moving on","changing subject","regarding","switching to","on another note","back to","speaking of","about","let's talk about","with respect to","turning to","shifting to","let's discuss","instead"],Dn=["what","how","why","can","could","would","should","is","are","do","does","did","have","has","will"];async function mt(e,t){try{if(!e?.content||!t||t.length===0)return!1;let n=t.slice(-5),r=Mn(e,n),o=$n(e,n),s=Pn(e.content),a=Fn(e,n);return r*.4+o*.3+(s?.8:0)*.2+a*.1>.45}catch(n){return console.error("Error detecting topic shift:",n),!1}}function Mn(e,t){let n=I(e.content),r=L(n,10),o=new Set(r);if(o.size===0)return 0;let s=new Set;for(let l of t){let i=I(l.content);L(i,10).forEach(m=>s.add(m))}let a=0;for(let l of o)s.has(l)||a++;return a/o.size}function $n(e,t){if(!e.entity_ids||!Array.isArray(e.entity_ids)||e.entity_ids.length===0)return 0;let n=new Set;for(let o of t)o.entity_ids&&Array.isArray(o.entity_ids)&&o.entity_ids.forEach(s=>n.add(s));if(n.size===0)return e.entity_ids.length>0?1:0;let r=0;for(let o of e.entity_ids)n.has(o)||r++;return r/e.entity_ids.length}function Pn(e){if(!e)return!1;let t=e.toLowerCase();for(let n of Ln)if(new RegExp(`\\b${n}\\b`,"i").test(t))return!0;return!1}function Fn(e,t){if(!De(e.content))return 0;let r=0,o=0;for(let s=0;s<t.length-1;s++)t[s].role==="user"&&De(t[s].content)&&(r++,s+1<t.length&&t[s+1].role==="assistant"&&o++);if(r>0&&o>0){let s=Un(t,a=>a.role==="user"&&De(a.content));if(s>=0){let a=t[s].content;return zn(e.content,a)}}return .2}function De(e){if(!e)return!1;if(e.includes("?"))return!0;let t=e.toLowerCase().trim();for(let n of Dn)if(t.startsWith(n+" "))return!0;return!1}function zn(e,t){let n=I(e),r=I(t),o=new Set(n),s=new Set(r),a=0;for(let u of o)s.has(u)&&a++;let l=o.size+s.size-a;return 1-(l>0?a/l:0)}function Un(e,t){for(let n=e.length-1;n>=0;n--)if(t(e[n]))return n;return-1}async function le(e,t,n={}){try{let r=kn(),o=n.name;if(!o){o=`New Topic ${new Date().toISOString()}`;try{let y=await C("SELECT content FROM conversation_history WHERE message_id = ?",[t]);if(y&&y.length>0){let _=y[0].content,g=_.split(/\s+/).slice(0,5).join(" ");g.length>3&&(o=`Topic: ${g}${g.length<_.length?"...":""}`)}}catch(m){console.warn("Could not fetch message content for topic naming:",m)}}let s=n.primaryEntities?JSON.stringify(n.primaryEntities):"[]",a=n.keywords?JSON.stringify(n.keywords):"[]",l=new Date().toISOString();await C("PRAGMA foreign_keys = OFF;");let i=`
      INSERT INTO conversation_topics (
        topic_id,
        conversation_id,
        topic_name,
        description,
        start_message_id,
        start_timestamp,
        primary_entities,
        keywords
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `,u=[r,e,o,n.description||"",t,l,s,a];return await C(i,u),await C("PRAGMA foreign_keys = ON;"),console.log(`Created new topic segment: ${o} (${r})`),r}catch(r){throw console.error("Error creating new topic segment:",r),new Error(`Failed to create new topic segment: ${r.message}`)}}async function ft(e,t){try{let r=new Date().toISOString();try{let l=await C("SELECT timestamp FROM conversation_history WHERE message_id = ?",[t]);l&&l.length>0&&l[0].timestamp&&(r=l[0].timestamp)}catch(a){console.warn("Could not fetch message timestamp, using current timestamp:",a)}await C(`
      UPDATE conversation_topics
      SET end_message_id = ?,
          end_timestamp = ?
      WHERE topic_id = ?
    `,[t,r,e]),console.log(`Closed topic segment: ${e} with end message: ${t}`)}catch(n){throw console.error(`Error closing topic segment ${e}:`,n),new Error(`Failed to close topic segment: ${n.message}`)}}async function ue(e){try{let n=await C(`
      SELECT * FROM conversation_topics
      WHERE conversation_id = ?
        AND end_message_id IS NULL
      ORDER BY start_timestamp DESC
      LIMIT 1
    `,[e]);if(!n.rows||n.rows.length===0)return null;let r=n.rows[0];try{let o={...r};return r.keywords&&typeof r.keywords=="string"&&(o.keywords=JSON.parse(r.keywords)),r.related_entities&&typeof r.related_entities=="string"&&(o.related_entities=JSON.parse(r.related_entities)),r.primary_entities&&typeof r.primary_entities=="string"&&(o.primary_entities=JSON.parse(r.primary_entities)),o}catch(o){return console.error(`Error parsing JSON fields for topic ${r.topic_id}:`,o),r}}catch(t){throw console.error(`Error getting active topic for conversation ${e}:`,t),t}}async function gt(e){try{if(!e||e.length===0)return"Untitled Topic";let n=`
      SELECT content, related_context_entity_ids
      FROM conversation_history 
      WHERE message_id IN (${e.map(()=>"?").join(",")})
      ORDER BY timestamp ASC
    `,r=await C(n,e);if(!r||r.length===0)return"Untitled Topic";let o=r.map(u=>u.content).join(" "),s=I(o),a=L(s,3),l=new Set;for(let u of r)if(u.related_context_entity_ids){let m;try{if(m=typeof u.related_context_entity_ids=="string"?JSON.parse(u.related_context_entity_ids):u.related_context_entity_ids,Array.isArray(m)&&m.length>0){let y=y.slice(0,2),_=`
              SELECT name FROM code_entities WHERE id IN (${y.map(()=>"?").join(",")})
            `,g=await C(_,y);g&&g.length>0&&g.forEach(w=>l.add(w.name))}}catch(y){console.warn("Error parsing entity IDs",y)}}let i;if(l.size>0)i=`Discussion about ${Array.from(l).slice(0,2).join(" and ")}`;else if(a.length>0)i=`Topic: ${a.join(", ")}`;else{let u=r[0].content,m=u.split(/\s+/).slice(0,5).join(" ");i=`Topic: ${m}${u.length>m.length?"...":""}`}return i.length>50&&(i=i.substring(0,47)+"..."),i}catch(t){return console.error("Error generating topic name:",t),"Untitled Topic"}}async function ht(e){try{let n=await C(`
      SELECT * FROM conversation_topics
      WHERE conversation_id = ?
      ORDER BY start_timestamp ASC
    `,[e]);if(!n||n.length===0)return{rootTopics:[],topicMap:{}};let r={};for(let s of n)try{s.primary_entities=s.primary_entities?JSON.parse(s.primary_entities):[],s.keywords=s.keywords?JSON.parse(s.keywords):[],s.children=[],r[s.topic_id]=s}catch(a){console.warn(`Error parsing JSON fields for topic ${s.topic_id}:`,a),s.primary_entities=[],s.keywords=[],s.children=[],r[s.topic_id]=s}let o=[];for(let s of n)s.parent_topic_id&&r[s.parent_topic_id]?r[s.parent_topic_id].children.push(s):o.push(s);return{rootTopics:o,topicMap:r}}catch(t){throw console.error(`Error building topic hierarchy for conversation ${e}:`,t),new Error(`Failed to build topic hierarchy: ${t.message}`)}}N();import{v4 as Bn}from"uuid";var pe={debugging:{keywords:["error","stacktrace","bug","fix","not working","exception","issue","failed","failing","crash","debug","broken","incorrect","problem","trouble","unexpected","diagnose","investigate"],patterns:[/TypeError:/i,/Error:/i,/Exception:/i,/failed with/i,/doesn't work/i,/not working/i,/unexpected behavior/i],weight:1},feature_planning:{keywords:["requirement","design","new feature","implement","proposal","roadmap","spec","specification","plan","architecture","blueprint","feature","enhancement","improvement","add","create","develop","extend"],patterns:[/could we add/i,/we need to implement/i,/design for/i,/planning to/i,/we should build/i,/requirement is to/i],weight:.9},code_review:{keywords:["PR","pull request","LGTM","suggestion","change request","review","approve","feedback","comment","revision","looks good","merge","style","convention","readability","clarity"],patterns:[/pull request #\d+/i,/PR #\d+/i,/please review/i,/looks good to me/i,/suggested changes/i,/can you review/i],weight:.85},learning:{keywords:["learn","understand","explanation","tutorial","example","how does","what is","meaning","concept","definition","help me understand","documentation","guide","explain","clarify","teach"],patterns:[/how does (it|this) work/i,/what (is|does|are)/i,/could you explain/i,/I'm trying to understand/i,/explain how/i],weight:.8},code_generation:{keywords:["generate","create","build","write","implement","code for","function","class","method","module","script","algorithm","solution"],patterns:[/can you (write|create|generate)/i,/implement a/i,/create a function/i,/generate code for/i,/need code to/i],weight:.9},optimization:{keywords:["optimize","performance","efficiency","slow","faster","speed up","reduce","improve","bottleneck","memory","CPU","utilization","profiling","benchmark"],patterns:[/too slow/i,/needs to be faster/i,/performance issue/i,/optimize for/i,/reduce (memory|time|usage)/i],weight:.85},refactoring:{keywords:["refactor","restructure","rewrite","reorganize","clean up","improve","modernize","update","simplify","decouple","modularity","readability"],patterns:[/need to refactor/i,/code smells/i,/technical debt/i,/simplify the code/i,/make it more maintainable/i],weight:.8},general_query:{keywords:["question","ask","wondering","curious","thoughts","opinion","advice","suggestion","recommend","help","guidance"],patterns:[/I have a question/i,/can you help/i,/what do you think/i,/do you have any advice/i],weight:.7}};async function Me(e){try{if(!e)return{purposeType:"general_query",confidence:.5};let t=Array.isArray(e)?e:[e];if(t.length===0)return{purposeType:"general_query",confidence:.5};let n="",r=t.map(_=>({role:_.role||(_.messageId,"user"),content:_.content||""})),o=r.filter(_=>_.role==="user");o.length>0?n=o.map(_=>_.content).join(" "):n=r.map(_=>_.content).join(" ");let s=I(n),a=L(s,20),l={};for(let[_,g]of Object.entries(pe)){let w=0;for(let T of g.keywords)n.toLowerCase().includes(T.toLowerCase())&&(w+=1),a.some(h=>typeof h=="string"&&h.toLowerCase()===T.toLowerCase())&&(w+=2);for(let T of g.patterns)T.test(n)&&(w+=3);w*=g.weight,l[_]=w}let i=0,u="general_query";for(let[_,g]of Object.entries(l))g>i&&(i=g,u=_);let m=pe[u].keywords.length*3+pe[u].patterns.length*3,y=.3+.7*(i/(m*pe[u].weight));return y=Math.min(y,1),i<3&&u!=="general_query"?{purposeType:"general_query",confidence:.6}:{purposeType:u,confidence:y}}catch(t){return console.error("Error detecting conversation purpose:",t),{purposeType:"general_query",confidence:.5}}}async function K(e){try{let n=await C(`
      SELECT * FROM conversation_purposes
      WHERE conversation_id = ?
        AND end_timestamp IS NULL
      ORDER BY start_timestamp DESC
      LIMIT 1
    `,[e]),r=n&&n.rows&&Array.isArray(n.rows)?n.rows:Array.isArray(n)?n:[];return r.length===0?null:r[0]}catch(t){throw console.error(`Error getting active purpose for conversation ${e}:`,t),new Error(`Failed to get active purpose: ${t.message}`)}}async function $e(e,t,n,r,o=.7){try{let s=await K(e);if(s&&s.purpose_type!==n){let y=new Date().toISOString();await C(`
        UPDATE conversation_purposes
        SET end_timestamp = ?
        WHERE purpose_id = ?
      `,[y,s.purpose_id]),console.log(`Closed purpose ${s.purpose_type} for conversation ${e}`)}else if(s&&s.purpose_type===n)return s.purpose_id;let a=Bn(),l=new Date().toISOString(),i=r?JSON.stringify({trigger_message_id:r}):null;return await C(`
      INSERT INTO conversation_purposes (
        purpose_id,
        conversation_id,
        purpose_type,
        confidence,
        start_timestamp,
        metadata
      ) VALUES (?, ?, ?, ?, ?, ?)
    `,[a,e,n,o,l,i]),console.log(`Created new purpose record: ${n} (${a}) for conversation ${e}`),a}catch(s){throw console.error(`Error tracking purpose transition for conversation ${e}:`,s),new Error(`Failed to track purpose transition: ${s.message}`)}}async function _t(e,t){try{let r=await Me([{content:t,role:"user"}]);(!r||!r.purposeType)&&(r.purposeType="general_query",r.confidence=.5);try{await $e(e,r.purposeType,r.purposeType,null,r.confidence),console.log(`Initial purpose for conversation ${e}: ${r.purposeType} (${r.confidence})`)}catch(o){console.error("Error tracking purpose transition:",o),console.log("Continuing with initialization despite purpose tracking error")}return r}catch(n){return console.error("Error detecting initial purpose:",n),{purposeType:"general_query",confidence:.5}}}M();async function wt(e,t,n,r=[],o,s){try{let a=Pe(),l=new Date().toISOString();c("info","===== RECORD MESSAGE - START ====="),c("info","Input parameters:"),c("info","- message_id:",a),c("info","- conversation_id:",n),c("info","- role:",t),c("info","- content:",e&&e.substring(0,50)+(e.length>50?"...":"")),c("info","- timestamp:",l),c("info","- topic_segment_id:",o||"null"),c("info","- user_intent:",s||"null"),c("info","- related_context_entity_ids:",JSON.stringify(r||[]));let i=[];t==="user"&&Re?i=Re(e,"plaintext")||[]:(e.includes("!")&&i.push("emphasis"),e.includes("?")&&i.push("question"));let u=["great","good","excellent","awesome","love","like","well done","thanks","thank you","perfect","amazing","fantastic","nice","happy","success","yay"],m=["bad","error","fail","hate","problem","issue","bug","broken","wrong","difficult","hard","annoy","frustrate","sad","unhappy","disappoint","no","not working","doesn't work","crash","stuck"],y=u.filter(T=>e.toLowerCase().includes(T)),_=m.filter(T=>e.toLowerCase().includes(T)),g={positive_keywords:y,negative_keywords:_},w={message_id:a,conversation_id:n,role:t,content:e,timestamp:l,relatedContextEntityIds:JSON.stringify(r||[]),summary:null,userIntent:s||null,topicSegmentId:o||null,semantic_markers:JSON.stringify(i),sentiment_indicators:JSON.stringify(g)};return c("info","Message object to be indexed:",{message_id:w.message_id,conversation_id:w.conversation_id,role:w.role,topic_segment_id:w.topicSegmentId,user_intent:w.userIntent}),await ct(w),c("info","===== RECORD MESSAGE - COMPLETE ====="),c("info","Successfully recorded message with ID:",a),a}catch(a){throw c("error","===== RECORD MESSAGE - ERROR ====="),c("error","Failed to record message:",{error:a.message}),c("error","Error stack:",{stack:a.stack}),new Error("Failed to record message: "+a.message)}}async function St(e,t){let n=await $(t,10);return await mt({content:e,role:"user"},n)}async function Fe(e,t=!1){try{if(t)return await ht(e);let r=await C(`
      SELECT * FROM conversation_topics
      WHERE conversation_id = ?
      ORDER BY start_timestamp ASC
    `,[e]);return!r||!r.rows||r.rows.length===0?(c("info",`No topics found for conversation: ${e}`),[]):r.rows.map(o=>{let s={...o};try{s.primary_entities=o.primary_entities?JSON.parse(o.primary_entities):[],s.keywords=o.keywords?JSON.parse(o.keywords):[]}catch(a){c("warn",`Error parsing JSON fields in topic: ${a.message}`),s.primary_entities=[],s.keywords=[]}return s})}catch(n){return c("warn","Failed to retrieve conversation topics",{error:n.message,conversationId:e}),[]}}async function Tt(e){let n=await C(`
    SELECT role, content FROM conversation_history
    WHERE conversation_id = ?
    ORDER BY timestamp ASC
  `,[e]);if(!n||!n.rows||!Array.isArray(n.rows)||n.rows.length===0)return c("warn",`No valid messages found for conversation ${e}`),"";let r=n.rows.map(s=>`${s.role}: ${s.content}`).join(`
`);return await P(r,{targetLength:250,preserveKeyPoints:!0})}async function vt(e,t){try{let n=new Date().toISOString(),r=null;t&&t.trim()&&(r=Pe(),await C(`
        INSERT INTO conversation_history (
          message_id,
          conversation_id, 
          role,
          content,
          timestamp,
          related_context_entity_ids,
          summary,
          user_intent
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
      `,[r,e,"user",t,n,JSON.stringify([]),"Initial user query","start_conversation"]),c("info",`User query recorded with ID: ${r}`));let o=Pe();await C(`
      INSERT INTO conversation_history (
        message_id,
        conversation_id, 
        role,
        content,
        timestamp,
        related_context_entity_ids,
        summary,
        user_intent
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `,[o,e,"system",t?"Conversation started with query":"Conversation started",n,JSON.stringify([]),"Conversation initialization","start_conversation"]),t&&await _t(e,t),await le(e,r||o,{name:"Initial conversation",description:t||"Conversation start",primaryEntities:[],keywords:[]}),c("info",`Conversation initialized with ID: ${e}`)}catch(n){throw c("error","Error initializing conversation:",{error:n.message}),new Error("Failed to initialize conversation: "+n.message)}}async function $(e,t=50,n=0){try{if(!e)throw new Error("Conversation ID is required");let o=await C(`
      SELECT 
        message_id,
        conversation_id,
        role,
        content,
        timestamp,
        related_context_entity_ids,
        summary,
        user_intent,
        topic_segment_id,
        semantic_markers,
        sentiment_indicators
      FROM 
        conversation_history
      WHERE 
        conversation_id = ?
      ORDER BY 
        timestamp ASC
      LIMIT ? OFFSET ?
    `,[e,t,n]);return!o||!o.rows||!Array.isArray(o.rows)?(c("warn","No valid rows returned from conversation history query"),[]):o.rows.map(s=>{try{let a={messageId:s.message_id,conversationId:s.conversation_id,role:s.role,content:s.content,timestamp:s.timestamp,relatedContextEntityIds:[],summary:s.summary,userIntent:s.user_intent,topicSegmentId:s.topic_segment_id,semanticMarkers:[],sentimentIndicators:{}};return s.related_context_entity_ids&&(a.relatedContextEntityIds=JSON.parse(s.related_context_entity_ids)),s.semantic_markers&&(a.semanticMarkers=JSON.parse(s.semantic_markers)),s.sentiment_indicators&&(a.sentimentIndicators=JSON.parse(s.sentiment_indicators)),a}catch(a){return c("error","Error parsing JSON fields in conversation message:"),c("error",a),{messageId:s.message_id,conversationId:s.conversation_id,role:s.role,content:s.content,timestamp:s.timestamp,relatedContextEntityIds:[],summary:s.summary,userIntent:s.user_intent,topicSegmentId:s.topic_segment_id,semanticMarkers:[],sentimentIndicators:{}}}})}catch(r){return c("error",`Error getting conversation history for ${e}:`),c("error",r),[]}}async function Ct(e){try{if(!e)throw new Error("Conversation ID is required");let t=await K(e);return t||{purposeType:"general_query",confidence:.5,startTimestamp:new Date().toISOString()}}catch(t){return c("error",`Error getting conversation purpose for ${e}:`),c("error",t),{purposeType:"general_query",confidence:.5,startTimestamp:new Date().toISOString()}}}async function de(e,t=5){try{if(!e)throw new Error("Conversation ID is required");let r=await C(`
      SELECT 
        message_id,
        conversation_id,
        role,
        content,
        timestamp,
        related_context_entity_ids,
        summary,
        user_intent,
        topic_segment_id,
        semantic_markers,
        sentiment_indicators
      FROM 
        conversation_history
      WHERE 
        conversation_id = ?
      ORDER BY 
        timestamp DESC
      LIMIT ?
    `,[e,t]);return!r||!r.rows||!Array.isArray(r.rows)?(c("warn","No valid rows returned from recent messages query"),[]):r.rows.map(o=>{try{let s={messageId:o.message_id,conversationId:o.conversation_id,role:o.role,content:o.content,timestamp:o.timestamp,relatedContextEntityIds:[],summary:o.summary,userIntent:o.user_intent,topicSegmentId:o.topic_segment_id,semanticMarkers:[],sentimentIndicators:{}};return o.related_context_entity_ids&&(s.relatedContextEntityIds=JSON.parse(o.related_context_entity_ids)),o.semantic_markers&&(s.semanticMarkers=JSON.parse(o.semantic_markers)),o.sentiment_indicators&&(s.sentimentIndicators=JSON.parse(o.sentiment_indicators)),s}catch(s){return c("error","Error parsing JSON fields in conversation message:"),c("error",s),{messageId:o.message_id,conversationId:o.conversation_id,role:o.role,content:o.content,timestamp:o.timestamp,relatedContextEntityIds:[],summary:o.summary,userIntent:o.user_intent,topicSegmentId:o.topic_segment_id,semanticMarkers:[],sentimentIndicators:{}}}})}catch(n){return c("error",`Error getting recent messages for ${e}:`),c("error",n),[]}}N();import{v4 as jn}from"uuid";N();import{v4 as xt}from"uuid";async function F(e,t,n=[],r=null){try{let o=xt(),s=JSON.stringify(t),a=JSON.stringify(n),l=Date.now();return await C(`
      INSERT INTO timeline_events (
        event_id, 
        event_type, 
        timestamp, 
        data, 
        associated_entity_ids,
        conversation_id
      ) VALUES (?, ?, ?, ?, ?, ?)
    `,[o,e,l,s,a,r]),o}catch(o){throw console.error(`Error recording timeline event (${e}):`,o),o}}async function bt(e,t=null,n=null,r=null){try{let o=xt(),s=JSON.stringify(e);return await C(`
      INSERT INTO context_snapshots (
        snapshot_id,
        name,
        description,
        snapshot_data,
        timeline_event_id
      ) VALUES (?, ?, ?, ?, ?)
    `,[o,t,n,s,r]),o}catch(o){throw console.error("Error creating context snapshot:",o),o}}async function z(e={}){try{let{types:t,limit:n,conversationId:r,includeMilestones:o=!0,excludeConversationId:s}=e,a="SELECT * FROM timeline_events WHERE 1=1",l=[];if(t&&t.length>0&&(a+=` AND event_type IN (${t.map(()=>"?").join(",")})`,l.push(...t)),r&&(a+=" AND conversation_id = ?",l.push(r)),s&&(a+=" AND (conversation_id != ? OR conversation_id IS NULL)",l.push(s)),!o){let m=["milestone_created","implicit_checkpoint_creation","checkpoint_created"];a+=` AND event_type NOT IN (${m.map(()=>"?").join(",")})`,l.push(...m),a+=` AND NOT EXISTS (
        SELECT 1 FROM context_snapshots 
        WHERE context_snapshots.timeline_event_id = timeline_events.event_id
      )`}a+=" ORDER BY timestamp DESC",n&&Number.isInteger(n)&&n>0&&(a+=" LIMIT ?",l.push(n));let i=await C(a,l),u=i&&i.rows&&Array.isArray(i.rows)?i.rows:Array.isArray(i)?i:[];return u.length===0?(console.warn("No valid timeline events found"),[]):u.map(m=>({...m,data:JSON.parse(m.data||"{}"),associated_entity_ids:JSON.parse(m.associated_entity_ids||"[]")}))}catch(t){throw console.error("Error retrieving timeline events:",t),t}}async function Rt(e,t=10,n=null){try{if(!e)throw new Error("Conversation ID is required");let r=`
      SELECT 
        event_id,
        event_type,
        timestamp,
        data,
        associated_entity_ids,
        conversation_id
      FROM 
        timeline_events
      WHERE 
        conversation_id = ?
    `,o=[e];if(n&&Array.isArray(n)&&n.length>0){let l=n.map(()=>"?").join(",");r+=` AND event_type IN (${l})`,o.push(...n)}r+=`
      ORDER BY 
        timestamp DESC
      LIMIT ?
    `,o.push(t);let s=await C(r,o),a=s&&s.rows&&Array.isArray(s.rows)?s.rows:Array.isArray(s)?s:[];return a.length===0?(console.warn("No recent events found for conversation:",e),[]):a.map(l=>({...l,data:JSON.parse(l.data||"{}"),associated_entity_ids:JSON.parse(l.associated_entity_ids||"[]")}))}catch(r){return console.error(`Error getting recent events for conversation ${e}:`,r),[]}}function me(e,t=[]){let n={GENERAL_QUERY:"general_query",CODE_SEARCH:"code_search",EXPLANATION_REQUEST:"explanation_request",DEBUGGING_ASSIST:"debugging_assist",REFACTORING_SUGGESTION:"refactoring_suggestion",IMPLEMENTATION_REQUEST:"implementation_request",DOCUMENTATION_REQUEST:"documentation_request"},r={[n.GENERAL_QUERY]:.1,[n.CODE_SEARCH]:0,[n.EXPLANATION_REQUEST]:0,[n.DEBUGGING_ASSIST]:0,[n.REFACTORING_SUGGESTION]:0,[n.IMPLEMENTATION_REQUEST]:0,[n.DOCUMENTATION_REQUEST]:0},o=e.toLowerCase(),s=I(e),a=L(s);o.includes("?")&&(r[n.EXPLANATION_REQUEST]+=.3);let l=[/```[\s\S]*?```/,/function\s+\w+\s*\(.*?\)/,/const|let|var\s+\w+\s*=/,/class\s+\w+/,/import\s+.*?from/];for(let y of l)if(y.test(e)){r[n.CODE_SEARCH]+=.2,r[n.DEBUGGING_ASSIST]+=.2;break}let i=[{patterns:["find","search","where is","locate","look for"],intent:n.CODE_SEARCH,score:.6},{patterns:["explain","how does","what is","why","how to","tell me about"],intent:n.EXPLANATION_REQUEST,score:.6},{patterns:["error","bug","issue","problem","fix","debug","not working","exception","fail"],intent:n.DEBUGGING_ASSIST,score:.7},{patterns:["refactor","improve","optimize","clean","better way","restructure","revise"],intent:n.REFACTORING_SUGGESTION,score:.65},{patterns:["implement","create","make","build","develop","code","add","new feature"],intent:n.IMPLEMENTATION_REQUEST,score:.6},{patterns:["document","comment","describe","explain code","documentation"],intent:n.DOCUMENTATION_REQUEST,score:.55}];for(let{patterns:y,intent:_,score:g}of i)for(let w of y)if(o.includes(w)){r[_]+=g;break}if(t&&t.length>0){let y=t.slice(-3).filter(_=>_.content);for(let _ of y){let g=_.content.toLowerCase();/error|bug|issue|problem|fix|debug|not working|exception|fail/.test(g)&&(r[n.DEBUGGING_ASSIST]+=.2),/refactor|improve|optimize|clean|better|restructure|architecture/.test(g)&&(r[n.REFACTORING_SUGGESTION]+=.2),/explain|how does|what is|why|how to|understand/.test(g)&&(r[n.EXPLANATION_REQUEST]+=.15)}}let u=0,m=n.GENERAL_QUERY;for(let[y,_]of Object.entries(r))_>u&&(u=_,m=y);return{intent:m,keywords:a}}async function ze(e=[],t=[]){try{let n=new Map,r=new Map,o=new Map,s=new Set;for(let g of e){if(o.set(g.event_type,(o.get(g.event_type)||0)+1),g.data&&g.data.path){let w=g.data.path;n.set(w,(n.get(w)||0)+1);let T=w.split("/");for(let h=1;h<T.length;h++){let f=T.slice(0,h).join("/");f&&n.set(f,(n.get(f)||0)+.3)}}if(g.associated_entity_ids&&g.associated_entity_ids.length>0)for(let w of g.associated_entity_ids)r.set(w,(r.get(w)||0)+1);if(g.data&&typeof g.data=="object"){let w=[g.data.description,g.data.message,g.data.content,g.data.query].filter(Boolean);for(let T of w)if(T&&typeof T=="string"){let h=I(T);L(h).forEach(p=>s.add(p))}}}for(let g of t){let w=g.path;n.set(w,(n.get(w)||0)+3);let T=w.split("/");for(let h=1;h<T.length;h++){let f=T.slice(0,h).join("/");f&&n.set(f,(n.get(f)||0)+.5)}if(g.content){let h=I(g.content);L(h).forEach(p=>s.add(p))}}let a="",l=0,i="file";for(let[g,w]of n.entries())w>l&&(l=w,a=g,i=g.includes(".")&&!g.endsWith("/")?"file":"directory");if(!a&&o.size>0){let g="";l=0;for(let[w,T]of o.entries())T>l&&(l=T,g=w);g&&(a=`activity:${g}`,i="task_type")}if(!a)return null;let u="";i==="file"?u=`Working on file ${a}`:i==="directory"?u=`Working in directory ${a}`:u=`${a.replace("activity:","")} activity`;let m=Array.from(r.entries()).sort((g,w)=>w[1]-g[1]).slice(0,10).map(([g])=>g),y=Array.from(s).slice(0,20),_={focus_id:jn(),focus_type:i,identifier:a,description:u,related_entity_ids:JSON.stringify(m),keywords:JSON.stringify(y),last_activated_at:Date.now(),is_active:!0};try{await Wn(_)}catch(g){console.error("Error updating focus area in database:",g)}return _}catch(n){return console.error("Error predicting focus area:",n),null}}async function Wn(e){try{let t=typeof e.related_entity_ids=="string"?e.related_entity_ids:JSON.stringify(e.related_entity_ids||[]),n=typeof e.keywords=="string"?e.keywords:JSON.stringify(e.keywords||[]),r=e.last_activated_at||Date.now();await C("BEGIN TRANSACTION");try{await C("UPDATE focus_areas SET is_active = FALSE WHERE is_active = TRUE");let o=await C("SELECT focus_id FROM focus_areas WHERE identifier = ?",[e.identifier]);o&&o.length>0?await C(`UPDATE focus_areas SET 
            focus_type = ?,
            description = ?,
            related_entity_ids = ?,
            keywords = ?,
            last_activated_at = ?,
            is_active = TRUE
          WHERE focus_id = ?`,[e.focus_type,e.description,t,n,r,o[0].focus_id]):await C(`INSERT INTO focus_areas (
            focus_id,
            focus_type,
            identifier,
            description,
            related_entity_ids,
            keywords,
            last_activated_at,
            is_active
          ) VALUES (?, ?, ?, ?, ?, ?, ?, TRUE)`,[e.focus_id,e.focus_type,e.identifier,e.description,t,n,r]),await C("COMMIT")}catch(o){throw await C("ROLLBACK"),o}}catch(t){throw console.error("Error updating focus area in database:",t),t}}async function Ue(e){try{let{conversationId:t,newMessage:n,isUser:r=!1,activeFile:o,codeChanges:s=[]}=e,a=null,l=!1,i=null;if(n&&r){let _=(await C(`SELECT content, role, timestamp 
         FROM conversation_history 
         WHERE conversation_id = ? 
         ORDER BY timestamp DESC 
         LIMIT 5`,[t])).map(p=>({content:p.content,role:p.role}));_.unshift({content:n,role:"user"});let{intent:g,keywords:w}=me(n,_),T=await C("SELECT * FROM focus_areas WHERE is_active = TRUE LIMIT 1"),h=null;if(T&&T.length>0){let p=T[0];h={...p,related_entity_ids:JSON.parse(p.related_entity_ids||"[]"),keywords:JSON.parse(p.keywords||"[]")}}let f=.5;if(g!=="general_query"&&h&&(f=.7,h.keywords&&w)){let p=w.filter(E=>h.keywords.includes(E));p.length>0&&(f+=Math.min(.3,p.length*.05))}a={intent:g,confidence:f,keywords:w,focusArea:h}}let u=[];o&&u.push({path:o}),s&&s.length>0&&u.push(...s);let m=await z({limit:20,types:["code_change","file_open","cursor_move","navigation"]});if(u.length>0||m.length>0){let y=await ze(m,u);if(y)l=!0,i=y;else{let _=await C("SELECT * FROM focus_areas WHERE is_active = TRUE LIMIT 1");if(_&&_.length>0){let g=_[0];i={...g,related_entity_ids:JSON.parse(g.related_entity_ids||"[]"),keywords:JSON.parse(g.keywords||"[]")}}}}else{let y=await C("SELECT * FROM focus_areas WHERE is_active = TRUE LIMIT 1");if(y&&y.length>0){let _=y[0];i={..._,related_entity_ids:JSON.parse(_.related_entity_ids||"[]"),keywords:JSON.parse(_.keywords||"[]")}}}return a&&!a.focusArea&&i&&(a.focusArea=i),{newIntent:a,focusUpdated:l,currentFocus:i}}catch(t){return console.error("Error updating intent:",t),{focusUpdated:!1}}}N();async function Y(e,t={}){try{if(!e||!Array.isArray(e)||e.length===0)throw new Error("Keywords array is required and cannot be empty");e.length===1&&/\s+(AND|OR|NOT|NEAR\/\d+)\s+/i.test(e[0])||(e=e.map(r=>r.trim()).filter(r=>r.length>0)),t={strategy:"combined",booleanOperator:"OR",limit:100,...t};let n=[];if((t.strategy==="fts"||t.strategy==="combined")&&(n=[...await qn(e,t)]),t.strategy==="keywords"||t.strategy==="combined"||t.strategy==="fts"&&n.length===0){let r=await Gn(e,t);t.strategy==="combined"&&n.length>0?n=Hn(n,r):n=r}return t.minRelevance&&(n=n.filter(r=>r.relevanceScore>=t.minRelevance)),t.limit&&n.length>t.limit&&(n=n.slice(0,t.limit)),n}catch(n){throw console.error("Error in searchByKeywords:",n),n}}async function qn(e,t){try{let n=e.map(u=>Ae(u.toLowerCase()).replace(/[\\"\(\)\[\]\{\}\^\$\+\*\?\.]/g,_=>`\\${_}`)),r=t.booleanOperator?.toUpperCase()==="AND"?"AND":"OR",o;if(t.useExactMatch)o=`"${n.join(" ")}"`;else if(t.useProximity&&n.length>1){let u=t.proximityDistance||10;o=`${n.join(` NEAR/${u} `)}`}else o=n.join(` ${r} `);e.length===1&&/\s+(AND|OR|NOT|NEAR\/\d+)\s+/i.test(e[0])&&(o=e[0]);let s=`
      SELECT
        e.*,
        fts.rank as relevance_score
      FROM
        code_entities_fts fts
      JOIN
        code_entities e ON fts.rowid = e.rowid
      WHERE
        fts.code_entities_fts MATCH ?
    `,a=[o];if(t.entityTypes&&t.entityTypes.length>0){let u=t.entityTypes.map(()=>"?").join(", ");s+=` AND e.entity_type IN (${u})`,a.push(...t.entityTypes)}if(t.filePaths&&t.filePaths.length>0){s+=" AND (";let u=[];for(let m of t.filePaths){let y=m.replace(/\*/g,"%").replace(/\?/g,"_");y=y.replace(/%\/%/g,"%"),u.push("e.file_path LIKE ?"),a.push(y)}s+=u.join(" OR "),s+=")"}t.dateRange&&(t.dateRange.start&&(s+=" AND e.last_modified_at >= ?",a.push(t.dateRange.start.toISOString())),t.dateRange.end&&(s+=" AND e.last_modified_at <= ?",a.push(t.dateRange.end.toISOString()))),t.customRanking?s+=` ORDER BY ${t.customRanking}`:s+=`
        ORDER BY 
          relevance_score * 
          CASE 
            WHEN e.entity_type = 'file' THEN 1.2
            WHEN e.entity_type = 'class' THEN 1.1
            WHEN e.entity_type = 'function' THEN 1.0
            ELSE 0.9
          END DESC
      `;let l=t.limit&&t.limit>0?t.limit:100;s+=" LIMIT ?",a.push(l);let i=await C(s,a);return At(i)}catch(n){throw console.error("Error in searchUsingFTS:",n),n}}async function Gn(e,t){try{let n;e.length===1&&/\s+(AND|OR|NOT)\s+/i.test(e[0])?n=e[0].split(/\s+(?:AND|OR|NOT)\s+/i).map(i=>i.trim()).filter(i=>i.length>0):n=e;let r=n.map(i=>Ae(i.toLowerCase())),o=`
      SELECT 
        e.*,
        SUM(ek.weight * (1.0 + (0.1 * count_matches))) as relevance_score
      FROM (
        SELECT 
          entity_id, 
          COUNT(DISTINCT keyword) as count_matches,
          MAX(weight) as weight
        FROM 
          entity_keywords
        WHERE 
          keyword IN (${r.map(()=>"?").join(",")})
        GROUP BY 
          entity_id
      ) as ek
      JOIN 
        code_entities e ON ek.entity_id = e.entity_id
    `,s=[...r];o=Xn(o,t,s),t.sortBy?o+=` ORDER BY e.${t.sortBy}`:o+=`
        ORDER BY 
          relevance_score * 
          CASE 
            WHEN e.entity_type = 'file' THEN 1.2
            WHEN e.entity_type = 'class' THEN 1.1
            WHEN e.entity_type = 'function' THEN 1.0
            ELSE 0.9
          END DESC
      `;let a=t.limit&&t.limit>0?t.limit:100;o+=" LIMIT ?",s.push(a);let l=await C(o,s);return At(l)}catch(n){throw console.error("Error in searchUsingKeywords:",n),n}}function Xn(e,t,n){if(t.entityTypes&&t.entityTypes.length>0){let r=t.entityTypes.map(()=>"?").join(", ");e+=` AND e.entity_type IN (${r})`,n.push(...t.entityTypes)}if(t.filePaths&&t.filePaths.length>0){e+=" AND (";let r=[];for(let o of t.filePaths){let s=o.replace(/\*/g,"%").replace(/\?/g,"_");s=s.replace(/%\/%/g,"%"),r.push("e.file_path LIKE ?"),n.push(s)}e+=r.join(" OR "),e+=")"}return t.dateRange&&(t.dateRange.start&&(e+=" AND e.last_modified_at >= ?",n.push(t.dateRange.start.toISOString())),t.dateRange.end&&(e+=" AND e.last_modified_at <= ?",n.push(t.dateRange.end.toISOString()))),e}function At(e){let t=e&&e.rows&&Array.isArray(e.rows)?e.rows:Array.isArray(e)?e:[];return t.length===0?(console.warn("No valid search results found to map"),[]):t.map(n=>({entity:{entity_id:n.entity_id,file_path:n.file_path,entity_type:n.entity_type,name:n.name,parent_entity_id:n.parent_entity_id,content_hash:n.content_hash,raw_content:n.raw_content,start_line:n.start_line,end_line:n.end_line,language:n.language,created_at:n.created_at,last_modified_at:n.last_modified_at},relevanceScore:n.relevance_score}))}function Hn(e,t){let n=new Map;for(let r of e)n.set(r.entity.entity_id,r);for(let r of t){let o=r.entity.entity_id;if(n.has(o)){let s=n.get(o),a=s.relevanceScore*.7+r.relevanceScore*.3;n.set(o,{...s,relevanceScore:a})}else n.set(o,r)}return Array.from(n.values()).sort((r,o)=>o.relevanceScore-r.relevanceScore)}N();W();N();B();async function It(){try{let t=new Date(Date.now()-2592e6),n=`
      UPDATE code_entities 
      SET importance_score = importance_score * ? 
      WHERE last_accessed_at < ? 
      AND importance_score > ?
    `,r=[Ke,t.toISOString(),.1],o=await C(n,r);console.log(`Applied decay to ${o.changes||0} entities`)}catch(e){throw console.error("Error applying decay to importance scores:",e),e}}var V=new Set,fe=null,re=[];function X(){return fe}function ge(e){fe=e,e&&Array.isArray(e.related_entity_ids)&&We(e.related_entity_ids,[])}function We(e=[],t=[]){let n={timestamp:Date.now()};e.length>0&&(e.forEach(r=>V.add(r)),n.added=[...e]),t.length>0&&(t.forEach(r=>V.delete(r)),n.removed=[...t]),(e.length>0||t.length>0)&&(re.push(n),re.length>50&&re.shift())}function Jn(){return[...V]}function ee(){V.clear(),fe=null,re.push({timestamp:Date.now(),event:"clear_context"})}async function qe(){let e=Jn();if(e.length===0)return[];try{let n=`SELECT * FROM code_entities WHERE id IN (${e.map(()=>"?").join(",")})`;return await C(n,e)}catch(t){return console.error("Error retrieving active context entities:",t),[]}}async function he(){try{let e=await qe(),t=X(),n=re.slice(-10);return{activeEntityIds:[...V],activeFocus:t,entities:e,recentChanges:n,timestamp:Date.now()}}catch(e){return console.error("Error getting active context state:",e),{activeEntityIds:[...V],activeFocus:fe,entities:[],recentChanges:[],timestamp:Date.now(),error:e.message}}}N();import{v4 as Qn}from"uuid";async function _e(e={}){try{let{type:t,minConfidence:n,limit:r,language:o}=e,s="SELECT * FROM project_patterns WHERE is_global = TRUE",a=[];t&&(s+=" AND pattern_type = ?",a.push(t)),n!==void 0&&!isNaN(n)&&(s+=" AND confidence_score >= ?",a.push(n)),o&&(s+=" AND (language = ? OR language = ? OR language IS NULL)",a.push(o,"any")),s+=" ORDER BY confidence_score DESC, utility_score DESC",r!==void 0&&!isNaN(r)&&r>0&&(s+=" LIMIT ?",a.push(r));let l=await C(s,a),i=l&&l.rows&&Array.isArray(l.rows)?l.rows:Array.isArray(l)?l:[];return i.length===0?(console.warn("No valid global patterns found"),[]):i.map(u=>({...u,detection_rules:JSON.parse(u.detection_rules||"{}"),is_global:!!u.is_global}))}catch(t){throw console.error("Error retrieving global patterns:",t),new Error(`Failed to retrieve global patterns: ${t.message}`)}}async function Ee(e,t){try{let n="UPDATE project_patterns SET is_global = TRUE",r=[];t!==void 0&&!isNaN(t)&&(n+=", confidence_score = ?",r.push(t));let o=new Date().toISOString();n+=", updated_at = ?",r.push(o),n+=" WHERE pattern_id = ?",r.push(e);let a=(await C(n,r)).affectedRows>0;return a?(console.log(`Pattern ${e} successfully promoted to global status`),t!==void 0&&console.log(`Updated confidence score to ${t}`)):console.warn(`No pattern with ID ${e} found to promote`),a}catch(n){throw console.error(`Error promoting pattern ${e} to global:`,n),new Error(`Failed to promote pattern: ${n.message}`)}}async function Ge(e,t,n={}){try{let r=Qn(),o=new Date().toISOString(),s=JSON.stringify(n||{}),a={usage:.03,confirmation:.05,rejection:-.08},l={usage:.04,confirmation:.03,rejection:-.02};await C("BEGIN TRANSACTION");try{await C(`
        INSERT INTO pattern_observations (
          observation_id,
          pattern_id,
          observation_type,
          observation_data,
          timestamp
        ) VALUES (?, ?, ?, ?, ?)
      `,[r,e,t,s,o]);let m=await C("SELECT confidence_score, utility_score, reinforcement_count FROM project_patterns WHERE pattern_id = ?",[e]);if(m.length===0)throw new Error(`Pattern with ID ${e} not found`);let y=m[0],_=y.confidence_score+(a[t]||0),g=y.utility_score+(l[t]||0);_=Math.max(0,Math.min(1,_)),g=Math.max(0,Math.min(1,g));let w=`
        UPDATE project_patterns SET
          reinforcement_count = reinforcement_count + 1,
          confidence_score = ?,
          utility_score = ?,
          updated_at = ?
      `,T=t==="usage"?", last_detected_at = ?":"",h=[_,g,o];t==="usage"&&h.push(o);let f=w+T+" WHERE pattern_id = ?";h.push(e),await C(f,h),await C("COMMIT"),console.log(`Pattern ${e} reinforced with '${t}' observation`)}catch(i){throw await C("ROLLBACK"),i}}catch(r){throw console.error(`Error reinforcing pattern ${e}:`,r),new Error(`Failed to reinforce pattern: ${r.message}`)}}function Kn(e,t){let n=0,r=0,o=0,s=1;o=e.pattern_type===t.pattern_type?1:.3,e.language&&t.language?e.language==="any"||t.language==="any"?s=.9:e.language!==t.language&&(s=.2):(e.language||t.language)&&(s=.7),n=Ot(ye(e.representation),ye(t.representation)),r=Ot(ye(e.detection_rules),ye(t.detection_rules));let a=n*.5+r*.3+s*.15+o*.05;return Math.max(0,Math.min(1,a))}function ye(e){if(!e)return[];let t=e;if(typeof e=="string"&&(e.startsWith("{")||e.startsWith("[")))try{let n=JSON.parse(e);t=JSON.stringify(n,null,0).toLowerCase()}catch{t=e.toLowerCase()}else typeof e=="object"?t=JSON.stringify(e,null,0).toLowerCase():t=String(e).toLowerCase();return t.split(/[^a-z0-9_]+/).filter(n=>n.length>1).map(n=>n.trim())}function Ot(e,t){if(!e.length&&!t.length)return 1;if(!e.length||!t.length)return 0;let n=new Set(e),r=new Set(t),o=0;for(let a of n)r.has(a)&&o++;let s=n.size+r.size-o;return o/s}async function Zn(e={}){try{let{minReinforcementCount:t=3,minConfidence:n=.6,similarityThreshold:r=.8}=e;console.log(`Starting pattern consolidation process (minReinforcementCount=${t}, minConfidence=${n})`);let o=0,s=0,l=await C(`
      SELECT * FROM project_patterns 
      WHERE is_global = FALSE 
      AND reinforcement_count >= ? 
      AND confidence_score >= ?
    `,[t,n]);if(console.log(`Found ${l.length} session patterns that qualify for promotion or merging`),l.length===0)return{promoted:0,merged:0};let i=await _e();for(let u of l){let m=u.pattern_id,y=!0,_=null;for(let g of i)if(Kn(u,g)>=r){y=!1,_=g;break}y?(console.log(`Promoting session pattern ${m} to global status`),await Ee(m,u.confidence_score)&&(o++,console.log(`Successfully promoted pattern ${m}`))):_&&(console.log(`Merge attempt for pattern ${m} with ${_.pattern_id}`),s++)}return console.log(`Pattern consolidation complete. Promoted: ${o}, Merged: ${s}`),{promoted:o,merged:s}}catch(t){throw console.error("Error consolidating session patterns:",t),new Error(`Failed to consolidate session patterns: ${t.message}`)}}function kt(e=60){let t=e*60*1e3;return console.log(`Scheduling pattern consolidation to run every ${e} minutes`),setInterval(async()=>{console.log(`Running scheduled pattern consolidation (interval: ${e} minutes)`);try{let r=await Zn({minReinforcementCount:5,minConfidence:.7});console.log(`Pattern consolidation completed: ${r.promoted} patterns promoted, ${r.merged} patterns merged`)}catch(r){console.error("Error during scheduled pattern consolidation:",r)}},t)}B();import{z as d}from"zod";var Lt={initialQuery:d.string().optional(),focusHint:d.object({type:d.string(),identifier:d.string()}).optional(),includeArchitecture:d.boolean().optional().default(!0),includeRecentConversations:d.boolean().optional().default(!0),maxCodeContextItems:d.number().optional().default(5),maxRecentChanges:d.number().optional().default(5),contextDepth:d.enum(["minimal","standard","comprehensive"]).optional().default("standard"),tokenBudget:d.number().optional().default(U)},Dt={conversationId:d.string(),initialContextSummary:d.string(),predictedIntent:d.string().optional(),comprehensiveContext:d.object({codeContext:d.array(d.any()).optional(),architectureContext:d.object({summary:d.string(),sources:d.array(d.object({name:d.string(),path:d.string()}))}).nullable(),recentConversations:d.array(d.object({timestamp:d.number(),summary:d.string(),purpose:d.string()})).optional(),activeWorkflows:d.array(d.object({name:d.string(),description:d.string(),timestamp:d.number()})).optional(),projectStructure:d.any().nullable(),recentChanges:d.array(d.object({timestamp:d.number(),files:d.array(d.string()),summary:d.string()})).optional(),globalPatterns:d.array(d.object({name:d.string(),type:d.string(),description:d.string(),confidence:d.number()})).optional()}).optional()},Mt={conversationId:d.string(),newMessages:d.array(d.object({role:d.enum(["user","assistant","system"]),content:d.string()})).optional().default([]),codeChanges:d.array(d.object({filePath:d.string(),newContent:d.string(),languageHint:d.string().optional()})).optional().default([]),preserveContextOnTopicShift:d.boolean().optional().default(!0),contextIntegrationLevel:d.enum(["minimal","balanced","aggressive"]).optional().default("balanced"),trackIntentTransitions:d.boolean().optional().default(!0),tokenBudget:d.number().optional().default(U)},$t={status:d.enum(["success","partial","failure"]),updatedFocus:d.object({type:d.string(),identifier:d.string()}).optional(),contextContinuity:d.object({preserved:d.boolean(),topicShift:d.boolean(),intentTransition:d.boolean()}),contextSynthesis:d.object({summary:d.string(),topPriorities:d.array(d.string()).optional()}).optional(),intentTransition:d.object({from:d.string().nullable(),to:d.string().nullable(),confidence:d.number()}).optional()},Pt={conversationId:d.string(),query:d.string(),tokenBudget:d.number().optional().default(U),constraints:d.object({entityTypes:d.array(d.string()).optional(),filePaths:d.array(d.string()).optional(),includeConversation:d.boolean().optional().default(!0),crossTopicSearch:d.boolean().optional().default(!1),focusOverride:d.object({type:d.string(),identifier:d.string()}).optional()}).optional().default({}),contextFilters:d.object({minRelevanceScore:d.number().optional().default(.3),excludeTypes:d.array(d.string()).optional(),preferredLanguages:d.array(d.string()).optional(),timeframe:d.object({from:d.number().optional(),to:d.number().optional()}).optional()}).optional().default({}),weightingStrategy:d.enum(["relevance","recency","hierarchy","balanced"]).optional().default("balanced"),balanceStrategy:d.enum(["proportional","equal_representation","priority_based"]).optional().default("proportional"),contextBalance:d.union([d.enum(["auto","code_heavy","balanced","documentation_focused"]),d.object({code:d.number().optional(),conversation:d.number().optional(),documentation:d.number().optional(),patterns:d.number().optional()})]).optional().default("auto"),sourceTypePreferences:d.object({includePatterns:d.boolean().optional().default(!0),includeDocumentation:d.boolean().optional().default(!0),prioritizeTestCases:d.boolean().optional().default(!1),prioritizeExamples:d.boolean().optional().default(!1)}).optional().default({})},Ft={contextSnippets:d.array(d.object({type:d.string(),content:d.string(),entity_id:d.string(),relevanceScore:d.number(),confidenceScore:d.number(),metadata:d.any(),sourceAttribution:d.string(),relevanceExplanation:d.string()})),retrievalSummary:d.string(),contextMetrics:d.object({totalFound:d.number(),selected:d.number(),averageConfidence:d.number(),typeDistribution:d.object({code:d.number(),conversation:d.number(),documentation:d.number(),pattern:d.number()})}).optional()},zt={conversationId:d.string(),name:d.string(),description:d.string().optional(),customData:d.any().optional(),milestoneCategory:d.enum(["bug_fix","feature_completion","refactoring","documentation","test","configuration","uncategorized"]).optional().default("uncategorized"),assessImpact:d.boolean().optional().default(!0)},Ut={milestoneId:d.string(),status:d.string(),milestoneCategory:d.string(),relatedEntitiesCount:d.number(),impactAssessment:d.object({impactScore:d.number(),impactLevel:d.string(),impactSummary:d.string(),scopeMetrics:d.object({directlyModifiedEntities:d.number(),potentiallyImpactedEntities:d.number(),impactedComponents:d.number(),criticalPathsCount:d.number()}).optional(),stabilityRisk:d.number().optional(),criticalPaths:d.array(d.object({sourceId:d.string(),path:d.string(),dependencyCount:d.number()})).optional(),mostImpactedComponents:d.array(d.object({name:d.string(),count:d.number()})).optional(),error:d.string().optional()}).nullable()},Bt={conversationId:d.string(),clearActiveContext:d.boolean().optional().default(!1),extractLearnings:d.boolean().optional().default(!0),promotePatterns:d.boolean().optional().default(!0),synthesizeRelatedTopics:d.boolean().optional().default(!0),generateNextSteps:d.boolean().optional().default(!0),outcome:d.enum(["completed","abandoned","paused","reference_only"]).optional().default("completed")},jt={status:d.string(),summary:d.string(),purpose:d.string(),extractedLearnings:d.object({learnings:d.array(d.object({type:d.string(),content:d.string(),confidence:d.number(),patternId:d.string().optional(),context:d.array(d.any()).optional(),messageReference:d.string().optional(),relatedIssues:d.array(d.any()).optional(),alternatives:d.array(d.string()).optional(),rationale:d.string().optional(),codeReferences:d.array(d.any()).optional(),applicability:d.number().optional()})),count:d.number(),byType:d.record(d.string(),d.number()),averageConfidence:d.number(),error:d.string().optional()}).nullable(),promotedPatterns:d.object({promoted:d.number(),patterns:d.array(d.object({patternId:d.string(),name:d.string(),type:d.string(),promoted:d.boolean(),confidence:d.number()})),error:d.string().optional()}).nullable(),relatedConversations:d.object({relatedCount:d.number(),conversations:d.array(d.object({conversationId:d.string(),summary:d.string(),timestamp:d.number(),similarityScore:d.number(),commonTopics:d.array(d.string())})),synthesizedInsights:d.array(d.object({topic:d.string(),insight:d.string(),conversationCount:d.number(),sourceSummaries:d.array(d.object({conversationId:d.string(),summary:d.string()}))})),error:d.string().optional()}).nullable(),nextSteps:d.object({suggestedNextSteps:d.array(d.object({action:d.string(),priority:d.enum(["high","medium","low"]),rationale:d.string()})),followUpTopics:d.array(d.object({topic:d.string(),priority:d.enum(["high","medium","low"]),rationale:d.string()})),referenceMaterials:d.array(d.object({title:d.string(),path:d.string(),type:d.string(),relevance:d.number()})),error:d.string().optional()}).nullable()};M();async function Vn(e,t){try{c("INFO","initialize_conversation_context tool started",{initialQuery:e.initialQuery});let n=e.conversationId||Yn();c("DEBUG",`Using conversation ID: ${n}`);let{initialQuery:r="",focusHint:o,includeArchitecture:s=!0,includeRecentConversations:a=!0,maxCodeContextItems:l=5,maxRecentChanges:i=5,contextDepth:u="standard",tokenBudget:m=4e3}=e;try{await ee(),o&&(await ge(o.type,o.identifier),c("INFO","Set initial focus",{type:o.type,identifier:o.identifier}))}catch(h){c("WARN","Failed to set initial focus, continuing with initialization",{error:h.message,focusHint:o})}try{await F("conversation_started",{initialQuery:r,focusHint:o,contextDepth:u},[],n),c("DEBUG","Recorded conversation start in timeline",{conversationId:n})}catch(h){c("WARN","Failed to record conversation start in timeline",{error:h.message,conversationId:n})}try{c("INFO",`Initializing conversation intelligence tracker with user query: "${r}"`,{conversationId:n}),await vt(n,r);let h=await de(n,3);c("INFO",`Conversation initialized with ${h.length} messages`,{messages:h.map(f=>({role:f.role,content:f.content.substring(0,50)+(f.content.length>50?"...":"")}))})}catch(h){throw c("ERROR","Failed to initialize conversation intelligence",{error:h.message,conversationId:n}),new Error(`Conversation intelligence initialization failed: ${h.message}`)}let y="";if(r)try{let h=await me(r);y=h.intent,c("INFO","Predicted initial intent",{intent:y,confidence:h.confidence||"N/A"})}catch(h){c("WARN","Intent prediction failed, continuing without intent",{error:h.message,initialQuery:r})}c("INFO","Starting comprehensive context gathering",{conversationId:n,includeArchitecture:s,maxCodeContextItems:l,contextDepth:u});let _=await er(r,o,n,{includeArchitecture:s,includeRecentConversations:a,maxCodeContextItems:l,maxRecentChanges:i,contextDepth:u,tokenBudget:m}),g={codeContextItems:_.codeContext?.length||0,architectureItems:_.architectureContext?.length||0,recentChanges:_.recentChanges?.length||0,patterns:_.globalPatterns?.length||0};c("INFO","Comprehensive context gathered successfully",g);let w=cr(_,r,y);c("INFO","Generated initial context summary",{summaryLength:w?.length||0});let T={message:`Conversation context initialized with ID: ${n}`,conversationId:n,initialContextSummary:w,predictedIntent:y,comprehensiveContext:_};return{content:[{type:"text",text:JSON.stringify(T)}]}}catch(n){c("ERROR","Error in initialize_conversation_context tool",{error:n.message,stack:n.stack,input:{initialQuery:e.initialQuery,focusHint:e.focusHint,contextDepth:e.contextDepth}});let r={error:!0,errorCode:n.code||"INITIALIZATION_FAILED",errorDetails:n.message};return{content:[{type:"text",text:JSON.stringify(r)}]}}}async function er(e,t,n,r){let o={};try{if(c("DEBUG","Starting to gather code context",{initialQuery:e?.substring(0,50),focusHint:t}),o.codeContext=await tr(e,t,r),c("DEBUG","Gathered code context",{itemCount:o.codeContext?.length||0}),r.includeArchitecture)try{o.architectureContext=await nr(r),c("DEBUG","Gathered architecture context",{itemCount:o.architectureContext?.length||0})}catch(s){c("WARN","Failed to gather architecture context",{error:s.message}),o.architectureContext=null}else o.architectureContext=null;try{o.projectStructure=await rr(),c("DEBUG","Gathered project structure",{directoryCount:o.projectStructure?.directories?.length||0,fileCount:o.projectStructure?.files?.length||0})}catch(s){c("WARN","Failed to gather project structure",{error:s.message}),o.projectStructure={directories:[],files:[]}}if(r.includeRecentConversations)try{o.recentConversations=await or(r),c("DEBUG","Gathered recent conversations",{count:o.recentConversations?.length||0})}catch(s){c("WARN","Failed to gather recent conversations",{error:s.message}),o.recentConversations=[]}try{o.recentChanges=await sr(r.maxRecentChanges),c("DEBUG","Gathered recent changes",{count:o.recentChanges?.length||0})}catch(s){c("WARN","Failed to gather recent changes",{error:s.message}),o.recentChanges=[]}try{o.activeWorkflows=await ir(),c("DEBUG","Gathered active workflows",{count:o.activeWorkflows?.length||0})}catch(s){c("WARN","Failed to gather active workflows",{error:s.message}),o.activeWorkflows=[]}try{o.globalPatterns=await ar(e,r),c("DEBUG","Gathered global patterns",{count:o.globalPatterns?.length||0})}catch(s){c("WARN","Failed to gather global patterns",{error:s.message}),o.globalPatterns=[]}return o}catch(s){throw c("ERROR","Error gathering comprehensive context",{error:s.message,conversationId:n}),s}}async function tr(e,t,n){try{let r={limit:n.maxCodeContextItems*2};t&&(t.type==="file"||t.type==="directory")&&(r.filePaths=[t.identifier]);let o=e?await lr(e):["README","main","index","config"],a=(await Y(o,r)).map(u=>({entity_id:u.entity.entity_id,path:u.entity.file_path,type:u.entity.entity_type,name:u.entity.name,content:u.entity.raw_content,relevanceScore:u.relevanceScore}));a=a.slice(0,n.maxCodeContextItems);let l={detailLevel:n.contextDepth,targetTokens:Math.floor(n.tokenBudget*.6)};return await dt(a,l)}catch(r){return console.error(`[gatherCodeContext] Error: ${r.message}`),[]}}async function nr(e){try{let t=await Y(["README","documentation","architecture","overview","guide","setup"],{limit:5,strategy:"keywords"});if(t.length===0)return null;let n=t.map(a=>({name:a.entity.name,path:a.entity.file_path})),r=t.map(a=>a.entity.raw_content).join(`

`),o={detailLevel:e.contextDepth,targetTokens:Math.floor(e.tokenBudget*.2)};return{summary:r.length>1e3?r.substring(0,1e3)+"...":r,sources:n}}catch(t){return console.error(`[gatherArchitectureContext] Error: ${t.message}`),null}}async function rr(){try{let t=await C(`
      SELECT 
        file_path,
        COUNT(*) as file_count
      FROM 
        code_entities
      WHERE 
        entity_type = 'file'
      GROUP BY 
        SUBSTR(file_path, 1, INSTR(file_path, '/'))
      ORDER BY 
        file_count DESC
      LIMIT 10
    `),n=t&&t.rows&&Array.isArray(t.rows)?t.rows:Array.isArray(t)?t:[];return n.length===0?{topLevelDirs:[],totalFiles:0}:{topLevelDirs:n.map(r=>({path:r.file_path.split("/")[0],fileCount:r.file_count})),totalFiles:n.reduce((r,o)=>r+o.file_count,0)}}catch(e){return console.error(`[gatherProjectStructure] Error: ${e.message}`),null}}async function or(e){try{let t=await z({types:["conversation_completed"],limit:3});return t.length===0?[]:t.map(n=>({timestamp:n.timestamp,summary:n.data.summary||"Conversation completed",purpose:n.data.purpose||"Unknown purpose"}))}catch(t){return console.error(`[gatherRecentConversations] Error: ${t.message}`),[]}}async function sr(e){try{let t=await z({types:["file_change","file_create","code_commit"],limit:e});return t.length===0?[]:t.map(n=>({timestamp:n.timestamp,files:n.data.files||[n.data.filePath||"Unknown file"],summary:n.data.message||`${n.event_type} event occurred`}))}catch(t){return console.error(`[gatherRecentChanges] Error: ${t.message}`),[]}}async function ir(){try{let e=await z({types:["milestone"],limit:3,includeMilestones:!0});return e.length===0?[]:e.map(t=>({name:t.data.name||"Unnamed milestone",description:t.data.description||"No description provided",timestamp:t.timestamp}))}catch(e){return console.error(`[gatherActiveWorkflows] Error: ${e.message}`),[]}}async function ar(e,t){try{let n=await _e({minConfidence:.4,limit:5});return n.length===0?[]:n.map(r=>({name:r.name,type:r.pattern_type,description:r.description,confidence:r.confidence_score}))}catch(n){return console.error(`[gatherGlobalPatterns] Error: ${n.message}`),[]}}function cr(e,t,n){let r="Project context initialized";return t&&(r+=` for query: "${t}"`),n&&(r+=` with intent: ${n}`),e.codeContext&&e.codeContext.length>0&&(r+=`. Found ${e.codeContext.length} relevant code items`),e.architectureContext&&(r+=". Project documentation available"),e.recentChanges&&e.recentChanges.length>0&&(r+=`. ${e.recentChanges.length} recent file changes detected`),e.globalPatterns&&e.globalPatterns.length>0&&(r+=`. ${e.globalPatterns.length} relevant patterns identified`),r}async function lr(e){return e.toLowerCase().replace(/[^\w\s]/g,"").split(/\s+/).filter(t=>t.length>2).filter(t=>!["the","and","for","with"].includes(t))}var Wt={name:"initialize_conversation_context",description:"Initializes a new conversation context with comprehensive codebase information",inputSchema:Lt,outputSchema:Dt,handler:Vn};N();import"zod";N();async function qt(e){let t=process.env.MCP_MODE==="true";if(!e||!e.filePath||!e.newContent)return t||console.error("Invalid code change object:",e),{filePath:e?.filePath||"unknown",success:!1,error:"Invalid code change: missing required fields",timestamp:new Date().toISOString()};try{t||console.log(`Processing code change for ${e.filePath}`);let n;try{n=(await import("crypto")).createHash("md5").update(e.newContent).digest("hex")}catch{n="unknown-hash-"+Date.now()}let r=!1;try{let a=await C(`
        SELECT entity_id, content_hash 
        FROM code_entities 
        WHERE file_path = ? AND entity_type = 'file'
      `,[e.filePath]);a&&a.rows&&a.rows.length>0&&a.rows[0].content_hash===n&&(t||console.log(`File ${e.filePath} is unchanged, skipping indexing`),r=!0)}catch(s){t||console.warn(`DB check error for ${e.filePath}, proceeding with indexing: ${s.message}`)}let o=[];if(!r)try{await at(e.filePath,e.newContent,e.languageHint)}catch(s){return t||console.error(`Error indexing file ${e.filePath}: ${s.message}`),{filePath:e.filePath,success:!1,error:`Indexing failed: ${s.message}`,timestamp:new Date().toISOString()}}try{o=await ur([e.filePath])}catch(s){t||console.warn(`Error getting entities for ${e.filePath}: ${s.message}`),o=[]}return{filePath:e.filePath,success:!0,entityCount:o.length,unchanged:r,timestamp:new Date().toISOString()}}catch(n){return t||console.error(`Error processing code change for ${e.filePath}:`,n),{filePath:e.filePath,success:!1,error:`Failed to process code change: ${n.message}`,timestamp:new Date().toISOString()}}}async function ur(e){let t=process.env.MCP_MODE==="true";if(!e||e.length===0)return[];try{let n=[],r=new Set;for(let o of e)if(!r.has(o)){r.add(o);try{let a=await C("SELECT * FROM code_entities WHERE file_path = ?",[o]);if(!a||!a.rows)continue;let l=[...a.rows],i=l.filter(u=>u.entity_type==="file").map(u=>u.entity_id);if(i.length>0)for(let u of i)try{let y=await C(`
                SELECT * FROM code_entities 
                WHERE parent_entity_id = ?
              `,[u]);if(y&&y.rows)for(let _ of y.rows)l.some(g=>g.entity_id===_.entity_id)||l.push(_)}catch(m){t||console.warn(`Error fetching children for entity ${u}: ${m.message}`)}n=[...n,...l]}catch(s){t||console.warn(`Error processing file ${o}: ${s.message}`)}}return n}catch(n){return t||console.error("Error retrieving entities from changed files:",n),[]}}M();import"uuid";async function dr(e,t){try{c("INFO","update_conversation_context tool started",{conversationId:e.conversationId,messageCount:e.newMessages?.length||0,codeChangeCount:e.codeChanges?.length||0});let{conversationId:n,newMessages:r=[],codeChanges:o=[],preserveContextOnTopicShift:s=!0,contextIntegrationLevel:a="balanced",trackIntentTransitions:l=!0,tokenBudget:i=4e3}=e;if(!n){let f=new Error("conversationId is required");throw f.code="MISSING_CONVERSATION_ID",f}c("DEBUG","Processing update with parameters",{preserveContextOnTopicShift:s,contextIntegrationLevel:a,trackIntentTransitions:l});let u=!1,m=!1,y=null,_=null,g=!0,w=null;try{let f=await he();c("DEBUG","Retrieved previous context state",{hasPreviousContext:!!f}),l&&(y=await K(n),c("DEBUG","Retrieved previous intent",{previousIntent:y}))}catch(f){c("WARN","Failed to retrieve previous context state, continuing with defaults",{error:f.message})}if(r.length>0){c("INFO",`Processing ${r.length} new messages`);try{let f=await mr(n,r,{trackIntentTransitions:l});u=f.topicShift,c("DEBUG","Message processing completed",{topicShift:u}),l&&(m=f.intentTransition,_=f.currentIntent,m&&c("INFO","Intent transition detected",{from:y,to:_}))}catch(f){c("ERROR","Failed to process new messages",{error:f.message,conversationId:n})}}if(o.length>0){c("INFO",`Processing ${o.length} code changes`);try{let f=await fr(n,o);if(f.focusChanged&&(c("INFO","Focus changed due to code changes",{newFocus:f.newFocus}),l&&!m))try{let p=await Ue({conversationId:n,codeChanges:o});p.intentChanged&&(m=!0,_=p.newIntent,c("INFO","Intent changed due to code changes",{newIntent:_}))}catch(p){c("WARN","Failed to update intent from code changes",{error:p.message})}}catch(f){c("ERROR","Failed to process code changes",{error:f.message,conversationId:n})}}if(u||m)if(c("INFO","Topic shift or intent transition detected, managing context continuity",{topicShift:u,intentTransition:m,preserveContextOnTopicShift:s}),s)try{let f=await he()||{},p=await gr(f,{topicShift:u,intentTransition:m,previousIntent:y,currentIntent:_,codeChanges:o},a);await We(p),g=!0,c("INFO","Integrated previous and new context",{contextIntegrationLevel:a})}catch(f){c("ERROR","Failed to integrate contexts",{error:f.message})}else try{if(await ee(),g=!1,c("INFO","Cleared previous context due to topic shift"),_)try{let f=await Rt(n,10),p=await ze(f,o);p&&(await ge(p.type,p.identifier),w=p,c("INFO","Set new focus area based on intent",{type:p.type,identifier:p.identifier}))}catch(f){c("WARN","Failed to set new focus area",{error:f.message})}}catch(f){c("ERROR","Failed to clear context",{error:f.message})}else c("DEBUG","No topic shift or intent transition detected, preserving context");if(!w)try{w=await X(),c("DEBUG","Retrieved current focus",{focus:w?`${w.type}:${w.identifier}`:"none"})}catch(f){c("WARN","Failed to get current focus",{error:f.message})}let T;try{T=await hr(n,_,u||m),c("DEBUG","Generated context synthesis",{synthesisLength:T?.length||0})}catch(f){c("WARN","Failed to generate context synthesis",{error:f.message}),T=null}try{await F("context_updated",{newMessagesCount:r.length,codeChangesCount:o.length,topicShift:u,intentTransition:m?{from:y,to:_}:null,contextPreserved:g,contextIntegrationLevel:g?a:"none"},[],n),c("DEBUG","Recorded context update in timeline")}catch(f){c("WARN","Failed to record context update in timeline",{error:f.message})}c("INFO","update_conversation_context tool completed successfully");let h={status:"success",message:`Conversation context updated for ${n}`,updatedFocus:w?{type:w.type,identifier:w.identifier}:void 0,contextContinuity:{topicShift:u,intentTransition:m,contextPreserved:g},synthesis:T};return{content:[{type:"text",text:JSON.stringify(h)}]}}catch(n){c("ERROR","Error in update_conversation_context tool",{error:n.message,stack:n.stack,input:{conversationId:e.conversationId,messageCount:e.newMessages?.length||0,codeChangeCount:e.codeChanges?.length||0}});let r={error:!0,errorCode:n.code||"UPDATE_FAILED",errorDetails:n.message};return{content:[{type:"text",text:JSON.stringify(r)}]}}}async function mr(e,t,n={}){try{c("DEBUG",`Processing ${t.length} messages for conversation ${e}`);let r={topicShift:!1,intentTransition:!1,currentIntent:null},o=null;if(n.trackIntentTransitions)try{o=await K(e),c("DEBUG","Retrieved previous intent",{previousIntent:o})}catch(s){c("WARN","Failed to retrieve previous intent",{error:s.message})}for(let s of t)try{let a=!1,l=null;s.role==="user"&&(c("DEBUG","Checking for topic shift with user message"),a=await St(s.content,e),a&&(c("INFO","Topic shift detected",{messageContent:s.content.substring(0,50)+(s.content.length>50?"...":"")}),r.topicShift=!0)),c("DEBUG",`Recording message from ${s.role}`);let i=await wt(s.content,s.role,e,[],null,n.trackIntentTransitions&&r.currentIntent?r.currentIntent.purposeType:null);if(c("DEBUG",`Message recorded with ID: ${i}`),s.role==="user"&&a){try{let m=await ue(e);m&&(c("INFO","Closing active topic segment",{topicId:m.topic_id}),await ft(m.topic_id,i))}catch(m){c("WARN","Failed to close active topic segment",{error:m.message})}let u="";try{u=await gt([i])}catch(m){u=`Topic from: ${s.content.substring(0,30)}...`,c("WARN","Failed to generate topic name, using fallback",{error:m.message})}try{c("INFO","Creating new topic segment");let m=await le(e,i,{name:u,description:s.content});c("INFO","Created new topic segment",{topicId:m});try{await C(`
                UPDATE conversation_history
                SET topic_segment_id = ?
                WHERE message_id = ?
              `,[m,i]),c("DEBUG","Updated message with new topic ID",{messageId:i,topicId:m}),l=m}catch(y){c("ERROR","Failed to update message with topic ID",{error:y.message})}}catch(m){c("ERROR","Failed to create new topic segment",{error:m.message})}}else if(s.role==="user"&&!a)try{let u=await ue(e);u&&(await C(`
                UPDATE conversation_history
                SET topic_segment_id = ?
                WHERE message_id = ?
              `,[u.topic_id,i]),c("DEBUG","Updated message with existing topic ID",{messageId:i,topicId:u.topic_id}),l=u.topic_id)}catch(u){c("WARN","Failed to associate message with active topic",{error:u.message})}if(s.role==="user"&&n.trackIntentTransitions)try{let u=await $(e,10),m=await Me(s.content,u);if(m){let y=m.purpose,_=o?o.purposeType:null;y!==_&&(c("INFO","Conversation purpose change detected",{from:_,to:y}),await $e(e,_,y,i),r.intentTransition=!0,r.currentIntent={purposeType:y,confidence:m.confidence},o={purposeType:y,confidence:m.confidence})}}catch(u){c("WARN","Failed to detect conversation purpose",{error:u.message})}if(n.trackIntentTransitions)try{let u=await Ue({conversationId:e,messages:[s],messageId:i});u.intentChanged&&!r.intentTransition&&(r.intentTransition=!0,r.currentIntent=u.newIntent,c("INFO","Intent updated based on message content",{intent:u.newIntent}))}catch(u){c("WARN","Failed to update intent",{error:u.message})}}catch(a){c("ERROR","Failed to process message",{error:a.message,role:s.role,content:s.content?.substring(0,50)+"..."})}return r}catch(r){throw c("ERROR","Error processing new messages",{error:r.message,conversationId:e}),r}}async function fr(e,t){try{c("DEBUG",`Processing ${t.length} code changes for conversation ${e}`);let n={focusChanged:!1,newFocus:null};if(!t||!t.length)return n;let r=t.map(i=>!i||!i.filePath?(c("WARN","Received invalid code change object, skipping",{change:JSON.stringify(i).substring(0,100)+"..."}),Promise.resolve({success:!1,filePath:i?.filePath||"unknown",error:"Invalid code change: missing filePath"})):qt(i).then(u=>(u.success?c("DEBUG",`Processed code change for ${i.filePath}`):c("WARN","Failed to process code change",{error:u.error||"Unknown error",path:i.filePath}),u)).catch(u=>(c("WARN","Unexpected error processing code change",{error:u.message,path:i.filePath}),{success:!1,filePath:i.filePath,error:u.message}))),s=(await Promise.allSettled(r)).map(i=>i.status==="fulfilled"?i.value:(c("ERROR","Promise rejected during code change processing",{reason:i.reason?.message||"Unknown error"}),{success:!1,error:i.reason?.message||"Unknown error"})),a=s.filter(i=>i.success).length,l=s.filter(i=>!i.success).length;l>0?c("WARN",`${l} of ${t.length} code changes failed processing`):c("INFO",`Successfully processed all ${t.length} code changes`);try{if(a>0){let i=t.reduce((u,m)=>{let y=u.changedLines?.length||0;return(m.changedLines?.length||0)>y?m:u},t[0]);if(i){let u={focus_type:"file",identifier:i.filePath,description:`File ${i.filePath} was modified`};try{await FocusAreaManagerLogic.setFocusArea(u),n.focusChanged=!0,n.newFocus=u}catch(m){c("WARN","Failed to update focus area",{error:m.message})}}}}catch(i){c("WARN","Error calculating focus area from code changes",{error:i.message})}return n}catch(n){return c("ERROR","Failed to process code changes",{error:n.message,conversationId:e}),{focusChanged:!1,newFocus:null,error:n.message}}}async function gr(e,t,n){let{topicShift:r,intentTransition:o,previousIntent:s,currentIntent:a,codeChanges:l}=t;try{c("INFO",`Integrating contexts with level: ${n}`);let i={...e};switch(n){case"minimal":if(r){let u=i.focus;i.recentContextItems=[],i.focus=u}break;case"aggressive":o&&(i.currentIntent=a);break;case"balanced":default:if(r){let u=i.focus;if(i.recentContextItems){let m=l.map(y=>y.filePath);i.recentContextItems=i.recentContextItems.filter(y=>!!(y.relatedTo&&y.relatedTo.includes(u?.identifier)||y.path&&m.some(_=>y.path.includes(_))||y.timestamp&&Date.now()-y.timestamp<5*60*1e3))}}o&&(i.currentIntent=a,l.length>0&&i.recentContextItems&&(i.recentContextItems.forEach(u=>{u.contentType==="code"&&a&&(a==="debugging"&&u.path&&u.path.includes("test")||a==="feature_planning"&&u.path&&u.path.includes("docs"))&&(u.priority=Math.min(u.priority+.2,1))}),i.recentContextItems.sort((u,m)=>m.priority-u.priority)));break}return i}catch(i){return c("ERROR","Error integrating contexts",{error:i.message}),e}}async function hr(e,t,n){try{c("INFO","Generating context synthesis");let r=await he(),o=await X(),s=await de(e,5),a="Current conversation context";if(n){if(o){if(a=`The conversation is now focused on ${o.type} "${o.identifier}"`,t){let i=typeof t=="string"?t.replace(/_/g," "):t;a+=` with the purpose of ${i}`}}else t&&(a=`The conversation is focused on ${typeof t=="string"?t.replace(/_/g," "):t}`);if(s.length>0){let i=s.map(m=>m.content).join(" "),u=await P(i,{targetLength:150});a+=`. Recent discussion: ${u}`}}else if(o){if(a=`Continuing focus on ${o.type} "${o.identifier}"`,t){let i=typeof t=="string"?t.replace(/_/g," "):t;a+=` with ${i}`}}else t&&(a=`Continuing with ${typeof t=="string"?t.replace(/_/g," "):t}`);let l=[];if(o&&l.push(`Focus on ${o.type}: ${o.identifier}`),t)switch(t){case"debugging":l.push("Identify and fix issues in the code");break;case"feature_planning":l.push("Design and plan new features");break;case"code_review":l.push("Review code for quality and correctness");break;case"learning":l.push("Explain concepts and provide information");break;case"code_generation":l.push("Generate or modify code");break;default:l.push("Address user's current needs")}if(r&&r.recentContextItems){let i=r.recentContextItems.slice(0,2).map(u=>u.type==="file"?`Maintain context on file: ${u.name||u.path}`:u.type==="entity"?`Keep focus on: ${u.name}`:null).filter(Boolean);l.push(...i)}return{summary:a,topPriorities:l.length>0?l:void 0}}catch(r){return c("ERROR","Error generating context synthesis",{error:r.message}),{summary:"Context updated"}}}var Gt={name:"update_conversation_context",description:"Updates an existing conversation context with new messages, code changes, and context management",inputSchema:Mt,outputSchema:$t,handler:dr};N();import"zod";W();W();B();M();async function yr(e,t){try{c("INFO","retrieve_relevant_context tool started",{query:e.query?.substring(0,50),conversationId:e.conversationId,tokenBudget:e.tokenBudget||U});let{conversationId:n,query:r,tokenBudget:o=U,constraints:s={},contextFilters:a={},weightingStrategy:l="balanced",balanceStrategy:i="proportional",contextBalance:u="auto",sourceTypePreferences:m={}}=e;if(!r){let T=new Error("Query is required");throw T.code="MISSING_QUERY",T}if(!n){let T=new Error("Conversation ID is required");throw T.code="MISSING_CONVERSATION_ID",T}c("DEBUG","Context retrieval parameters",{balanceStrategy:i,contextBalance:u,constraints:Object.keys(s),filters:Object.keys(a)});let y=[],_=null,g=null;try{y=await $(n,20),c("DEBUG","Retrieved conversation history",{messageCount:y.length})}catch(T){c("WARN","Failed to retrieve conversation history",{error:T.message,conversationId:n})}let w={relevantContext:[],conversationContext:y.map(T=>({type:"conversation",content:T.content,metadata:{role:T.role,messageId:T.messageId},relevanceScore:.9})),currentTopic:_,currentPurpose:g,statusMessage:"Retrieved conversation context successfully",metrics:{totalSnippets:y.length,relevanceThreshold:.5,tokenUsage:y.reduce((T,h)=>T+_r(h.content),0)}};return c("INFO",`Returning simplified context with ${w.conversationContext.length} conversation messages`),{content:[{type:"text",text:JSON.stringify({conversationId:e.conversationId,query:e.query,retrievalTime:Date.now(),relevantContext:{conversationContext:w.conversationContext,codeContext:[],patternContext:[],fileContext:[]},focusInfo:{currentTopic:w.currentTopic,currentPurpose:w.currentPurpose},queryAnalysis:{status:w.statusMessage,metrics:w.metrics}})}]}}catch(n){return c("ERROR","Error in retrieve_relevant_context handler",{error:n.message,code:n.code}),{content:[{type:"text",text:JSON.stringify({error:!0,errorCode:n.code||"RETRIEVAL_FAILED",errorDetails:n.message,conversationId:e.conversationId,query:e.query})}]}}}function _r(e){try{return e?Math.ceil(e.length/4):0}catch(t){return c("WARN","Error estimating token count",{error:t.message,textLength:e?.length||0}),e?Math.ceil(e.length/4):0}}var Xt={name:"retrieve_relevant_context",description:"Retrieves context from multiple sources that is relevant to the current query or conversation",inputSchema:Pt,outputSchema:Ft,handler:yr};N();import"zod";import{v4 as Sr}from"uuid";N();W();N();import{v4 as Ns}from"uuid";M();import{v4 as Ps}from"uuid";async function Ht(e){try{c("info",`[LearningSystem] Analyzing patterns around milestone: ${e}`);let n=await C("SELECT * FROM context_states WHERE milestone_id = ?",[e]);if(!n||!n.rows||n.rows.length===0){c("warn",`[LearningSystem] No context snapshot found for milestone ${e}`);return}let r=n.rows[0];if(!r){c("warn",`[LearningSystem] Empty snapshot data for milestone ${e}`);return}let o=r.created_at||new Date().toISOString(),s=r.focus_areas||[],a=r.conversation_id;if(!a){c("warn",`[LearningSystem] No conversation_id in snapshot for milestone ${e}`);return}let l=new Date(o).getTime(),i=2*60*60*1e3,u=1*60*60*1e3,m=new Date(l-i).toISOString(),y=new Date(l+u).toISOString(),g=await C(`
      SELECT * FROM timeline_events
      WHERE conversation_id = ?
        AND timestamp >= ?
        AND timestamp <= ?
      ORDER BY timestamp ASC
    `,[a,m,y]);if(!g||!g.rows||g.rows.length===0){c("info",`[LearningSystem] No events found in the time window for milestone ${e}`);return}let w=g.rows||[],h=await C(`
      SELECT * FROM conversation_history
      WHERE conversation_id = ?
        AND timestamp >= ?
        AND timestamp <= ?
      ORDER BY timestamp ASC
    `,[a,m,y]),f=h&&h.rows?h.rows:[],p={};for(let x of w)if(x.data)try{let v=typeof x.data=="string"?JSON.parse(x.data):x.data;if(v.activeFile&&(p[v.activeFile]=(p[v.activeFile]||0)+1),v.relatedFiles&&Array.isArray(v.relatedFiles))for(let R of v.relatedFiles)p[R]=(p[R]||0)+1}catch{}let E=w.filter(x=>x.type==="search_query").map(x=>{try{let v=typeof x.data=="string"?JSON.parse(x.data):x.data;return v&&v.query?v.query:null}catch{return null}}).filter(Boolean),S={},b={};for(let x of f)x.topic_segment_id&&(S[x.topic_segment_id]=(S[x.topic_segment_id]||0)+1),x.purpose_type&&(b[x.purpose_type]=(b[x.purpose_type]||0)+1);c("info",`[LearningSystem] Milestone ${e} context analysis:`),c("info","  Most accessed code entities:",{entities:Object.entries(p).sort((x,v)=>v[1]-x[1]).slice(0,5)}),c("info","  Most common search queries:",{queries:E.slice(0,5)}),c("info","  Most discussed topics:",{topics:Object.entries(S).sort((x,v)=>v[1]-x[1]).slice(0,3)}),c("info","  Most discussed purposes:",{purposes:Object.entries(b).sort((x,v)=>v[1]-x[1]).slice(0,3)}),c("info",`[LearningSystem] Analysis around milestone ${e} complete.`)}catch(t){c("error",`[LearningSystem] Error analyzing patterns around milestone ${e}:`,{error:t.message})}}W();M();async function Tr(e,t){try{c("INFO","record_milestone_context tool started",{milestoneName:e.name,category:e.milestoneCategory||"uncategorized",conversationId:e.conversationId});let{conversationId:n,name:r,description:o="",customData:s={},milestoneCategory:a="uncategorized",assessImpact:l=!0}=e;if(!r){let h=new Error("Milestone name is required");throw h.code="MISSING_NAME",h}let i=[],u=null,m=[];try{i=await qe(),u=await X(),m=i.map(h=>h.id),c("DEBUG","Retrieved active context",{entityCount:m.length,hasFocus:!!u})}catch(h){c("WARN","Error retrieving active context, continuing with empty context",{error:h.message})}let y={milestoneCategory:a,name:r,description:o,activeFocus:u,entityIds:m,customData:s,timestamp:Date.now(),conversationId:n},_;try{_=await F("milestone_created",{name:r,category:a,entityCount:m.length,timestamp:Date.now()},m,n),c("DEBUG","Recorded milestone event in timeline",{eventId:_})}catch(h){throw c("ERROR","Failed to record milestone event in timeline",{error:h.message,name:r,category:a}),h}let g;try{g=await bt(y,r,o,_),c("INFO",`Created milestone with ID: ${g}`);try{let h=Sr(),f=new Date().toISOString(),p=JSON.stringify(y),E=`
          INSERT INTO context_states (
            state_id, milestone_id, conversation_id, state_type, 
            state_data, created_at, metadata
          ) VALUES (?, ?, ?, ?, ?, ?, ?)
        `,S=[h,g,n,"milestone",p,f,JSON.stringify({name:r,description:o,category:a})];await C(E,S),c("INFO",`Saved milestone state in context_states with ID: ${h}`)}catch(h){c("ERROR","Failed to save milestone in context_states table",{error:h.message,milestoneId:g})}}catch(h){throw c("ERROR","Failed to create milestone snapshot",{error:h.message,name:r,eventId:_}),h}let w=null;if(l)try{c("INFO","Starting impact assessment for milestone",{milestoneId:g,category:a}),w=await vr(g,a,m)}catch(h){c("WARN","Failed to assess milestone impact",{error:h.message,milestoneId:g}),w={impactScore:0,impactLevel:"unknown",impactSummary:`Unable to assess impact: ${h.message}`,error:h.message,scopeMetrics:{directlyModifiedEntities:m.length,potentiallyImpactedEntities:0,impactedComponents:0,criticalPathsCount:0}}}else c("DEBUG","Skipping impact assessment (not requested)");setTimeout(()=>{c("DEBUG",`Starting background pattern analysis for milestone: ${g}`),Ht(g).catch(h=>{c("ERROR","Error in background pattern analysis",{error:h.message,milestoneId:g})})},100),c("INFO","record_milestone_context tool completed successfully",{milestoneId:g,entityCount:m.length,hasImpactAssessment:!!w});let T={message:`Milestone "${r}" recorded successfully with ${m.length} related entities.`,milestoneId:g,status:"success",milestoneCategory:a,relatedEntitiesCount:m.length,impactAssessment:w};return{content:[{type:"text",text:JSON.stringify(T)}]}}catch(n){c("ERROR","Error in record_milestone_context tool",{error:n.message,stack:n.stack,input:{name:e.name,category:e.milestoneCategory,conversationId:e.conversationId}});let r={error:!0,errorCode:n.code||"MILESTONE_RECORDING_FAILED",errorDetails:n.message,milestoneId:null,status:"error",milestoneCategory:e.milestoneCategory||"uncategorized",relatedEntitiesCount:0,impactAssessment:{error:n.message}};return{content:[{type:"text",text:JSON.stringify(r)}]}}}async function vr(e,t,n){try{if(c("DEBUG",`Assessing impact for milestone: ${e}`,{category:t,entityCount:n?.length||0}),!n||n.length===0)return c("DEBUG","No active context entities, skipping detailed impact assessment"),{impactScore:0,impactLevel:"none",impactSummary:"No code entities were modified in this milestone.",scopeMetrics:{directlyModifiedEntities:0,potentiallyImpactedEntities:0,impactedComponents:0,criticalPathsCount:0}};let r=[];try{c("DEBUG",`Fetching details for ${n.length} entities`),r=(await Promise.all(n.map(async h=>{try{let p=await C("SELECT * FROM code_entities WHERE entity_id = ?",[h]);return p.length>0?p[0]:null}catch(f){return c("WARN","Failed to fetch entity details",{error:f.message,entityId:h}),null}}))).filter(Boolean),c("DEBUG",`Retrieved details for ${r.length}/${n.length} entities`)}catch(T){return c("ERROR","Failed to fetch entity details",{error:T.message}),{impactScore:.1,impactLevel:"unknown",impactSummary:`Impact could not be fully assessed due to database error: ${T.message}`,scopeMetrics:{directlyModifiedEntities:n.length,potentiallyImpactedEntities:0,impactedComponents:0,criticalPathsCount:0},error:T.message}}let o=new Set(n),s=[],a=new Map,l=new Map;r.forEach(T=>{l.set(T.entity_id,T.entity_type)});try{for(let T of r){let h=await ce(T.entity_id,"outgoing");c("DEBUG",`Retrieved ${h.length} outgoing relationships for entity`,{entityId:T.entity_id,entityType:T.entity_type});for(let E of h)o.has(E.target_entity_id)||(o.add(E.target_entity_id),(E.relationship_type==="calls"||E.relationship_type==="extends"||E.relationship_type==="implements")&&s.push({source:T.entity_id,target:E.target_entity_id,type:E.relationship_type,criticality:.8}));let p=(T.file_path||"").split("/").slice(0,2).join("/");if(p){let E=a.get(p)||0;a.set(p,E+1)}}}catch(T){c("WARN","Error analyzing relationships",{error:T.message,milestoneId:e})}c("DEBUG","Completed relationship analysis",{impactedEntities:o.size,criticalPaths:s.length,componentCount:a.size});let i=n.length,u=o.size-i,m=a.size,y=s.length,_,g;try{let T=Math.min(1,i*.02+u*.01+m*.1+y*.05),h=1;switch(t){case"major_feature":h=1.2;break;case"refactoring":h=1.5;break;case"bug_fix":h=.7;break;case"critical_fix":h=1.3;break;default:h=1}_=Math.min(1,T*h),_<.2?g="low":_<.5?g="medium":_<.8?g="high":g="critical",c("INFO","Calculated impact assessment",{impactScore:_,impactLevel:g,directlyModified:i,potentiallyImpacted:u,components:m})}catch(T){c("ERROR","Error calculating impact score",{error:T.message}),_=.3,g="medium"}let w;try{w=Cr(g,i,u,m,y,t)}catch(T){c("WARN","Error generating impact summary",{error:T.message}),w=`This milestone has a ${g} impact, affecting ${i} entities directly and potentially impacting ${u} others.`}return{impactScore:_,impactLevel:g,impactSummary:w,scopeMetrics:{directlyModifiedEntities:i,potentiallyImpactedEntities:u,impactedComponents:m,criticalPathsCount:y},componentBreakdown:Object.fromEntries(a),criticalPathsTop:s.slice(0,5)}}catch(r){return c("ERROR","Error in impact assessment",{error:r.message,stack:r.stack,milestoneId:e,category:t}),{impactScore:.1,impactLevel:"unknown",impactSummary:`Impact assessment encountered an error: ${r.message}`,error:r.message,scopeMetrics:{directlyModifiedEntities:n?n.length:0,potentiallyImpactedEntities:0,impactedComponents:0,criticalPathsCount:0}}}}function Cr(e,t,n,r,o,s){try{let a=`This ${s} milestone has a ${e} impact, `;switch(a+=`directly modifying ${t} entities and potentially affecting ${n} additional entities. `,r>0&&(a+=`Changes span ${r} component${r===1?"":"s"}. `),o>0&&(a+=`Found ${o} critical dependency path${o===1?"":"s"} that may require careful testing. `),s){case"refactoring":a+="Since this is a refactoring, consider comprehensive regression testing.";break;case"major_feature":a+="As a major feature, ensure adequate test coverage for new functionality.";break;case"bug_fix":a+="For this bug fix, focus testing on the specific issue resolution.";break;case"critical_fix":a+="This critical fix requires careful validation in production-like environments.";break}return a}catch(a){return c("WARN","Error generating impact summary text",{error:a.message}),`This milestone has a ${e} impact, affecting ${t} entities directly.`}}var Jt={name:"record_milestone_context",description:"Records a development milestone and its context, creating a snapshot for reference and learning",inputSchema:zt,outputSchema:Ut,handler:Tr};N();import"zod";async function He(e){try{console.log(`[LearningSystem] Extracting patterns from conversation ${e}`);let t=await $(e,50,0);return!t||t.length===0?(console.log(`[LearningSystem] No messages found in conversation ${e}`),[]):[]}catch(t){return console.error(`[LearningSystem] Error extracting patterns: ${t.message}`),[]}}async function Qt(e){try{console.log(`[LearningSystem] Extracting bug patterns from conversation ${e}`);let t=await $(e,50,0);if(!t||t.length===0)return console.log(`[LearningSystem] No messages found in conversation ${e}`),[];let n=["error","bug","issue","problem","crash","fail","exception","TypeError","undefined"],r=[];for(let s=0;s<t.length;s++){let a=t[s];a.role==="user"&&n.some(l=>a.content.toLowerCase().includes(l))&&s+1<t.length&&t[s+1].role==="assistant"&&r.push({errorMessage:a.content,solutionMessage:t[s+1].content})}let o=r.map((s,a)=>{let l=s.errorMessage.substring(0,100),i=s.solutionMessage.substring(0,150),u=`Bug Pattern ${a+1}`,m=s.errorMessage.match(/(TypeError|ReferenceError|SyntaxError|RangeError|Error):/);if(m&&m[1])u=`${m[1]} Pattern`;else{let y=n.filter(_=>s.errorMessage.toLowerCase().includes(_));y.length>0&&(u=`${y[0].charAt(0).toUpperCase()+y[0].slice(1)} Pattern`)}return{name:u,description:l,solution:i||"No specific solution identified",detected_at:new Date().toISOString(),source_conversation_id:e,frequency:1,confidence_score:.7}});return console.log(`[LearningSystem] Extracted ${o.length} bug patterns from conversation ${e}`),o}catch(t){return console.error(`[LearningSystem] Error extracting bug patterns: ${t.message}`),[]}}async function Kt(e){try{let t;if(typeof e=="string")console.log(`[LearningSystem] Extracting key-value pairs from conversation ${e}`),t=await $(e,50,0);else if(Array.isArray(e))t=e;else return console.error(`[LearningSystem] Invalid input type for extractKeyValuePairs: ${typeof e}`),[];if(!t||!Array.isArray(t)||t.length===0)return[];let n=[],r=[/(\w+[\s\w]*)\s+is\s+([\w\s]+)/i,/(\w+[\s\w]*)\s*=\s*([\w\s]+)/i,/(\w+[\s\w]*)\s*:\s*([\w\s]+)/i,/the\s+(\w+[\s\w]*)\s+of\s+(\w+[\s\w]*)\s+is\s+([\w\s]+)/i];for(let o of t){let a=(o.content||"").split(/[.!?]+/);for(let l of a)if(l.trim().length!==0)for(let i of r){let u=l.match(i);u&&(i.toString().includes("of")?n.push({key:`${u[1].trim()} of ${u[2].trim()}`,value:u[3].trim(),confidence:.7,source:"conversation",source_id:typeof e=="string"?e:o.conversation_id,timestamp:new Date().toISOString()}):n.push({key:u[1].trim(),value:u[2].trim(),confidence:.8,source:"conversation",source_id:typeof e=="string"?e:o.conversation_id,timestamp:new Date().toISOString()}))}}return console.log(`[LearningSystem] Extracted ${n.length} key-value pairs`),n}catch(t){return console.error(`[LearningSystem] Error extracting key-value pairs: ${t.message}`),[]}}M();import{v4 as br}from"uuid";async function Rr(e,t){try{c("INFO","finalize_conversation_context tool started",{conversationId:e.conversationId,outcome:e.outcome||"completed",clearActiveContext:e.clearActiveContext||!1});let{conversationId:n,clearActiveContext:r=!1,extractLearnings:o=!0,promotePatterns:s=!0,synthesizeRelatedTopics:a=!0,generateNextSteps:l=!0,outcome:i="completed"}=e;if(!n){let p=new Error("Conversation ID is required");throw p.code="MISSING_CONVERSATION_ID",p}c("DEBUG","Processing options",{extractLearnings:o,promotePatterns:s,synthesizeRelatedTopics:a,generateNextSteps:l});let u=[],m=null,y=[];try{if(u=await $(n),!u||u.length===0){let p=new Error(`No conversation history found for ID: ${n}`);throw p.code="CONVERSATION_NOT_FOUND",p}c("DEBUG","Retrieved conversation history",{messageCount:u.length})}catch(p){throw c("ERROR","Failed to retrieve conversation history",{error:p.message,conversationId:n}),p}try{m=await Ct(n),c("DEBUG",`Retrieved conversation purpose: ${m||"Unknown"}`)}catch(p){c("WARN","Failed to retrieve conversation purpose",{error:p.message,conversationId:n})}try{y=await Fe(n),c("DEBUG",`Retrieved ${y.length} conversation topics`)}catch(p){c("WARN","Failed to retrieve conversation topics",{error:p.message,conversationId:n}),y=[]}let _="";try{_=await Tt(n),c("INFO","Generated conversation summary",{summaryLength:_.length})}catch(p){c("WARN","Failed to generate conversation summary",{error:p.message,conversationId:n}),_=`Conversation ${n} with ${u.length} messages`}try{await F("conversation_end",{summary:_,purpose:m,topics:y.length,outcome:i},[],n),c("DEBUG","Recorded conversation_end event in timeline")}catch(p){c("WARN","Failed to record conversation_end event",{error:p.message,conversationId:n})}let g=null,w=null,T=null,h=null;if(o)try{c("INFO","Extracting learnings from conversation"),g=await Ar(n,u),c("INFO",`Extracted ${g?.patterns?.length||0} patterns and ${g?.bugPatterns?.length||0} bug patterns`)}catch(p){c("WARN","Failed to extract learnings",{error:p.message,conversationId:n}),g={patterns:[],bugPatterns:[],conceptualInsights:[],error:p.message}}else c("DEBUG","Skipping learning extraction (not requested)");if(s)try{c("INFO","Promoting patterns from conversation"),w=await Ir(n,i),c("INFO",`Promoted ${w?.count||0} patterns`)}catch(p){c("WARN","Failed to promote patterns",{error:p.message,conversationId:n}),w={count:0,patterns:[],error:p.message}}else c("DEBUG","Skipping pattern promotion (not requested)");if(a)try{c("INFO","Finding and synthesizing related conversations"),T=await Nr(n,y,m),c("INFO",`Found ${T?.conversations?.length||0} related conversations`)}catch(p){c("WARN","Failed to synthesize related conversations",{error:p.message,conversationId:n}),T={conversations:[],insights:[],error:p.message}}else c("DEBUG","Skipping related topic synthesis (not requested)");if(l)try{c("INFO","Generating next step suggestions"),h=await kr(n,m,_,g),c("INFO",`Generated ${h?.suggestions?.length||0} next step suggestions`)}catch(p){c("WARN","Failed to generate next step suggestions",{error:p.message,conversationId:n}),h={suggestions:[],error:p.message}}else c("DEBUG","Skipping next step generation (not requested)");if(r)try{await ee(),c("INFO","Cleared active context")}catch(p){c("WARN","Failed to clear active context",{error:p.message})}try{let p=new Date().toISOString();if(await C(`
        UPDATE conversation_purposes
        SET end_timestamp = ?
        WHERE conversation_id = ? AND end_timestamp IS NULL
      `,[p,n]),c("INFO","Marked all active conversation purposes as ended"),!((await C(`
        SELECT COUNT(*) as count FROM conversation_purposes 
        WHERE conversation_id = ?
      `,[n]))?.rows?.[0]?.count>0)){let v=br(),R=new Date(Date.now()-6e4).toISOString();await C(`
          INSERT INTO conversation_purposes (
            purpose_id, conversation_id, purpose_type, confidence,
            start_timestamp, end_timestamp, metadata
          ) VALUES (?, ?, ?, ?, ?, ?, ?)
        `,[v,n,"general_query",.8,R,p,JSON.stringify({source:"finalization",outcome:i})]),c("INFO","Created general_query purpose record for finalization")}}catch(p){c("WARN","Failed to finalize conversation purposes",{error:p.message,conversationId:n})}c("INFO","finalize_conversation_context tool completed successfully");let f={message:`Conversation ${n} finalized successfully with outcome: ${i}`,status:"success",summary:_,purpose:m||"Unknown purpose",extractedLearnings:g,promotedPatterns:w,relatedConversations:T,nextSteps:h};return{content:[{type:"text",text:JSON.stringify(f)}]}}catch(n){c("ERROR","Error in finalize_conversation_context tool",{error:n.message,stack:n.stack,input:{conversationId:e.conversationId,outcome:e.outcome}});let r={error:!0,errorCode:n.code||"FINALIZATION_FAILED",errorDetails:n.message,summary:"Failed to finalize conversation context",purpose:"Unknown due to error",extractedLearnings:null,promotedPatterns:null,relatedConversations:null,nextSteps:null};return{content:[{type:"text",text:JSON.stringify(r)}]}}}async function Ar(e,t=!0,n=!1){try{c("INFO","Extracting learnings from conversation");let r=0,o=0;if(t)try{let s=await He(e);s&&s.length>0&&(r=s.length,n&&s.length>0)}catch(s){c("WARN",`Failed to extract patterns: ${s.message}`)}try{let s=await Qt(e);s&&s.length>0&&(o=s.length)}catch(s){c("WARN",`Failed to extract bug patterns: ${s.message}`)}try{let s=await Kt(e);s&&s.length>0}catch(s){c("WARN",`Failed to extract key-value pairs: ${s.message}`)}return c("INFO",`Extracted ${r} patterns and ${o} bug patterns`),{patternCount:r,bugPatternCount:o}}catch(r){return c("ERROR",`Error extracting conversation learnings: ${r.message}`),{patternCount:0,bugPatternCount:0}}}async function Ir(e,t){try{console.log(`[_promoteConversationPatterns] Promoting patterns for conversation ${e}`);let n=await He(e);if(!n||n.length===0)return console.log(`[_promoteConversationPatterns] No patterns found in conversation ${e}`),{promoted:0,patterns:[]};console.log(`[_promoteConversationPatterns] Found ${n.length} patterns to evaluate for promotion`);let r={promoted:0,patterns:[]},o=.5;t==="completed"&&(o=.6),t==="abandoned"&&(o=.7);for(let s of n)try{if(s.is_global){r.patterns.push({patternId:s.pattern_id,name:s.name,type:s.pattern_type,promoted:!1,confidence:s.confidence_score});continue}if(s.confidence_score<o){r.patterns.push({patternId:s.pattern_id,name:s.name,type:s.pattern_type,promoted:!1,confidence:s.confidence_score});continue}await Ee(s.pattern_id,s.confidence_score);let a=t==="completed"||t==="reference_only"?"confirmation":"usage";await Ge(s.pattern_id,a,{conversationId:e}),r.promoted++,r.patterns.push({patternId:s.pattern_id,name:s.name,type:s.pattern_type,promoted:!0,confidence:s.confidence_score}),console.log(`[_promoteConversationPatterns] Successfully promoted pattern ${s.pattern_id}`)}catch(a){console.warn(`[_promoteConversationPatterns] Error processing pattern ${s.pattern_id}:`,a)}return console.log(`[_promoteConversationPatterns] Promoted ${r.promoted} patterns to global repository`),r}catch(n){return console.error("[_promoteConversationPatterns] Error promoting patterns:",n),{promoted:0,patterns:[],error:n.message}}}async function Nr(e,t,n){try{console.log(`[_findAndSynthesizeRelatedConversations] Finding related conversations for ${e}`);let r=new Set;t&&Array.isArray(t)?t.forEach(u=>{u.keywords&&Array.isArray(u.keywords)&&u.keywords.forEach(m=>r.add(m))}):console.warn("[_findAndSynthesizeRelatedConversations] conversationTopics is not an array:",typeof t);let o=Array.from(r),s=await z({types:["conversation_end","conversation_completed"],limit:10,excludeConversationId:e});if(!s||s.length===0)return console.log("[_findAndSynthesizeRelatedConversations] No recent conversations found to compare"),{relatedCount:0,conversations:[],synthesizedInsights:[]};let a=[];for(let u of s)try{if(!u.data||!u.conversation_id)continue;let m=await Fe(u.conversation_id),y=new Set;if(m&&Array.isArray(m))m.forEach(h=>{h.keywords&&Array.isArray(h.keywords)&&h.keywords.forEach(f=>y.add(f))});else{console.warn(`[_findAndSynthesizeRelatedConversations] eventTopics for ${u.conversation_id} is not an array`);continue}let _=o.filter(h=>y.has(h)).length,g=new Set([...o,...y]).size,w=g>0?_/g:0,T=[];m&&Array.isArray(m)&&t&&Array.isArray(t)&&m.forEach(h=>{t.forEach(f=>{h.topic_name&&f.topic_name&&h.topic_name.toLowerCase()===f.topic_name.toLowerCase()&&T.push(h.topic_name)})}),(w>.2||T.length>0)&&a.push({conversationId:u.conversation_id,summary:u.data.summary||"No summary available",timestamp:u.timestamp,similarityScore:w,commonTopics:T})}catch(m){console.warn(`[_findAndSynthesizeRelatedConversations] Error processing event ${u.event_id}:`,m)}a.sort((u,m)=>m.similarityScore-u.similarityScore);let l=a.slice(0,5);console.log(`[_findAndSynthesizeRelatedConversations] Found ${l.length} related conversations`);let i=await Or(l,n);return{relatedCount:l.length,conversations:l,synthesizedInsights:i}}catch(r){return console.error("[_findAndSynthesizeRelatedConversations] Error finding related conversations:",r),{relatedCount:0,conversations:[],synthesizedInsights:[],error:r.message}}}async function Or(e,t){try{if(!e||e.length===0)return[];let n={};if(e.forEach(o=>{o.commonTopics&&o.commonTopics.length>0&&o.commonTopics.forEach(s=>{n[s]||(n[s]=[]),n[s].push(o)})}),Object.keys(n).length===0&&t){let o=`Conversations about ${t}`;n[o]=e}let r=[];for(let[o,s]of Object.entries(n))if(s.length>=2){let a=s.map(i=>i.summary).join(" | "),l=await P(a,{targetLength:150,preserveKeyPoints:!0});r.push({topic:o,insight:l,conversationCount:s.length,sourceSummaries:s.map(i=>({conversationId:i.conversationId,summary:i.summary}))})}return r}catch(n){return console.error("[_synthesizeInsightsFromRelatedConversations] Error synthesizing insights:",n),[]}}async function kr(e,t,n,r){try{console.log(`[_generateNextStepSuggestions] Generating next steps for conversation ${e}`);let o={suggestedNextSteps:[],followUpTopics:[],referenceMaterials:[]},s=I(n),a=L(s,10),l="general_query";t&&(typeof t=="string"?l=t:typeof t=="object"&&t.purposeType?l=t.purposeType:typeof t=="object"&&t.purpose_type&&(l=t.purpose_type)),console.log(`[_generateNextStepSuggestions] Using purpose type: ${l}`);let i=[],u=[];if(l)switch(typeof l=="string"?l.toLowerCase():"general_query"){case"debugging":case"bug_fixing":i.push({action:"Create a test case that verifies the bug fix",priority:"high",rationale:"Ensure the bug doesn't reoccur in the future"}),i.push({action:"Document the root cause and solution",priority:"medium",rationale:"Help prevent similar issues in the future"});break;case"feature_planning":case"design_discussion":i.push({action:"Create tickets/tasks for implementation work",priority:"high",rationale:"Break down the feature into manageable pieces"}),i.push({action:"Draft initial implementation plan with milestones",priority:"medium",rationale:"Establish a timeline and checkpoints"});break;case"code_review":i.push({action:"Address feedback points and resubmit for review",priority:"high",rationale:"Incorporate the suggested improvements"}),i.push({action:"Update documentation to reflect changes",priority:"medium",rationale:"Keep documentation in sync with code"});break;case"onboarding":case"knowledge_sharing":i.push({action:"Create summary documentation of discussed topics",priority:"high",rationale:"Solidify knowledge transfer"}),i.push({action:"Schedule follow-up session for additional questions",priority:"medium",rationale:"Address remaining questions after initial processing"});break;default:i.push({action:"Document key decisions from the conversation",priority:"medium",rationale:"Preserve important context for future reference"})}if(r&&r.learnings){let m=r.learnings.filter(_=>_.type==="design_decision");m.length>0&&m.filter(g=>g.confidence>=.7).slice(0,2).forEach(g=>{u.push({topic:`Implementation details for: ${g.content}`,priority:"high",rationale:"Turn design decision into concrete implementation"})});let y=r.learnings.filter(_=>_.type==="bug_pattern");y.length>0&&y.filter(g=>g.confidence>=.8).slice(0,2).forEach(g=>{u.push({topic:`Root cause analysis for: ${g.content}`,priority:"medium",rationale:"Prevent similar bugs in the future"})})}try{let m=Array.isArray(a)?a.filter(y=>typeof y=="string"):[];if(m.length>0){let _=(await Y(m,{fileTypes:["md","txt","rst","pdf","doc"],maxResults:5,searchDocumentation:!0})).map(g=>({title:g.name||g.file_path||"Unnamed reference",path:g.file_path,type:g.entity_type||"document",relevance:g.score||.5}));o.referenceMaterials=_}}catch(m){console.error("Error in searchByKeywords:",m)}return o.suggestedNextSteps=i,o.followUpTopics=u,console.log(`[_generateNextStepSuggestions] Generated ${i.length} next steps and ${u.length} follow-up topics`),o}catch(o){return console.error("[_generateNextStepSuggestions] Error generating next steps:",o),{suggestedNextSteps:[],followUpTopics:[],referenceMaterials:[],error:o.message}}}var Zt={name:"finalize_conversation_context",description:"Finalizes a conversation context, extracting learnings, promoting patterns, and generating insights",inputSchema:Bt,outputSchema:jt,handler:Rr};var Lr=[Wt,Gt,Xt,Jt,Zt],Yt=Lr;M();typeof global.lastConversationId>"u"&&(global.lastConversationId=null);function we(e,t){return async(n,r)=>{try{c("DEBUG",`${t} tool handler invoked`,{paramsKeys:Object.keys(n)});let o=n;if(n&&typeof n=="object"&&Object.keys(n).length===1&&n.signal&&Object.keys(n.signal).length===0)o={},c("WARN",`${t} received only signal object, using defaults`,{params:n});else if(n&&n.signal&&Object.keys(n).length>1){let{signal:u,...m}=n;o=m,c("DEBUG",`${t} extracted parameters from signal object`,{extractedParams:Object.keys(o)})}let s=Dr(o);c("DEBUG",`${t} extracted parameters`,{extractedParams:s});let l={...Mr(t),...s};c("DEBUG",`${t} merged parameters`,{mergedParams:l}),l.conversationId?global.lastConversationId=l.conversationId:global.lastConversationId&&(l.conversationId=global.lastConversationId,c("INFO",`Using last conversation ID: ${global.lastConversationId}`));let i=await e(l,r);return{content:[{type:"text",text:typeof i=="string"?i:JSON.stringify(i)}]}}catch(o){return c("ERROR",`Error in ${t} tool handler`,{error:o.message,stack:o.stack}),{content:[{type:"text",text:JSON.stringify({error:!0,message:o.message,details:o.stack})}]}}}}function Dr(e){let t={};try{if(e&&typeof e=="object"){if(Object.keys(e).forEach(n=>{n!=="signal"&&n!=="requestId"&&(t[n]=e[n])}),e.random_string)try{let n=JSON.parse(e.random_string);Object.assign(t,n)}catch{typeof e.random_string=="string"&&e.random_string.length>30&&e.random_string.includes("-")&&(t.conversationId=e.random_string)}e.conversationId&&(t.conversationId=e.conversationId),e.initialQuery&&(t.initialQuery=e.initialQuery),e.contextDepth&&(t.contextDepth=e.contextDepth),e.query&&(t.query=e.query),e.name&&(t.name=e.name),e.newMessages&&(t.newMessages=Array.isArray(e.newMessages)?e.newMessages:[e.newMessages]),e.codeChanges&&(t.codeChanges=Array.isArray(e.codeChanges)?e.codeChanges:[e.codeChanges])}else if(typeof e=="string")try{let n=JSON.parse(e);Object.assign(t,n)}catch{e.length>30&&e.includes("-")&&(t.conversationId=e)}}catch(n){c("ERROR",`Error extracting params: ${n.message}`)}return t}function Mr(e){switch(e){case"initialize_conversation_context":return{initialQuery:"Starting a new conversation with DevContext",includeArchitecture:!0,includeRecentConversations:!0,maxCodeContextItems:5,maxRecentChanges:5,contextDepth:"standard"};case"update_conversation_context":return{conversationId:global.lastConversationId,newMessages:[{role:"user",content:"Working with DevContext tools"}],preserveContextOnTopicShift:!0,contextIntegrationLevel:"balanced",trackIntentTransitions:!0};case"retrieve_relevant_context":return{conversationId:global.lastConversationId,query:"DevContext tools and functionality",constraints:{includeConversation:!0,crossTopicSearch:!1},contextFilters:{minRelevanceScore:.3},weightingStrategy:"balanced",balanceStrategy:"proportional",contextBalance:"auto"};case"record_milestone_context":return{conversationId:global.lastConversationId,name:"DevContext Tool Milestone",description:"Milestone recorded during DevContext tools testing",milestoneCategory:"uncategorized",assessImpact:!0};case"finalize_conversation_context":return{conversationId:global.lastConversationId,clearActiveContext:!1,extractLearnings:!0,promotePatterns:!0,synthesizeRelatedTopics:!0,generateNextSteps:!0,outcome:"completed"};default:return{}}}function Vt(e){return we(e,"initialize_conversation_context")}function en(e){return we(e,"finalize_conversation_context")}process.env.MCP_MODE="true";var Je=process.stdout.write,$r=process.stderr.write,Pr=console.log,Fr=console.error,zr=console.warn,Ur=console.info,Br=console.debug;function tn(e){if(typeof e!="string")return!1;let t=e.trim();if(!(t.startsWith("{")||t.startsWith("[")))return!1;try{return JSON.parse(t),!0}catch{return!1}}process.stdout.write=function(e,t,n){return process.env.MCP_MODE==="true"?typeof e=="string"&&tn(e)?Je.apply(process.stdout,arguments):(n&&n(),!0):Je.apply(process.stdout,arguments)};process.stderr.write=function(e,t,n){return process.env.MCP_MODE==="true"?(n&&n(),!0):$r.apply(process.stderr,arguments)};console.log=function(...e){if(process.env.MCP_MODE==="true"){e.length===1&&typeof e[0]=="string"&&tn(e[0])&&Je.call(process.stdout,e[0]+`
`);return}else return Pr.apply(console,e)};console.error=function(...e){if(process.env.MCP_MODE!=="true")return Fr.apply(console,e)};console.warn=function(...e){if(process.env.MCP_MODE!=="true")return zr.apply(console,e)};console.info=function(...e){if(process.env.MCP_MODE!=="true")return Ur.apply(console,e)};console.debug=function(...e){if(process.env.MCP_MODE!=="true")return Br.apply(console,e)};var Se=null;async function qr(){let e=process.env.MCP_MODE==="true";if(e)try{try{Q(),await xe(),await be()}catch{}}catch{}else{(!H||!te)&&(c("error","Database credentials not set. TURSO_DATABASE_URL and TURSO_AUTH_TOKEN are required."),process.exit(1));try{c("info","Getting database client...");let r=Q();c("info","Database client created successfully.")}catch(r){c("error",`Failed to create database client: ${r.message}`),process.exit(1)}try{c("info","Testing database connection..."),await xe(),c("info","Database connection successful.")}catch(r){c("error",`Database connection failed: ${r.message}`),process.exit(1)}try{c("info","Initializing database schema..."),await be(),c("info","Database schema initialized successfully.")}catch(r){c("error",`Failed to initialize database schema: ${r.message}`),process.exit(1)}try{kt(60),c("info","Scheduled periodic pattern consolidation.");let r=24*60*60*1e3;Se=setInterval(async()=>{try{c("info","Applying context decay..."),await It(),c("info","Context decay applied successfully.")}catch(o){c("error","Error applying context decay:",{error:o.message})}},r),c("info",`Scheduled periodic context decay every ${r/(60*60*1e3)} hours.`)}catch(r){c("warn",`Failed to schedule background tasks: ${r.message}`)}}let t=new jr({name:"cursor10x",version:"2.0.0"});for(let r of Yt){let o;r.name==="initialize_conversation_context"?o=Vt(r.handler):r.name==="finalize_conversation_context"?o=en(r.handler):o=we(r.handler,r.name),t.tool(r.name,r.inputSchema,o),e||c("info",`Registered tool: ${r.name}`)}let n=new Wr;e||c("info",`Starting MCP server with PID ${process.pid}...`),Gr();try{await t.connect(n),e||c("info","MCP server stopped."),Te()}catch(r){e||c("error",`MCP server error: ${r.message}`),Te(),process.exit(1)}}function Gr(){let e=process.env.MCP_MODE==="true";process.on("SIGINT",()=>{e||c("info","Received SIGINT signal. Shutting down gracefully..."),Te(),process.exit(0)}),process.on("SIGTERM",()=>{e||c("info","Received SIGTERM signal. Shutting down gracefully..."),Te(),process.exit(0)})}function Te(){let e=process.env.MCP_MODE==="true";Se&&(clearInterval(Se),Se=null,e||c("info","Cleared context decay timer."))}(import.meta.url===import.meta.mainUrl||process.env.NODE_ENV!=="test")&&qr().catch(e=>{process.env.MCP_MODE!=="true"&&c("error",`Unhandled error in startServer: ${e.message}`),process.exit(1)});export{qr as startServer};
//# sourceMappingURL=mcp-server.bundle.js.map
