#!/usr/bin/env node
"use strict";
var ce=(e,t)=>()=>(e&&(t=e(e=0)),t);import Vt from"dotenv";var V,ee,We,zr,U,Xe,Ur,B=ce(()=>{Vt.config();V=process.env.TURSO_DATABASE_URL,ee=process.env.TURSO_AUTH_TOKEN,We=process.env.LOG_LEVEL||"INFO",zr=process.env.DB_LOGGING_ENABLED==="true",U=parseInt(process.env.DEFAULT_TOKEN_BUDGET||"4000",10),Xe=parseFloat(process.env.CONTEXT_DECAY_RATE||"0.95"),Ur=parseInt(process.env.MAX_CACHE_SIZE||"1000",10)});var ve,d,M=ce(()=>{B();ve={DEBUG:0,INFO:1,WARN:2,ERROR:3},d=(e,t,n=null)=>{let r=e.toUpperCase();if(!ve.hasOwnProperty(r)||ve[r]<ve[We])return;let s=`[${new Date().toISOString()}] [${r}]: ${t}`;if(n){let a=typeof n=="string"?n:JSON.stringify(n);s+=` - ${a}`}r==="DEBUG"||r==="INFO"?console.log(s):console.error(s)}});import{createClient as en}from"@libsql/client";async function tn(e,t){try{if(!e||!t)return d("error","Invalid table or column name provided"),!1;let r=await H().execute({sql:`PRAGMA table_info(${e})`});if(!r||!r.rows||r.rows.length===0)return d("warn",`No table info found for ${e}`),!1;for(let o of r.rows)if(o&&o.name===t)return!0;return d("debug",`Column ${t} not found in ${e}`),!1}catch(n){return d("error",`Error checking if column exists: ${n.message}`),!1}}async function nn(){try{let e=await x(`
      SELECT name FROM sqlite_master
      WHERE type='table' AND name='project_patterns'
    `);if(!(e&&e.rows&&e.rows.length>0)){d("info","project_patterns table doesn't exist yet, skipping migration");return}if(await tn("project_patterns","language"))d("debug","Language column already exists in project_patterns table");else{d("info","Adding language column to project_patterns table");try{await x("ALTER TABLE project_patterns ADD COLUMN language TEXT"),d("info","Successfully added language column to project_patterns table")}catch(r){if(r.message.includes("duplicate column"))d("info","Language column already exists, skipping");else throw r}try{await x("CREATE INDEX IF NOT EXISTS idx_project_patterns_language ON project_patterns(language)"),d("info","Created index for language column")}catch(r){d("warn",`Error creating index: ${r.message}`)}}}catch(e){throw new Error(`Migration failed: ${e.message}`)}}var le,H,He,x,Je,N=ce(()=>{B();M();le=null,H=()=>{if(le)return le;if(!V)throw new Error("TURSO_DATABASE_URL is not defined in environment variables");if(!ee)throw new Error("TURSO_AUTH_TOKEN is not defined in environment variables");return le=en({url:V,authToken:ee}),le},He=async(e=null)=>{try{return await(e||H()).execute("SELECT 1"),!0}catch(t){throw new Error(`Database connection test failed: ${t.message}`)}},x=async(e,t=[])=>{try{console.log("DB - EXECUTING QUERY:",{sql:e.substring(0,150)+(e.length>150?"...":""),args:t.length>0?JSON.stringify(t.slice(0,3))+(t.length>3?"...":""):"[]"});let r=await H().execute({sql:e,args:t});return console.log("DB - QUERY RESULT:",{rowCount:r.rows?.length||0,rowsPreview:r.rows?.length>0?JSON.stringify(r.rows[0]).substring(0,100)+"...":"No rows",affectedRows:r.rowsAffected}),r}catch(n){throw console.error("DB - QUERY ERROR:",{message:n.message,query:e.substring(0,150),args:t.length>0?JSON.stringify(t.slice(0,3)):"[]"}),new Error(`Query execution failed: ${n.message}
Query: ${e}`)}};Je=async()=>{try{let e=H(),t=!0;try{await nn()}catch(r){d("warn",`Migration warning: ${r.message}`)}let n=[`CREATE TABLE IF NOT EXISTS code_entities (
        entity_id TEXT PRIMARY KEY, -- UUID
        file_path TEXT, -- Full path for file entities, or path to file containing the entity
        entity_type TEXT NOT NULL, -- e.g., 'file', 'function', 'class', 'method', 'variable', 'interface', 'comment_block'
        name TEXT, -- Name of the function, class, variable etc.
        start_line INTEGER,
        end_line INTEGER,
        content_hash TEXT, -- Hash of the raw content to detect changes
        raw_content TEXT,
        summary TEXT, -- AI or rule-based summary
        language TEXT, -- Programming language
        parent_entity_id TEXT, -- For hierarchical structure (e.g., function inside a class, class inside a file)
        last_modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        last_accessed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- For recency
        importance_score REAL DEFAULT 1.0, -- For prioritization, can decay
        custom_metadata TEXT, -- JSON blob for other properties
        FOREIGN KEY (parent_entity_id) REFERENCES code_entities(entity_id) ON DELETE CASCADE
      )`,"CREATE INDEX IF NOT EXISTS idx_code_entities_file_path ON code_entities(file_path)","CREATE INDEX IF NOT EXISTS idx_code_entities_type ON code_entities(entity_type)","CREATE INDEX IF NOT EXISTS idx_code_entities_name ON code_entities(name)","CREATE INDEX IF NOT EXISTS idx_code_entities_last_accessed ON code_entities(last_accessed_at DESC)","CREATE INDEX IF NOT EXISTS idx_code_entities_importance ON code_entities(importance_score DESC)",`CREATE TABLE IF NOT EXISTS entity_keywords (
        keyword_id INTEGER PRIMARY KEY AUTOINCREMENT,
        entity_id TEXT NOT NULL,
        keyword TEXT NOT NULL,
        term_frequency REAL,
        weight REAL DEFAULT 1.0,
        keyword_type TEXT, -- e.g., 'identifier', 'comment', 'string_literal', 'n_gram_2', 'n_gram_3'
        FOREIGN KEY (entity_id) REFERENCES code_entities(entity_id) ON DELETE CASCADE
      )`,"CREATE INDEX IF NOT EXISTS idx_entity_keywords_keyword ON entity_keywords(keyword)","CREATE INDEX IF NOT EXISTS idx_entity_keywords_entity ON entity_keywords(entity_id)","CREATE UNIQUE INDEX IF NOT EXISTS idx_entity_keywords_entity_keyword_type ON entity_keywords(entity_id, keyword, keyword_type)",`CREATE VIRTUAL TABLE IF NOT EXISTS code_entities_fts USING fts5(
        entity_id UNINDEXED,
        name,
        searchable_content
      )`,`CREATE TRIGGER IF NOT EXISTS code_entities_ai AFTER INSERT ON code_entities BEGIN
        INSERT INTO code_entities_fts (entity_id, name, searchable_content)
        VALUES (new.entity_id, new.name, new.raw_content || ' ' || COALESCE(new.summary, ''));
      END`,`CREATE TRIGGER IF NOT EXISTS code_entities_ad AFTER DELETE ON code_entities BEGIN
        DELETE FROM code_entities_fts WHERE entity_id = old.entity_id;
      END`,`CREATE TRIGGER IF NOT EXISTS code_entities_au AFTER UPDATE ON code_entities BEGIN
        UPDATE code_entities_fts SET
          name = new.name,
          searchable_content = new.raw_content || ' ' || COALESCE(new.summary, '')
        WHERE entity_id = old.entity_id;
      END`,`CREATE TABLE IF NOT EXISTS code_relationships (
        relationship_id TEXT PRIMARY KEY, -- UUID
        source_entity_id TEXT NOT NULL,
        target_entity_id TEXT NOT NULL,
        relationship_type TEXT NOT NULL,
        weight REAL DEFAULT 1.0,
        metadata TEXT, -- JSON blob
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (source_entity_id) REFERENCES code_entities(entity_id) ON DELETE CASCADE,
        FOREIGN KEY (target_entity_id) REFERENCES code_entities(entity_id) ON DELETE CASCADE
      )`,"CREATE INDEX IF NOT EXISTS idx_code_relationships_source ON code_relationships(source_entity_id, relationship_type)","CREATE INDEX IF NOT EXISTS idx_code_relationships_target ON code_relationships(target_entity_id, relationship_type)","CREATE UNIQUE INDEX IF NOT EXISTS idx_code_relationships_unique ON code_relationships(source_entity_id, target_entity_id, relationship_type)",`CREATE TABLE IF NOT EXISTS conversation_history (
        message_id TEXT PRIMARY KEY, -- UUID
        conversation_id TEXT NOT NULL,
        role TEXT NOT NULL, -- 'user', 'assistant', 'system'
        content TEXT NOT NULL,
        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        related_context_entity_ids TEXT, -- JSON array of entity_ids
        summary TEXT,
        user_intent TEXT,
        topic_segment_id TEXT,        -- Reference to topic segment
        semantic_markers TEXT,        -- JSON array of semantic markers found in message
        sentiment_indicators TEXT      -- JSON structure for sentiment analysis
      )`,"CREATE INDEX IF NOT EXISTS idx_conversation_history_conversation_ts ON conversation_history(conversation_id, timestamp DESC)","CREATE INDEX IF NOT EXISTS idx_conversation_history_topic ON conversation_history(topic_segment_id)",`CREATE TABLE IF NOT EXISTS conversation_topics (
        topic_id TEXT PRIMARY KEY, -- UUID
        conversation_id TEXT NOT NULL,
        topic_name TEXT NOT NULL,
        description TEXT,
        start_message_id TEXT NOT NULL,
        end_message_id TEXT,    -- NULL if ongoing
        start_timestamp TIMESTAMP NOT NULL,
        end_timestamp TIMESTAMP,  -- NULL if ongoing
        primary_entities TEXT,    -- JSON array of entity_ids
        keywords TEXT,            -- JSON array of keywords
        summary TEXT,
        parent_topic_id TEXT,     -- For hierarchical topic structure
        FOREIGN KEY (start_message_id) REFERENCES conversation_history(message_id) ON DELETE CASCADE,
        FOREIGN KEY (parent_topic_id) REFERENCES conversation_topics(topic_id) ON DELETE SET NULL
      )`,"CREATE INDEX IF NOT EXISTS idx_conversation_topics_conversation ON conversation_topics(conversation_id)","CREATE INDEX IF NOT EXISTS idx_conversation_topics_timestamps ON conversation_topics(start_timestamp, end_timestamp)",`CREATE TABLE IF NOT EXISTS conversation_purposes (
        purpose_id TEXT PRIMARY KEY, -- UUID
        conversation_id TEXT NOT NULL,
        purpose_type TEXT NOT NULL,  -- 'debugging', 'feature_planning', 'code_review', etc.
        confidence REAL DEFAULT 0.0, -- Confidence score (0.0 to 1.0)
        start_timestamp TEXT NOT NULL, -- ISO timestamp
        end_timestamp TEXT, -- ISO timestamp, NULL if still active
        metadata TEXT -- Additional metadata in JSON format
      )`,"CREATE INDEX IF NOT EXISTS idx_conversation_purposes_conversation ON conversation_purposes(conversation_id)","CREATE INDEX IF NOT EXISTS idx_conversation_purposes_type ON conversation_purposes(purpose_type, confidence DESC)",`CREATE TABLE IF NOT EXISTS timeline_events (
        event_id TEXT PRIMARY KEY, -- UUID
        event_type TEXT NOT NULL,
        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        data TEXT, -- JSON blob
        associated_entity_ids TEXT, -- JSON array of code_entity_ids
        conversation_id TEXT -- If related to a specific conversation
      )`,"CREATE INDEX IF NOT EXISTS idx_timeline_events_ts ON timeline_events(timestamp DESC)","CREATE INDEX IF NOT EXISTS idx_timeline_events_type ON timeline_events(event_type)",`CREATE TABLE IF NOT EXISTS context_snapshots (
        snapshot_id TEXT PRIMARY KEY, -- UUID
        name TEXT,
        description TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        timeline_event_id TEXT,
        snapshot_data TEXT NOT NULL, -- JSON blob
        FOREIGN KEY (timeline_event_id) REFERENCES timeline_events(event_id) ON DELETE SET NULL
      )`,"CREATE INDEX IF NOT EXISTS idx_context_snapshots_name ON context_snapshots(name)",`CREATE TABLE IF NOT EXISTS focus_areas (
        focus_id TEXT PRIMARY KEY, -- UUID
        focus_type TEXT NOT NULL,
        identifier TEXT,
        description TEXT,
        related_entity_ids TEXT, -- JSON array of code_entity_ids
        keywords TEXT, -- JSON array of defining keywords
        last_activated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        is_active BOOLEAN DEFAULT FALSE
      )`,"CREATE INDEX IF NOT EXISTS idx_focus_areas_active ON focus_areas(is_active, last_activated_at DESC)",`CREATE TABLE IF NOT EXISTS project_patterns (
        pattern_id TEXT PRIMARY KEY, -- UUID
        pattern_type TEXT NOT NULL,
        name TEXT,
        description TEXT,
        representation TEXT NOT NULL, -- JSON or textual
        detection_rules TEXT,
        frequency INTEGER DEFAULT 0,
        last_detected_at TIMESTAMP,
        utility_score REAL DEFAULT 0.0,
        confidence_score REAL DEFAULT 0.5, -- confidence in pattern validity
        reinforcement_count INTEGER DEFAULT 1, -- times pattern was reinforced
        is_global BOOLEAN DEFAULT FALSE, -- indicates if promoted to global status
        session_origin_id TEXT, -- originating session if any
        language TEXT, -- NEW COLUMN: programming language the pattern applies to
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )`,"CREATE INDEX IF NOT EXISTS idx_project_patterns_type ON project_patterns(pattern_type)","CREATE INDEX IF NOT EXISTS idx_project_patterns_global ON project_patterns(is_global, confidence_score DESC)","CREATE INDEX IF NOT EXISTS idx_project_patterns_utility ON project_patterns(utility_score DESC)",`CREATE TABLE IF NOT EXISTS pattern_observations (
        observation_id TEXT PRIMARY KEY, -- UUID
        pattern_id TEXT NOT NULL,
        conversation_id TEXT,
        context_entities TEXT, -- JSON array of entity_ids
        observation_type TEXT NOT NULL, -- 'usage', 'confirmation', 'rejection'
        observation_data TEXT, -- JSON with details
        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (pattern_id) REFERENCES project_patterns(pattern_id) ON DELETE CASCADE
      )`,"CREATE INDEX IF NOT EXISTS idx_pattern_observations_pattern ON pattern_observations(pattern_id)","CREATE INDEX IF NOT EXISTS idx_pattern_observations_type_ts ON pattern_observations(observation_type, timestamp DESC)",`CREATE TABLE IF NOT EXISTS system_logs (
        log_id INTEGER PRIMARY KEY AUTOINCREMENT,
        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        level TEXT NOT NULL, -- 'INFO', 'WARN', 'ERROR', 'DEBUG'
        message TEXT NOT NULL,
        data TEXT -- Optional JSON blob
      )`,"CREATE INDEX IF NOT EXISTS idx_system_logs_timestamp_level ON system_logs(timestamp DESC, level)",`CREATE TABLE IF NOT EXISTS knowledge_items (
        item_id TEXT PRIMARY KEY, -- UUID
        item_type TEXT NOT NULL, -- Type of knowledge item (concept, code_pattern, domain_term, etc.)
        name TEXT NOT NULL, -- Display name of the knowledge item
        content TEXT, -- JSON or raw content depending on type
        metadata TEXT, -- Additional metadata as JSON
        confidence_score REAL DEFAULT 0.5, -- Confidence score
        created_at TEXT NOT NULL, -- Creation timestamp
        updated_at TEXT NOT NULL, -- Last update timestamp
        conversation_id TEXT -- Source conversation ID
      )`,"CREATE INDEX IF NOT EXISTS idx_knowledge_items_type ON knowledge_items(item_type)","CREATE INDEX IF NOT EXISTS idx_knowledge_items_conversation ON knowledge_items(conversation_id)","CREATE INDEX IF NOT EXISTS idx_knowledge_items_confidence ON knowledge_items(confidence_score DESC)",`CREATE TABLE IF NOT EXISTS context_states (
        state_id TEXT PRIMARY KEY, -- UUID
        milestone_id TEXT,
        conversation_id TEXT,
        topic_id TEXT,
        state_type TEXT NOT NULL, -- Type of context state
        state_data TEXT, -- JSON data representing the state
        created_at TEXT NOT NULL, -- Creation timestamp
        metadata TEXT -- Additional metadata as JSON
      )`,"CREATE INDEX IF NOT EXISTS idx_context_states_milestone ON context_states(milestone_id)","CREATE INDEX IF NOT EXISTS idx_context_states_conversation ON context_states(conversation_id)"];for(let r of n)try{await e.execute(r)}catch(o){d("error",`Error executing schema statement: ${o.message}`),d("error",`Failed statement: ${r.substring(0,100)}...`),t=!1}return t}catch(e){throw new Error(`Database schema initialization failed: ${e.message}`)}}});import{v4 as dn}from"uuid";async function be(e,t,n,r=1,o={}){if(!e||!t||!n)throw new Error("Source entity ID, target entity ID, and relationship type are required");let s=dn(),a=JSON.stringify(o);try{await x(`
      INSERT INTO code_relationships (
        relationship_id, source_entity_id, target_entity_id, relationship_type, weight, metadata
      ) VALUES (?, ?, ?, ?, ?, ?)
    `,[s,e,t,n,r,a])}catch(c){if(c.message&&c.message.includes("UNIQUE constraint failed"))await x(`
        UPDATE code_relationships 
        SET weight = ?, metadata = ? 
        WHERE source_entity_id = ? AND target_entity_id = ? AND relationship_type = ?
      `,[r,a,e,t,n]);else throw console.error(`Error adding relationship between ${e} and ${t}:`,c),c}}async function ue(e,t="outgoing",n=[]){if(!e)throw new Error("Entity ID is required");if(!["outgoing","incoming","both"].includes(t))throw new Error("Direction must be 'outgoing', 'incoming', or 'both'");let r=`
    SELECT 
      relationship_id, 
      source_entity_id, 
      target_entity_id, 
      relationship_type, 
      weight, 
      metadata
    FROM code_relationships
    WHERE 
  `,o=[];if(t==="outgoing"?(r+="source_entity_id = ?",o.push(e)):t==="incoming"?(r+="target_entity_id = ?",o.push(e)):(r+="(source_entity_id = ? OR target_entity_id = ?)",o.push(e,e)),n.length>0){let s=n.map(()=>"?").join(", ");r+=` AND relationship_type IN (${s})`,o.push(...n)}try{return(await x(r,o)).map(a=>({...a,metadata:a.metadata?JSON.parse(a.metadata):{}}))}catch(s){throw console.error(`Error getting relationships for entity ${e}:`,s),s}}var q=ce(()=>{N()});B();N();M();import{McpServer as Lr}from"@modelcontextprotocol/sdk/server/mcp.js";import{StdioServerTransport as Dr}from"@modelcontextprotocol/sdk/server/stdio.js";N();import"zod";import{v4 as Qn}from"uuid";N();import{v4 as De}from"uuid";function I(e,t="plaintext"){let n=e.toLowerCase();switch(t){case"javascript":case"typescript":case"jsx":case"tsx":return Qe(n);case"python":return Ke(n);case"java":case"csharp":case"c#":return un(n);case"ruby":return Ze(n);case"go":return pn(n);case"plaintext":default:return O(n)}}function xe(e,t){if(!e)return[];let n=[];switch(t.toLowerCase()){case"javascript":case"typescript":case"jsx":case"tsx":rn(e,n);break;case"python":on(e,n);break;case"csharp":case"c#":sn(e,n);break}return n}function rn(e,t){let n=/\.\s*then\s*\(\s*(?:function\s*\([^)]*\)|[^=>(]*=>\s*[^)]*)\s*\)(?:\s*\.(?:then|catch|finally)\s*\([^)]*\))+/g,r;for(;(r=n.exec(e))!==null;)t.push({idiom:r[0],type:"js_promise_chain",location:{start:r.index,end:r.index+r[0].length}});let o=/\basync\s+(?:function\s*[a-zA-Z0-9_$]*\s*\([^)]*\)|(?:[a-zA-Z0-9_$]+\s*=>)|(?:\([^)]*\)\s*=>))(?:(?:.|\n)*?\bawait\b(?:.|\n)*?)/g;for(;(r=o.exec(e))!==null;)t.push({idiom:r[0],type:"js_async_await",location:{start:r.index,end:r.index+r[0].length}});let s=/(?:\.|\()(?:[a-zA-Z0-9_$]+)?\s*\(\s*(?:\([^)]*\)|[a-zA-Z0-9_$]+)\s*=>\s*(?:{[^}]*}|[^);,]*)/g;for(;(r=s.exec(e))!==null;)t.some(c=>c.type==="js_promise_chain"&&r.index>=c.location.start&&r.index+r[0].length<=c.location.end)||t.push({idiom:r[0],type:"js_arrow_callback",location:{start:r.index,end:r.index+r[0].length}})}function on(e,t){let n=/\[\s*[^\[\]]*\s+for\s+[^\[\]]+\s+in\s+[^\[\]]+(?:\s+if\s+[^\[\]]+)?\s*\]/g,r;for(;(r=n.exec(e))!==null;)t.push({idiom:r[0],type:"python_list_comprehension",location:{start:r.index,end:r.index+r[0].length}});let o=/\{\s*[^{}]*\s*:\s*[^{}]*\s+for\s+[^{}]+\s+in\s+[^{}]+(?:\s+if\s+[^{}]+)?\s*\}/g;for(;(r=o.exec(e))!==null;)t.push({idiom:r[0],type:"python_dict_comprehension",location:{start:r.index,end:r.index+r[0].length}});let s=/lambda\s+[^:]+:[^,\n)]+/g;for(;(r=s.exec(e))!==null;)t.push({idiom:r[0],type:"python_lambda",location:{start:r.index,end:r.index+r[0].length}});let a=/\(\s*[^()]*\s+for\s+[^()]+\s+in\s+[^()]+(?:\s+if\s+[^()]+)?\s*\)/g;for(;(r=a.exec(e))!==null;)t.push({idiom:r[0],type:"python_generator_expression",location:{start:r.index,end:r.index+r[0].length}})}function sn(e,t){let n=/\.\s*(?:Where|Select|OrderBy|OrderByDescending|GroupBy|Join|Skip|Take|First|FirstOrDefault|Any|All|Count)\s*\(\s*[^)]*\)(?:\s*\.\s*(?:Where|Select|OrderBy|OrderByDescending|GroupBy|Join|Skip|Take|First|FirstOrDefault|Any|All|Count)\s*\(\s*[^)]*\))*/g,r;for(;(r=n.exec(e))!==null;)t.push({idiom:r[0],type:"csharp_linq_method",location:{start:r.index,end:r.index+r[0].length}});let o=/from\s+\w+\s+in\s+[^{]+(?:where\s+[^{]+)?(?:orderby\s+[^{]+)?(?:select\s+[^{;]+)?(?:group\s+[^{;]+by\s+[^{;]+)?/g;for(;(r=o.exec(e))!==null;)t.push({idiom:r[0],type:"csharp_linq_query",location:{start:r.index,end:r.index+r[0].length}});let s=/\basync\s+[^(]*\([^)]*\)(?:\s*<[^>]*>)?\s*(?:=>)?\s*{(?:(?:.|\n)*?\bawait\b(?:.|\n)*?)}/g;for(;(r=s.exec(e))!==null;)t.push({idiom:r[0],type:"csharp_async_await",location:{start:r.index,end:r.index+r[0].length}});let a=/(?:\([^)]*\)|\w+)\s*=>\s*(?:{[^}]*}|[^;]+)/g;for(;(r=a.exec(e))!==null;)t.some(i=>(i.type==="csharp_linq_method"||i.type==="csharp_linq_query")&&r.index>=i.location.start&&r.index+r[0].length<=i.location.end)||t.push({idiom:r[0],type:"csharp_lambda",location:{start:r.index,end:r.index+r[0].length}})}function L(e,t=10,n="plaintext"){let r=ln(n),o={};for(let a of e)o[a]||(o[a]=0),o[a]++;let s=[];for(let[a,c]of Object.entries(o)){if(r.has(a)&&a.length<6&&!/[_\-$#@]/.test(a))continue;let i=c;an(a,n)&&(i*=2),a.length>6&&(i*=1.5),/[_$]/.test(a)&&(i*=1.2),a.length<3&&!/[_\-$#@]/.test(a)&&(i*=.5),i=cn(a,i,n),s.push({keyword:a,score:i})}return s.sort((a,c)=>c.score-a.score).slice(0,t)}function an(e,t){return!!(/[a-z][A-Z]/.test(e)||/^[A-Z][a-z]/.test(e)||e.includes("_")&&e.length>4||/^(on|handle|process|get|set|is|has|should|with)/i.test(e)||/[a-z][0-9]/.test(e)||(t==="javascript"||t==="typescript")&&(/\$/.test(e)||/^use[A-Z]/.test(e))||t==="python"&&(/^__.*__$/.test(e)||/^self\./.test(e)))}function cn(e,t,n){switch(n){case"javascript":case"typescript":case"jsx":case"tsx":/^(use|component|props|state|render|effect|memo|callback)/.test(e)&&(t*=1.5),/^(on[A-Z]|handle[A-Z])/.test(e)&&(t*=1.3);break;case"python":/^(def|class|self|super|__init__|__main__)/.test(e)&&(t*=1.3),/^@/.test(e)&&(t*=1.4);break;case"java":case"csharp":case"c#":/^(public|private|protected|static|final|override|virtual|abstract)/.test(e)&&(t*=1.2),/^(class|interface|enum|record|struct)/.test(e)&&(t*=1.3);break;case"ruby":/^(attr_|def|class|module|require|include|extend)/.test(e)&&(t*=1.3),/^:/.test(e)&&(t*=1.2);break;case"go":/^(func|struct|interface|type|go|chan|defer|goroutine)/.test(e)&&(t*=1.3);break}return t}function ln(e){let t=new Set(["a","an","the","and","or","but","if","then","else","when","at","from","by","for","with","about","against","between","into","through","during","before","after","above","below","to","is","am","are","was","were","be","been","being","have","has","had","having","do","does","did","doing","would","should","could","ought","i","you","he","she","it","we","they","their","this","that","these","those","of","in","as","on","not","no","its","his","her"]),n=new Set(["function","class","if","else","for","while","do","switch","case","break","continue","return","try","catch","finally","throw","throws","public","private","protected","static","final","abstract","interface","extends","implements","import","export","package","namespace","var","let","const","new","this","super","null","undefined","true","false"]),r=new Set([...t,...n]);switch(e){case"javascript":case"typescript":case"jsx":case"tsx":["typeof","instanceof","async","await","yield","void","delete","module","require","console","log","window","document","event","prototype","constructor","string","number","boolean","object","array"].forEach(o=>r.add(o));break;case"python":["def","lambda","from","as","import","with","is","in","not","and","or","global","nonlocal","pass","yield","assert","del","raise","except","print","exec","eval","None","True","False","range","len","self"].forEach(o=>r.add(o));break;case"java":["void","boolean","byte","char","short","int","long","float","double","instanceof","strictfp","synchronized","transient","volatile","native","package","throws","throw","exception","assert","enum"].forEach(o=>r.add(o));break;case"csharp":case"c#":["using","namespace","where","select","from","group","into","orderby","join","equals","out","ref","in","value","is","as","void","int","string","bool","decimal","object","char","byte","sbyte","uint","long","ulong","short","ushort","double","float","dynamic","delegate","event","async","await","partial","virtual","override","sealed","base"].forEach(o=>r.add(o));break;case"ruby":["def","end","module","require","include","extend","attr","attr_reader","attr_writer","attr_accessor","lambda","proc","yield","self","nil","true","false","unless","until","begin","rescue","ensure","alias"].forEach(o=>r.add(o));break;case"go":["func","type","struct","interface","map","chan","go","select","package","import","const","var","iota","make","new","append","len","cap","nil","true","false","int","int8","int16","int32","int64","uint","uint8","uint16","uint32","uint64","float32","float64","string","byte","rune","defer","panic","recover"].forEach(o=>r.add(o));break}return r}function O(e){return e.replace(/([a-z0-9])[-_]([a-z0-9])/g,"$1$2").replace(/[.,;:(){}[\]<>?!]/g," $& ").replace(/\u0001/g,"_").split(/\s+/).filter(r=>r.length>0)}function Qe(e){let t=[],n={},r=0,s=e.replace(/\/\*[\s\S]*?\*\//g,w=>{let b=`__COMMENT_BLOCK_${r++}__`;return n[b]=w,b}).replace(/\/\/[^\n]*/g,w=>{let b=`__COMMENT_LINE_${r++}__`;return n[b]=w,b}),a={},c=0,y=s.replace(/(?<![a-zA-Z0-9_\)\]\}])\/(?:\\\/|[^\/\n])+\/[gimuy]*/g,w=>{let b=`__REGEX_${c++}__`;return a[b]=w,b}).replace(/`(?:\\`|\\\\|[^`])*`/g,w=>{let b=`__TEMPLATE_${c++}__`;a[b]=w;let C=[],v=w.match(/\${([^}]*)}/g);return v&&(v.forEach(R=>{C.push(R.slice(2,-1))}),C.forEach(R=>{let A=Qe(R);t.push(...A)})),b}).replace(/'(?:\\'|\\\\|[^'])*'|"(?:\\"|\\\\|[^"])*"/g,w=>{let b=`__STRING_${c++}__`;return a[b]=w,b}).replace(/<([A-Z][a-zA-Z0-9]*|[a-z][a-z0-9]*)((?:\s+[a-zA-Z0-9_]+(?:=(?:"|'|\{).*?(?:"|'|\}))?)*)\s*(?:\/)?>/g,(w,b,C)=>{let v=`__JSX_TAG_${c++}__`;if(a[v]=w,t.push(b),C){let R=C.match(/[a-zA-Z0-9_]+(?==)/g);R&&t.push(...R)}return v}).replace(/<\/([A-Z][a-zA-Z0-9]*|[a-z][a-z0-9]*)>/g,(w,b)=>{let C=`__JSX_CLOSING_${c++}__`;return a[C]=w,t.push(b),C}).replace(/@([a-zA-Z][a-zA-Z0-9_]*)(?:\((?:[^)(]*|\([^)(]*\))*\))?/g,(w,b)=>{let C=`__DECORATOR_${c++}__`;a[C]=w,t.push(b);let v=w.match(/\((.*)\)/);if(v&&v[1]){let R=O(v[1]);t.push(...R)}return C}).replace(/=>/g,w=>(t.push("arrow_function")," => ")).replace(/\?\./g,w=>(t.push("optional_chaining")," ?. ")).replace(/\?\?/g,w=>(t.push("nullish_coalescing")," ?? ")).replace(/import\s+(?:{[^}]*}|\*\s+as\s+[a-zA-Z][a-zA-Z0-9_]*|[a-zA-Z][a-zA-Z0-9_]*)\s+from\s+['"][^'"]*['"]/g,w=>{t.push("import");let b=w.match(/from\s+['"]([^'"]*)['"]/);b&&b[1]&&t.push(b[1]);let C=w.match(/import\s+({[^}]*}|\*\s+as\s+[a-zA-Z][a-zA-Z0-9_]*|[a-zA-Z][a-zA-Z0-9_]*)/);if(C&&C[1]){let v=C[1];if(v.startsWith("{")){let R=v.replace(/[{}]/g,"").split(",").map(A=>A.trim()).filter(A=>A.length>0);t.push(...R)}else if(v.includes("* as")){let R=v.match(/\*\s+as\s+([a-zA-Z][a-zA-Z0-9_]*)/);R&&R[1]&&t.push(R[1])}else t.push(v.trim())}return" "}),g=O(y),l=[];for(let w of g){if(w.startsWith("__")&&w.endsWith("__")){l.push(w);continue}if(["=>","?.","??"].includes(w)){l.push(w);continue}let b=w.replace(/([a-z])([A-Z])/g,"$1 $2").toLowerCase().split(" ");l.push(w),b.length>1&&l.push(...b)}let E=[];for(let w of l)if(a[w]){if(w.startsWith("__REGEX_")?E.push("regex_literal"):w.startsWith("__JSX_")?E.push("jsx_element"):w.startsWith("__DECORATOR_")?E.push("decorator"):E.push(w),w.startsWith("__STRING_")||w.startsWith("__TEMPLATE_")){let C=a[w].replace(/^[`'"](.*)[`'"]$/s,"$1"),v=O(C);E.push(...v)}}else if(n[w]){E.push("code_comment");let C=n[w].replace(/^\/\*|\*\/$/g,"").replace(/^\/\//g,"").split(/\s+/).filter(v=>/^[a-z0-9_]{3,}$/i.test(v)).map(v=>v.toLowerCase());E.push(...C)}else E.push(w);return[...new Set(E)]}function Ke(e){let t=[],n={},r=0,s=e.replace(/(?:'''[\s\S]*?'''|"""[\s\S]*?""")/g,y=>{let g=`__PYCOMMENT_BLOCK_${r++}__`;return n[g]=y,g}).replace(/#[^\n]*/g,y=>{let g=`__PYCOMMENT_LINE_${r++}__`;return n[g]=y,g}),a={},c=0,f=s.replace(/(?:f|fr|rf)(?:'''[\s\S]*?'''|"""[\s\S]*?"""|'(?:\\'|\\\\|[^'])*'|"(?:\\"|\\\\|[^"])*")/g,y=>{let g=`__PYFSTRING_${c++}__`;a[g]=y;let l=[],E=y.match(/(?<!\\){([^{}]*)}/g);return E&&(E.forEach(w=>{l.push(w.slice(1,-1))}),l.forEach(w=>{let b=Ke(w);t.push(...b)})),g}).replace(/(?:r|b|rb|br)?(?:'''[\s\S]*?'''|"""[\s\S]*?"""|'(?:\\'|\\\\|[^'])*'|"(?:\\"|\\\\|[^"])*")/g,y=>{let g=`__PYSTRING_${c++}__`;return a[g]=y,g}).replace(/@([a-zA-Z][a-zA-Z0-9_.]*)(?:\((?:[^)(]*|\([^)(]*\))*\))?/g,(y,g)=>{let l=`__PYDECORATOR_${c++}__`;a[l]=y,t.push(g);let E=y.match(/\((.*)\)/);if(E&&E[1]){let w=O(E[1]);t.push(...w)}return l}).replace(/:=/g,y=>(t.push("walrus_operator")," := ")).replace(/\[.*:.*\]/g,y=>(t.push("slice_operation"),y.slice(1,-1).split(":").forEach(E=>{if(E.trim()){let w=O(E.trim());t.push(...w)}}),y)),_=f.split(`
`),h=0;for(let y of _){if(y.trim()==="")continue;let g=y.match(/^(\s*)/),l=g?g[1].length:0;if(l!==h){if(l>h)t.push("indent");else{let w=Math.floor((h-l)/4);for(let b=0;b<w;b++)t.push("dedent")}h=l}let E=y.trim();if(E){let w=["def","class","lambda","return","yield","from","import","as","with","try","except","finally","raise","assert","if","elif","else","while","for","in","continue","break","pass","global","nonlocal","del","is","not","and","or","async","await","comprehension","self"];for(let C of w)E.includes(C)&&new RegExp(`\\b${C}\\b`,"g").test(E)&&t.push(C);let b=O(E);t.push(...b)}}(f.includes("append(")||f.includes(".extend("))&&t.push("list_operation"),(f.includes(".get(")||f.includes(".items()")||f.includes(".keys()")||f.includes(".values()"))&&t.push("dict_operation");let T=[];for(let y of t){if(y.startsWith("__")&&y.endsWith("__")){T.push(y);continue}if(y.includes("_")){let g=y.split("_").filter(l=>l.length>0);T.push(y),T.push(...g)}else T.push(y)}let S=[];for(let y of T)if(a[y]){if(y.startsWith("__PYFSTRING_")?S.push("f_string"):y.startsWith("__PYSTRING_")?S.push("string_literal"):y.startsWith("__PYDECORATOR_")?S.push("decorator"):S.push(y),y.startsWith("__PYSTRING_")||y.startsWith("__PYFSTRING_")){let l=a[y];if(l.startsWith("f")||l.startsWith("r")||l.startsWith("fr")||l.startsWith("rf")||l.startsWith("b")||l.startsWith("rb")||l.startsWith("br")){let w=/^[a-z]+/.exec(l)[0].length;l=l.substring(w)}l=l.replace(/^['"]|['"]$/g,""),l=l.replace(/^'''|'''$/g,""),l=l.replace(/^"""|"""$/g,""),l=l.replace(/{[^{}]*}/g," ");let E=O(l);S.push(...E)}}else if(n[y]){S.push("code_comment");let l=n[y].replace(/^#{1}/,"").replace(/^'''|'''$/g,"").replace(/^"""|"""$/g,"").split(/\s+/).filter(E=>/^[a-z0-9_]{3,}$/i.test(E)).map(E=>E.toLowerCase());S.push(...l)}else S.push(y);return[...new Set(S)]}function un(e){let t=[],n={},r=0,s=e.replace(/\/\*[\s\S]*?\*\//g,g=>{let l=`__JAVA_COMMENT_BLOCK_${r++}__`;return n[l]=g,l}).replace(/\/\/[^\n]*/g,g=>{let l=`__JAVA_COMMENT_LINE_${r++}__`;return n[l]=g,l}),a={},c=0,f=s.replace(/"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'/g,g=>{let l=`__JAVASTRING_${c++}__`;return a[l]=g,l}).replace(/@([a-zA-Z][a-zA-Z0-9_.]*)(?:\s*\((?:[^)(]*|\([^)(]*\))*\))?/g,(g,l)=>{let E=`__ANNOTATION_${c++}__`;a[E]=g,t.push("annotation"),t.push(l.toLowerCase());let w=g.match(/\((.*)\)/);if(w&&w[1]){let C=w[1].split(",");for(let v of C){let R=v.split("=");R.length===2&&t.push(R[0].trim());let A=O(v);t.push(...A)}}return E}).replace(/<([^<>]*(?:<[^<>]*(?:<[^<>]*>)*[^<>]*>)*[^<>]*)>/g,g=>{let l=`__GENERIC_${c++}__`;a[l]=g,t.push("generic_type");let w=g.slice(1,-1).split(/,(?![^<>]*>)/);for(let b of w){let C=O(b.trim());t.push(...C)}return l}).replace(/(?:\(.*?\)|[a-zA-Z_][a-zA-Z0-9_]*)\s*(?:->|=>)\s*(?:{[\s\S]*?}|[^;]*)/g,g=>{let l=`__LAMBDA_${c++}__`;a[l]=g,t.push("lambda_expression");let E=O(g);return t.push(...E),l}),_=["public","private","protected","internal","static","final","abstract","override","virtual","readonly","const","sealed","partial","async","volatile","transient","synchronized","unsafe","extern"],h=f;for(let g of _){let l=new RegExp(`\\b${g}\\b`,"gi");h=h.replace(l,E=>(t.push(E.toLowerCase()),t.push("access_modifier"),E))}if(h=h.replace(/\b(?:package|namespace)\s+([a-zA-Z_][a-zA-Z0-9_.]*)/g,(g,l)=>{t.push("package_declaration");let E=l.split(".");return t.push(l),t.push(...E),g}),h=h.replace(/\b(?:import|using)\s+(?:static\s+)?([a-zA-Z_][a-zA-Z0-9_.]*(?:\.\*)?)/g,(g,l)=>{t.push("import_statement");let E=l.split(".");return t.push(l),E.length>0&&E[E.length-1]==="*"&&(E.pop(),t.push("wildcard_import")),t.push(...E),g}),/\bfrom\b.*\bin\b.*\bselect\b/i.test(h)){t.push("linq_expression");let g=["from","in","select","where","group","by","into","orderby","join","let","on","equals"];for(let l of g)new RegExp(`\\b${l}\\b`,"gi").test(h)&&t.push(`linq_${l}`)}let T=O(h);t.push(...T);let S=[];for(let g of t){if(g.startsWith("__")&&g.endsWith("__")){S.push(g);continue}if(g.includes(".")){let l=g.split(".");S.push(g),S.push(...l);continue}if(S.push(g),/[a-z][A-Z]/.test(g)){let l=g.replace(/([a-z])([A-Z])/g,"$1 $2").toLowerCase().split(" ");l.length>1&&S.push(...l)}}let y=[];for(let g of S)if(a[g]){if(g.startsWith("__JAVASTRING_")?y.push("string_literal"):g.startsWith("__ANNOTATION_")?y.push("annotation"):g.startsWith("__GENERIC_")?y.push("generic"):g.startsWith("__LAMBDA_")?y.push("lambda"):y.push(g),g.startsWith("__JAVASTRING_")){let E=a[g].replace(/^"|"$/g,"").replace(/^'|'$/g,"");if(E.trim().length>0){let w=O(E);y.push(...w)}}}else if(n[g]){y.push("code_comment");let E=n[g].replace(/^\/\*|\*\/$/g,"").replace(/^\/\//g,"").split(/\s+/).filter(w=>/^[a-z0-9_]{3,}$/i.test(w)).map(w=>w.toLowerCase());y.push(...E)}else y.push(g);return[...new Set(y)]}function Ze(e){let t=[],n={},r=0,s=e.replace(/=begin[\s\S]*?=end/g,l=>{let E=`__RUBY_COMMENT_BLOCK_${r++}__`;return n[E]=l,E}).replace(/#[^\n]*/g,l=>{let E=`__RUBY_COMMENT_LINE_${r++}__`;return n[E]=l,E}),a={},c=0,_=s.replace(/"(?:[^"\\]|\\.|#\{[^}]*\})*"/g,l=>{let E=`__RUBY_INTERPOLATED_STRING_${c++}__`;a[E]=l;let w=[],b=l.match(/#\{([^}]*)\}/g);return b&&(b.forEach(C=>{w.push(C.slice(2,-1))}),w.forEach(C=>{let v=Ze(C);t.push(...v)})),E}).replace(/('(?:[^'\\]|\\.)*'|%[qQ]?\{(?:[^\\}]|\\.)*\}|%[qQ]?\((?:[^\\)]|\\.)*\)|%[qQ]?\[(?:[^\\]]|\\.)*\]|%[qQ]?<(?:[^\\>]|\\.)*>|<<-?(['"]?)(\w+)\1[\s\S]*?\2)/g,l=>{let E=`__RUBY_STRING_${c++}__`;return a[E]=l,E}).replace(/\/(?:[^\/\\]|\\.)*\/[iomxneus]*/g,l=>{let E=`__RUBY_REGEXP_${c++}__`;return a[E]=l,t.push("regexp"),E}).replace(/:(?:@?[a-zA-Z_][a-zA-Z0-9_]*(?:[?!]|=(?!=))?|"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'|\S+)/g,l=>{let E=`__RUBY_SYMBOL_${c++}__`;a[E]=l;let w=l.substring(1);return t.push("symbol"),t.push(`symbol_${w}`),(w.endsWith("?")||w.endsWith("!"))&&t.push(`symbol_${w.slice(0,-1)}`),E});_=_.replace(/\bdo\s*(?:\|[^|]*\|)?[\s\S]*?\bend\b/g,l=>{let E=`__RUBY_BLOCK_DO_${c++}__`;a[E]=l,t.push("block_do_end");let w=l.match(/\|\s*([^|]*)\s*\|/);w&&w[1]&&w[1].split(",").forEach(R=>{t.push(R.trim())});let b=l.replace(/\bdo\s*(?:\|[^|]*\|)?/,"").replace(/\bend\b$/,""),C=O(b);return t.push(...C),E}),_=_.replace(/\{(?:\s*\|[^|]*\|\s*)?[^{}]*(?:\{[^{}]*\}[^{}]*)*\}/g,l=>{if(/^\{\s*:/.test(l)||/^\{\s*['"]/.test(l))return l;let E=`__RUBY_BLOCK_BRACE_${c++}__`;a[E]=l,t.push("block_brace");let w=l.match(/\|\s*([^|]*)\s*\|/);w&&w[1]&&w[1].split(",").forEach(R=>{t.push(R.trim())});let b=l.slice(1,-1);w&&(b=b.replace(/\|\s*[^|]*\s*\|/,""));let C=O(b);return t.push(...C),E});let h=_.replace(/\.\.(\.)?/g,l=>(t.push(l===".."?"range_operator_inclusive":"range_operator_exclusive")," "+l+" "));h=h.replace(/\bdef\s+(?:self\.)?([a-zA-Z_][a-zA-Z0-9_]*[?!=]?)/g,(l,E)=>(t.push("method_definition"),t.push(E),(E.endsWith("?")||E.endsWith("!")||E.endsWith("="))&&t.push(E.slice(0,-1)),l)),h=h.replace(/\b(?:class|module)\s+([A-Z][a-zA-Z0-9_]*(?:::[A-Z][a-zA-Z0-9_]*)*)/g,(l,E)=>{if(t.push(l.startsWith("class")?"class_definition":"module_definition"),t.push(E),E.includes("::")){let w=E.split("::");t.push(...w)}return l});let T=O(h),S=["if","unless","else","elsif","end","begin","rescue","ensure","while","until","for","break","next","redo","retry","return","super","self","nil","true","false","and","or","not","yield"];for(let l of S)new RegExp(`\\b${l}\\b`,"g").test(h)&&t.push(l);t.push(...T);let y=[];for(let l of t){if(l.startsWith("__RUBY_")){y.push(l);continue}y.push(l),(l.endsWith("?")||l.endsWith("!"))&&y.push(l.slice(0,-1)),l.endsWith("=")&&!["==","!=",">=","<=","=>"].includes(l)&&y.push(l.slice(0,-1))}let g=[];for(let l of y)if(a[l])if(l.startsWith("__RUBY_STRING_")||l.startsWith("__RUBY_INTERPOLATED_STRING_")){g.push("string_literal");let w=a[l];if(w.startsWith("'")&&w.endsWith("'")||w.startsWith('"')&&w.endsWith('"')?w=w.slice(1,-1):(w.startsWith("%q")||w.startsWith("%Q"))&&(w=w.slice(3,-1)),w=w.replace(/#\{[^}]*\}/g," "),w.trim()){let b=O(w);g.push(...b)}}else l.startsWith("__RUBY_SYMBOL_")?g.push("symbol"):l.startsWith("__RUBY_BLOCK_")?g.push("block"):l.startsWith("__RUBY_REGEXP_")?g.push("regexp"):g.push(l);else if(n[l]){g.push("code_comment");let w=n[l].replace(/^#/,"").replace(/^=begin\s*|\s*=end$/g,"").split(/\s+/).filter(b=>/^[a-z0-9_]{3,}$/i.test(b)).map(b=>b.toLowerCase());g.push(...w)}else g.push(l);return[...new Set(g)]}function pn(e){let t=[],n={},r=0,s=e.replace(/\/\*[\s\S]*?\*\//g,v=>{let R=`__GO_COMMENT_BLOCK_${r++}__`;return n[R]=v,R}).replace(/\/\/[^\n]*/g,v=>{let R=`__GO_COMMENT_LINE_${r++}__`;return n[R]=v,R}),a={},c=0,g=s.replace(/`[^`]*`/g,v=>{let R=`__GO_RAW_STRING_${c++}__`;return a[R]=v,R}).replace(/"(?:[^"\\]|\\.)*"/g,v=>{let R=`__GO_STRING_${c++}__`;return a[R]=v,R}).replace(/'(?:[^'\\]|\\.)*'/g,v=>{let R=`__GO_RUNE_${c++}__`;return a[R]=v,R}).replace(/`(?:[a-zA-Z0-9_]+:"[^"]*")+`/g,v=>{let R=`__GO_STRUCT_TAG_${c++}__`;a[R]=v,t.push("struct_tag");let A=v.slice(1,-1).split(" ");for(let k of A){if(!k.trim())continue;let[D,ie]=k.split(":");if(D&&ie){t.push(`tag_${D}`);let ae=ie.replace(/^"|"$/g,"");if(ae)if(ae.includes(",")){let Yt=ae.split(",");t.push(...Yt)}else t.push(ae)}}return R}).replace(/<-/g,v=>(t.push("channel_operation")," <- ")).replace(/\bgo\s+(?:func\b|[a-zA-Z_][a-zA-Z0-9_]*\s*\()/g,v=>{t.push("goroutine");let R=v.match(/go\s+([a-zA-Z_][a-zA-Z0-9_]*)/);return R&&R[1]&&t.push(R[1]),v}).replace(/\bselect\s*{[\s\S]*?}/g,v=>{t.push("select_statement");let R=v.match(/case\s+[^:]+:/g);if(R)for(let A of R){let k=A.slice(4,-1).trim(),D=O(k);t.push(...D)}return v}).replace(/\bdefer\s+[a-zA-Z_][a-zA-Z0-9_]*\s*\(/g,v=>{t.push("defer");let R=v.match(/defer\s+([a-zA-Z_][a-zA-Z0-9_]*)/);return R&&R[1]&&t.push(R[1]),v}).replace(/\btype\s+([a-zA-Z_][a-zA-Z0-9_]*)\s+(?:struct|interface)\s*{[\s\S]*?}/g,(v,R)=>{if(t.push("type_declaration"),t.push(R),v.includes("struct")){t.push("struct_type");let A=v.match(/([a-zA-Z_][a-zA-Z0-9_]*)\s+([a-zA-Z_][a-zA-Z0-9_.*[\]]*)/g);if(A)for(let k of A){let D=k.trim().split(/\s+/);D.length>=2&&(t.push(D[0]),t.push(D[1]))}}else if(v.includes("interface")){t.push("interface_type");let A=v.match(/([a-zA-Z_][a-zA-Z0-9_]*)\s*\([\s\S]*?\)(?:\s*\([\s\S]*?\))?\s*[,{]/g);if(A)for(let k of A){let D=k.match(/([a-zA-Z_][a-zA-Z0-9_]*)/);D&&D[1]&&t.push(D[1])}}return v}),l=["make","new","len","cap","append","copy","delete","close","complex","real","imag","panic","recover"];for(let v of l){let R=new RegExp(`\\b${v}\\s*\\(`,"g");g=g.replace(R,A=>(t.push(`builtin_${v}`),A))}let E=["package","import","func","return","var","const","type","struct","interface","map","chan","go","select","case","default","defer","if","else","switch","for","range","continue","break","fallthrough","goto","nil","iota","true","false"];for(let v of E)new RegExp(`\\b${v}\\b`,"g").test(g)&&t.push(v);let w=O(g);t.push(...w);let b=[];for(let v of t){if(v.startsWith("__GO_")){b.push(v);continue}if(b.push(v),/[a-z][A-Z]/.test(v)){let R=v.replace(/([a-z])([A-Z])/g,"$1 $2").toLowerCase().split(" ");R.length>1&&b.push(...R)}}let C=[];for(let v of b)if(a[v])if(v.startsWith("__GO_STRING_")){C.push("string_literal");let A=a[v].slice(1,-1);if(A.trim().length>0){let k=O(A);C.push(...k)}}else if(v.startsWith("__GO_RAW_STRING_")){C.push("raw_string_literal");let A=a[v].slice(1,-1);if(A.includes(`
`)){let k=A.split(`
`);for(let D of k)if(D.trim()){let ie=O(D.trim());C.push(...ie)}}else if(A.trim()){let k=O(A);C.push(...k)}}else v.startsWith("__GO_STRUCT_TAG_")?C.push("struct_tag"):v.startsWith("__GO_RUNE_")?C.push("rune_literal"):C.push(v);else if(n[v]){C.push("code_comment");let A=n[v].replace(/^\/\*|\*\/$/g,"").replace(/^\/\//g,"").split(/\s+/).filter(k=>/^[a-z0-9_]{3,}$/i.test(k)).map(k=>k.toLowerCase());C.push(...A)}else C.push(v);return[...new Set(C)]}function Ce(e){if(typeof e!="string")return"";let t=e.toLowerCase();if(t.length<=2)return t;if(t.endsWith("ing")){let n=t.slice(0,-3);return n.length>2?n:t}if(t.endsWith("ed")){let n=t.slice(0,-2);return n.length>2?n:t}return t.endsWith("s")&&!t.endsWith("ss")?t.slice(0,-1):t.endsWith("es")||t.endsWith("ly")||t.endsWith("er")?t.slice(0,-2):t}N();import{v4 as et}from"uuid";import mn from"crypto";import rt from"path";import"acorn";q();N();import*as Ye from"acorn";async function Ae(e,t){if(!e||e.trim()==="")return console.warn("Empty code content provided to buildAST"),null;let n=t.toLowerCase();if(["javascript","typescript","js","ts","jsx","tsx"].includes(n))try{return Ye.parse(e,{ecmaVersion:"latest",sourceType:"module",locations:!0,ranges:!0,allowAwaitOutsideFunction:!0,allowImportExportEverywhere:!0,allowReserved:!0,allowReturnOutsideFunction:!1,allowSuperOutsideMethod:!1})}catch(r){return console.error(`Error parsing ${n} code:`,r.message),{error:!0,message:r.message,location:r.loc,type:"AST_PARSE_ERROR"}}else return console.log(`AST generation is not yet supported for ${n}`),null}function gn(e){return mn.createHash("sha256").update(e).digest("hex")}function fn(e){return rt.basename(e)}function hn(e,t){if(t)return t.toLowerCase();let n=rt.extname(e).toLowerCase();return{".js":"javascript",".jsx":"javascript",".ts":"typescript",".tsx":"typescript",".py":"python",".rb":"ruby",".java":"java",".go":"go",".rs":"rust",".php":"php",".c":"c",".cpp":"cpp",".h":"c",".hpp":"cpp",".cs":"csharp",".swift":"swift",".kt":"kotlin",".html":"html",".css":"css",".scss":"scss",".json":"json",".md":"markdown",".xml":"xml",".yaml":"yaml",".yml":"yaml"}[n]||"unknown"}function tt(e,t){return e.substring(0,t).split(`
`).length}function nt(e,t){let n=[],r={function:{python:/def\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*\([^)]*\)\s*:/g,ruby:/def\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(\([^)]*\))?\s*(do|\n)/g,java:/(public|private|protected|static|\s) +[\w\<\>\[\]]+\s+(\w+) *\([^\)]*\) *(\{?|[^;])/g,go:/func\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*\([^)]*\)\s*(?:\([^)]*\))?\s*\{/g,php:/function\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*\([^)]*\)\s*\{/g,default:/function\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*\([^)]*\)\s*\{/g},class:{python:/class\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(\([^)]*\))?\s*:/g,ruby:/class\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*((<|::)\s*[A-Za-z0-9_:]*)?/g,java:/class\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(extends\s+[A-Za-z0-9_]+)?\s*(implements\s+[A-Za-z0-9_,\s]+)?\s*\{/g,go:/type\s+([a-zA-Z_][a-zA-Z0-9_]*)\s+struct\s*\{/g,php:/class\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(extends\s+[A-Za-z0-9_]+)?\s*(implements\s+[A-Za-z0-9_,\s]+)?\s*\{/g,default:/class\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(extends\s+[A-Za-z0-9_]+)?\s*\{/g},variable:{python:/(^|\s)([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(?!==)/g,ruby:/(^|\s)([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(?!=)/g,java:/(private|protected|public|static|\s) +[\w\<\>\[\]]+\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*[^;]+;/g,go:/var\s+([a-zA-Z_][a-zA-Z0-9_]*)\s+[\w\[\]]+(\s*=\s*[^;]+)?/g,php:/(\$[a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(?!=)/g,default:/(const|let|var)\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*[^;]+;/g}},o=r.function[t]||r.function.default,s;for(;(s=o.exec(e))!==null;){let c=s[1]||s[2],i=s.index,u=tt(e,i),m=u+10;n.push({type:"function",name:c,start_position:i,start_line:u,end_line:m,raw_content:e.substring(i,i+s[0].length+100)})}let a=r.class[t]||r.class.default;for(;(s=a.exec(e))!==null;){let c=s[1],i=s.index,u=tt(e,i),m=u+20;n.push({type:"class",name:c,start_position:i,start_line:u,end_line:m,raw_content:e.substring(i,i+s[0].length+500)})}return n}function yn(e,t){let n=[],r=[],o=new Map,s=new WeakSet;function a(i,u,m,f,_,h,T,S=null,y={}){let g={type:i,name:u,start_position:m,end_position:f,start_line:_,end_line:h,raw_content:T,custom_metadata:y};return n.push(g),S&&r.push({source:S,target:g,type:"contains"}),g}function c(i,u=null,m=null,f=null){if(!i||typeof i!="object"||s.has(i)||(s.add(i),!i.loc))return;let _=i.loc?.start?.line,h=i.loc?.end?.line,T=i.start,S=i.end,y=t.substring(T,S),g=null;switch(i.type){case"FunctionDeclaration":{let l=i.id?.name||"anonymous",E=i.params?.map(w=>w.type==="Identifier"?w.name:"param");g=a("function",l,T,S,_,h,y,m,{ast_node_type:i.type,params:E||[],is_async:i.async||!1,is_generator:i.generator||!1}),o.set(i,g),i.body&&c(i.body,i,g,l);break}case"FunctionExpression":case"ArrowFunctionExpression":{let l="anonymous",E="function_expression";u&&u.type==="VariableDeclarator"&&u.id?(l=u.id.name,E="function"):u&&u.type==="AssignmentExpression"&&u.left?u.left.type==="Identifier"?(l=u.left.name,E="function"):u.left.type==="MemberExpression"&&u.left.property&&(l=u.left.property.name,E="method"):u&&u.type==="Property"&&u.key?(l=u.key.name||u.key.value||"anonymous",E="method"):u&&u.type==="MethodDefinition"&&u.key&&(l=u.key.name||"anonymous",E="method");let w=i.params?.map(b=>b.type==="Identifier"?b.name:"param");g=a(E,l,T,S,_,h,y,m,{ast_node_type:i.type,params:w||[],is_async:i.async||!1,is_generator:i.generator||!1,is_arrow:i.type==="ArrowFunctionExpression"}),o.set(i,g),i.body&&c(i.body,i,g,l);break}case"ClassDeclaration":{let l=i.id?.name||"anonymous";g=a("class",l,T,S,_,h,y,m,{ast_node_type:i.type}),o.set(i,g),i.superClass&&i.superClass.type==="Identifier"&&r.push({source:g,target:{name:i.superClass.name,type:"class"},type:"extends"}),i.body&&c(i.body,i,g,l);break}case"ClassExpression":{let l=i.id?.name||"anonymous";u&&u.type==="VariableDeclarator"&&u.id&&(l=u.id.name),g=a("class",l,T,S,_,h,y,m,{ast_node_type:i.type}),o.set(i,g),i.superClass&&i.superClass.type==="Identifier"&&r.push({source:g,target:{name:i.superClass.name,type:"class"},type:"extends"}),i.body&&c(i.body,i,g,l);break}case"MethodDefinition":{let l=i.key?.name||i.key?.value||"anonymous",E=i.kind||"method";g=a(E==="constructor"?"constructor":"method",l,T,S,_,h,y,m,{ast_node_type:i.type,kind:E,is_static:!!i.static,is_async:i.value?.async||!1,is_generator:i.value?.generator||!1}),o.set(i,g),i.value&&c(i.value,i,g,l);break}case"VariableDeclaration":{i.declarations.forEach(l=>{c(l,i,m,f)});break}case"VariableDeclarator":{if(i.id&&i.id.type==="Identifier"){let l=i.id.name,E=!1,w="variable";i.init?["FunctionExpression","ArrowFunctionExpression","ClassExpression","ObjectExpression","NewExpression"].includes(i.init.type)?(E=!0,i.init.type==="ObjectExpression"&&(w="object")):i.init.type==="Literal"&&typeof i.init.value=="object"?(E=!0,w="object"):m&&m.type!=="variable"&&(E=!0):E=!0,E&&(g=a(w,l,T,S,_,h,y,m,{ast_node_type:i.type,variable_kind:u?.kind||"var"}),o.set(i,g))}i.init&&c(i.init,i,m||g,f);break}case"ImportDeclaration":{let l=i.source.value,E=i.specifiers.map(w=>w.type==="ImportDefaultSpecifier"?{type:"default",name:w.local.name}:w.type==="ImportNamespaceSpecifier"?{type:"namespace",name:w.local.name}:{type:"named",name:w.local.name,imported:w.imported?.name||w.local.name});g=a("import",l,T,S,_,h,y,m,{ast_node_type:i.type,specifiers:E}),o.set(i,g),E.forEach(w=>{r.push({source:g,target:{name:w.name,type:"imported"},type:"imports",metadata:{source_module:l,import_type:w.type,original_name:w.imported}})});break}case"ExportNamedDeclaration":{let l="named_export";i.declaration?i.declaration.type==="FunctionDeclaration"||i.declaration.type==="ClassDeclaration"?l=i.declaration.id?.name||"anonymous":i.declaration.type==="VariableDeclaration"&&i.declaration.declarations.length>0&&(l=i.declaration.declarations[0].id?.name||"anonymous"):i.specifiers&&i.specifiers.length>0&&(l=i.specifiers.map(E=>E.exported?.name||E.local?.name||"anonymous").join(",")),g=a("export",l,T,S,_,h,y,m,{ast_node_type:i.type,source:i.source?.value}),o.set(i,g),i.declaration&&c(i.declaration,i,m,f),i.specifiers&&i.specifiers.forEach(E=>{E.local&&E.exported&&r.push({source:g,target:{name:E.local.name,type:"exported"},type:"exports",metadata:{exported_as:E.exported.name,source_module:i.source?.value}})});break}case"ExportDefaultDeclaration":{let l="default";i.declaration&&(i.declaration.type==="FunctionDeclaration"||i.declaration.type==="ClassDeclaration"?l=i.declaration.id?.name||"default":i.declaration.type==="Identifier"&&(l=i.declaration.name)),g=a("export",l,T,S,_,h,y,m,{ast_node_type:i.type,is_default:!0}),o.set(i,g),i.declaration&&c(i.declaration,i,m,f),r.push({source:g,target:{name:l,type:"exported"},type:"exports",metadata:{is_default:!0}});break}case"InterfaceDeclaration":{let l=i.id?.name||"anonymous";g=a("interface",l,T,S,_,h,y,m,{ast_node_type:i.type}),o.set(i,g),i.extends&&i.extends.forEach(E=>{E.expression&&E.expression.type==="Identifier"&&r.push({source:g,target:{name:E.expression.name,type:"interface"},type:"extends"})}),i.body&&c(i.body,i,g,l);break}case"TypeAliasDeclaration":{let l=i.id?.name||"anonymous";g=a("type_alias",l,T,S,_,h,y,m,{ast_node_type:i.type}),o.set(i,g),i.typeAnnotation&&c(i.typeAnnotation,i,g,l);break}case"EnumDeclaration":{let l=i.id?.name||"anonymous";g=a("enum",l,T,S,_,h,y,m,{ast_node_type:i.type}),o.set(i,g),i.members&&i.members.forEach(E=>{c(E,i,g,l)});break}case"CallExpression":{m&&(i.callee.type==="Identifier"?r.push({source:m,target:{name:i.callee.name,type:"function"},type:"calls"}):i.callee.type==="MemberExpression"&&i.callee.property&&i.callee.property.type==="Identifier"&&r.push({source:m,target:{name:i.callee.property.name,type:"method"},type:"calls",metadata:{object:i.callee.object.type==="Identifier"?i.callee.object.name:null}})),i.callee&&c(i.callee,i,m,f),i.arguments&&i.arguments.forEach(l=>{c(l,i,m,f)});break}default:for(let l in i){let E=i[l];if(!(l==="type"||l==="loc"||l==="range"||l==="parent"))if(Array.isArray(E))for(let w of E)c(w,i,m||g,f);else E&&typeof E=="object"&&c(E,i,m||g,f)}}}return c(e),{entities:n,relationships:r}}async function ot(e,t,n){try{let r=gn(t),o=fn(e),s=hn(e,n),c=await x(`
      SELECT entity_id, content_hash 
      FROM code_entities 
      WHERE file_path = ? AND entity_type = 'file'
    `,[e]),i;if(c&&c.length>0){if(i=c[0].entity_id,c[0].content_hash===r){console.log(`File ${e} is unchanged, skipping indexing`);return}await x(`
        UPDATE code_entities
        SET raw_content = ?, content_hash = ?, language = ?, last_modified_at = CURRENT_TIMESTAMP
        WHERE entity_id = ?
      `,[t,r,s,i]),await x(`
        DELETE FROM code_entities
        WHERE parent_entity_id = ?
      `,[i]),await x(`
        DELETE FROM entity_keywords
        WHERE entity_id = ?
      `,[i])}else i=et(),await x(`
        INSERT INTO code_entities (
          entity_id, file_path, entity_type, name, content_hash, raw_content, language
        ) VALUES (?, ?, ?, ?, ?, ?, ?)
      `,[i,e,"file",o,r,t,s]);let u=[],m=[];if(s==="javascript"||s==="typescript"){let f=await Ae(t,s);if(f&&!f.error){let _=yn(f,t);u=_.entities,m=_.relationships}else console.error(`Error building AST for ${e}:`,f?.error||"Unknown error"),u=nt(t,s)}else u=nt(t,s);for(let f of u){let _=et(),h=f.custom_metadata?JSON.stringify(f.custom_metadata):null;await x(`
        INSERT INTO code_entities (
          entity_id, parent_entity_id, file_path, entity_type, name, 
          start_line, end_line, raw_content, language, custom_metadata
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
      `,[_,i,e,f.type,f.name,f.start_line,f.end_line,f.raw_content,s,h]);let T=I(f.raw_content),S=L(T,20,s);for(let y of S)await x(`
          INSERT INTO entity_keywords (
            entity_id, keyword, term_frequency, weight, keyword_type
          ) VALUES (?, ?, ?, ?, ?)
        `,[_,y.keyword,y.score||1,y.score||1,"term"]);f.db_entity_id=_}for(let f of m){if(!f.source||!f.target)continue;let _=f.source.db_entity_id,h=f.target.db_entity_id;if(f.type==="contains"&&_&&h)await x(`
          UPDATE code_entities
          SET parent_entity_id = ?
          WHERE entity_id = ?
          `,[_,h]);else if(_&&h)await be(_,h,f.type,1,f.metadata||{});else if(_&&!h&&f.target.name){let S=await x(`
          SELECT entity_id 
          FROM code_entities 
          WHERE name = ? AND entity_type = ?
        `,[f.target.name,f.target.type]);S&&S.length>0&&await be(_,S[0].entity_id,f.type,1,f.metadata||{})}}console.log(`Successfully indexed file ${e}`)}catch(r){throw console.error(`Error indexing file ${e}:`,r),r}}async function st(e){try{if(!e.message_id||!e.conversation_id||!e.role||!e.content)throw new Error("Message object missing required properties");console.log("===== INDEX MESSAGE - START ====="),console.log("Input parameters:"),console.log("- message_id:",e.message_id),console.log("- conversation_id:",e.conversation_id),console.log("- role:",e.role),console.log("- content:",e.content&&e.content.substring(0,50)+(e.content.length>50?"...":"")),console.log("- timestamp:",e.timestamp);let t=e.relatedContextEntityIds?e.relatedContextEntityIds:null,n=e.semantic_markers?e.semantic_markers:null,r=e.sentiment_indicators?e.sentiment_indicators:null,o=e.timestamp instanceof Date?e.timestamp.toISOString():e.timestamp||new Date().toISOString(),s=`
      SELECT message_id FROM conversation_history 
      WHERE message_id = ?
    `;console.log("Checking if message exists:",e.message_id);let a=await x(s,[e.message_id]);if(console.log("Existing message check result:",JSON.stringify(a)),a&&a.rows&&a.rows.length>0){console.log("Updating existing message:",e.message_id);try{let u=`UPDATE conversation_history 
         SET content = ?, 
             summary = ?, 
             user_intent = ?, 
             topic_segment_id = ?, 
             related_context_entity_ids = ?, 
             semantic_markers = ?, 
             sentiment_indicators = ?
         WHERE message_id = ?`,m=[e.content,e.summary||null,e.userIntent||null,e.topicSegmentId||null,t,n,r,e.message_id];console.log("Update query parameters:",{message_id:e.message_id,content_length:e.content?e.content.length:0});let f=await x(u,m);console.log("Message update result:",JSON.stringify(f))}catch(u){throw console.error("Update error:",u),u}}else{console.log("Inserting new message:",e.message_id);try{let u=`INSERT INTO conversation_history (
          message_id, 
          conversation_id, 
          role, 
          content, 
          timestamp, 
          summary, 
          user_intent, 
          topic_segment_id, 
          related_context_entity_ids, 
          semantic_markers, 
          sentiment_indicators
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,m=[e.message_id,e.conversation_id,e.role,e.content,o,e.summary||null,e.userIntent||null,e.topicSegmentId||null,t,n,r];console.log("Insert query parameters:",{message_id:e.message_id,conversation_id:e.conversation_id,role:e.role,timestamp:o});let f=await x(u,m);console.log("Message insert result:",JSON.stringify(f))}catch(u){throw console.error("Insert error:",u),console.error("Error stack:",u.stack),u}}let c=I(e.content),i=L(c);return console.log("===== INDEX MESSAGE - COMPLETE ====="),console.log("Successfully indexed message:",e.message_id),{messageId:e.message_id,keywords:i}}catch(t){throw console.error("===== INDEX MESSAGE - ERROR ====="),console.error(`Error indexing message ${e?.message_id}:`,t),console.error("Error stack:",t.stack),t}}N();import{v4 as In}from"uuid";function at(e,t,n=[]){if(!e||e.length===0)return[];let r=[],o=t,s=e.reduce((c,i)=>c+i.score,0),a=e.map(c=>Math.max(100,Math.floor(c.score/s*t)));for(let c=0;c<e.length;c++){let i=e[c],u=i.content||i.entity.raw_content||"";if(!u)continue;let m=Math.min(a[c],o);if(!(m<50)){if(u.length<=m)r.push({entity_id:i.entity.entity_id,summarizedContent:u,originalScore:i.score}),o-=u.length;else{let f;i.entity.entity_type?f=ct(i.entity,m,n):f=F(u,m),f&&(r.push({entity_id:i.entity.entity_id,summarizedContent:f,originalScore:i.score}),o-=f.length)}if(o<=50)break;if(c<e.length-1){let f=e.length-c-1,_=e.slice(c+1).reduce((h,T)=>h+T.score,0);for(let h=c+1;h<e.length;h++)a[h]=Math.max(100,Math.floor(e[h].score/_*o))}}}return o>200&&r.length>0&&_n(r,e,o,n),r}function _n(e,t,n,r){let o=new Map;e.forEach(c=>{o.set(c.entity_id,c)});let s=t.filter(c=>o.has(c.entity.entity_id)).sort((c,i)=>i.score-c.score),a=Math.floor(n/s.length);for(let c of s){let i=o.get(c.entity.entity_id),u=i.summarizedContent.length,m=u+a,f=c.content||c.entity.raw_content||"";if(f.length<=m)i.summarizedContent=f,n-=f.length-u;else{let _;c.entity.entity_type?_=ct(c.entity,m,r):_=F(f,m),_&&_.length>u&&(n-=_.length-u,i.summarizedContent=_)}if(n<100)break}}function F(e,t,n="rule-based"){return e?e.length<=t?e:(n==="ml-light"&&(console.log("ML-light summarization not fully implemented, falling back to rule-based method"),n="rule-based"),bn(e,t)):""}function ct(e,t,n=[]){if(!e)return"";if(e.summary&&e.summary.length<=t)return e.summary;if(!e.raw_content)return`${e.name} (${e.entity_type})`;if(e.raw_content.length<=t)return e.raw_content;switch((e.entity_type||"").toLowerCase()){case"function":case"method":return En(e,t,n);case"class":return wn(e,t,n);case"file":return Sn(e,t,n);default:return F(e.raw_content,t)}}function En(e,t,n){let o=e.raw_content.split(`
`),s=Tn(o);if(s.length>=t-10)return G(s,t);let a=Ie(o,n,"function"),c=s,i=t-s.length,u=Cn(o);return u&&u.length<i*.4&&(c+=`
`+u,i-=u.length),c+=`
`+Ne(a,i),G(c,t)}function wn(e,t,n){let o=e.raw_content.split(`
`),s=vn(o),a=xn(o),c=s,i=t-s.length;if(a&&a.length<i&&(c+=`
`+a,i-=a.length),i>50){let u=Ie(o,n,"class");c+=`
`+Ne(u,i)}return G(c,t)}function Sn(e,t,n){let r=e.raw_content,o=r.split(`
`);if((e.name||"").toLowerCase().includes("readme")||(e.name||"").toLowerCase().includes("doc"))return F(r,t);let a=o.filter(f=>f.trim().startsWith("import ")||f.trim().startsWith("require(")||f.trim().startsWith("from ")||f.trim().includes(" from ")).join(`
`),c=o.filter(f=>f.trim().startsWith("export ")||f.trim().startsWith("module.exports")).join(`
`),i=`// File: ${e.name||"Unnamed"}
`;a&&a.length<t*.3&&(i+=`// Imports:
${a}
`);let u=t-i.length;c&&c.length<u*.3&&(i+=`// Exports:
${c}
`);let m=t-i.length;if(m>100){let f=Ie(o,n,"file");i+=`// Key sections:
${Ne(f,m)}`}return G(i,t)}function Tn(e){for(let t=0;t<e.length;t++){let n=e[t].trim();if(n.match(/^(async\s+)?(function\s+\w+|\w+\s*=\s*(async\s+)?function|\w+\s*:\s*(async\s+)?function|const\s+\w+\s*=\s*(async\s+)?(\([^)]*\)|[^=]*)\s*=>)/)){let r=n;if(!n.includes("{")&&!n.includes("=>")){let o=t+1;for(;o<e.length&&!e[o].includes("{");)r+=" "+e[o].trim(),o++;o<e.length&&(r+=" "+e[o].trim().split("{")[0]+"{ ... }")}else n.includes("{")?r=r.split("{")[0]+"{ ... }":n.includes("=>")&&(r=r.split("=>")[0]+"=> { ... }");return r}}return"function() { ... }"}function vn(e){for(let t=0;t<e.length;t++){let n=e[t].trim();if(n.startsWith("class ")){let r=n;if(n.includes("{"))r=r.split("{")[0]+"{ ... }";else{let o=t+1;for(;o<e.length&&!e[o].includes("{");)r+=" "+e[o].trim(),o++;o<e.length&&(r+=" "+e[o].trim().split("{")[0]+"{ ... }")}return r}}return"class { ... }"}function xn(e){let t=[],n=/^\s*(async\s+)?(\w+)\s*\([^)]*\)/,r=Math.min(5,e.length);for(let o=r;o<e.length;o++){let s=e[o].match(n);s&&!e[o].trim().startsWith("//")&&t.push(s[2])}return t.length===0?"":`// Methods: ${t.join(", ")}`}function Cn(e){let t=!1,n=[];for(let r=0;r<Math.min(20,e.length);r++){let o=e[r].trim();if(o.startsWith("/**")){t=!0,n.push(o);continue}if(t&&(n.push(o),o.endsWith("*/")))break;if(!t&&n.length===0&&o.startsWith("//"))n.push(o);else if(!t&&n.length>0&&o.startsWith("//"))n.push(o);else if(!t&&n.length>0)break}return n.join(`
`)}function Ie(e,t,n){let r=[],o={function:[/\breturn\s+/,/\bthrow\s+/,/\bif\s*\(/,/\bfor\s*\(/,/\bcatch\s*\(/,/\bswitch\s*\(/,/\bconst\s+\w+\s*=/,/\blet\s+\w+\s*=/,/\/\/ [A-Z]/],class:[/\bconstructor\s*\(/,/\bstatic\s+/,/\bget\s+\w+\s*\(/,/\bset\s+\w+\s*\(/,/\bextends\s+/,/\bimplements\s+/,/\breturn\s+/],file:[/\bexport\s+(default\s+)?function\s+/,/\bexport\s+(default\s+)?class\s+/,/\bexport\s+(default\s+)?const\s+/,/\bmodule\.exports\s*=/,/\bimport\s+/,/\brequire\s*\(/]},s=[/\/\/ TODO:/,/\/\/ FIXME:/,/\/\/ NOTE:/,/\/\*\*/],a=[...o[n]||[],...s];for(let c=0;c<e.length;c++){let i=e[c].trim();if(!i)continue;let u=0;if(t.length>0){let m=I(i,{includeIdentifiers:!0}),f=t.filter(_=>m.includes(_.toLowerCase())||i.toLowerCase().includes(_.toLowerCase()));u+=f.length*3}for(let m of a)if(m.test(i)){u+=2;break}c<5&&(u+=1),(i.includes("{")||i.includes("}"))&&(u+=.5),r.push({line:i,score:u,index:c})}return r.sort((c,i)=>i.score-c.score)}function Ne(e,t){let n=[],r=0,o=e.filter(s=>s.score>=3);for(let s of o)r+s.line.length+1<=t&&(n.push(s),r+=s.line.length+1);if(r<t){let s=e.filter(a=>a.score<3).sort((a,c)=>c.score-a.score);for(let a of s)r+a.line.length+1<=t&&(n.push(a),r+=a.line.length+1)}return n.sort((s,a)=>s.index-a.index),n.map(s=>s.line).join(`
`)}function bn(e,t){let n=Rn(e);if(n.length<=3)return G(e,t);let r=n.map((c,i)=>({text:c,score:An(c,i,n.length),index:i}));r.sort((c,i)=>i.score-c.score);let o=[],s=0;for(let c of r)if(s+c.text.length+1<=t)o.push(c),s+=c.text.length+1;else{if(o.length===0)return G(c.text,t);break}o.sort((c,i)=>c.index-i.index);let a=o.map(c=>c.text).join(" ");return G(a,t)}function Rn(e){let t=/[^.!?]*[.!?](?:\s|$)/g,n=e.match(t);return n?n.map(r=>r.trim()).filter(r=>r.length>0):[e]}function An(e,t,n){let r=0;t===0?r+=3:t===n-1?r+=2:(t===1||t===n-2)&&(r+=1);let o=e.split(/\s+/).length;o>=5&&o<=20?r+=1:(o<3||o>30)&&(r-=1);let s=["key","important","significant","critical","essential","main","primary","crucial","fundamental","vital","result","conclude","summary","therefore","thus","implement","function","method","class","object","return","export","import","require","define"],a=e.toLowerCase();for(let c of s)if(a.includes(c)){r+=1;break}return(a.includes("function")||a.includes("class")||a.includes("=")||a.includes("return")||e.includes("()")||e.includes("{}")||e.includes("[]"))&&(r+=2),r}function G(e,t){if(e.length<=t)return e;for(let n=t-1;n>=0;n--)if(e[n]==="."||e[n]==="!"||e[n]==="?")return e.substring(0,n+1);for(let n=t-1;n>=0;n--)if(e[n]===" ")return e.substring(0,n)+"...";return e.substring(0,t-3)+"..."}async function lt(e,t={}){if(!e||e.length===0)return[];let n=t.detailLevel||"medium",r=t.targetTokens||2e3,o=t.queryKeywords||[],s=1/6,a=Math.floor(r/s),c=e.map(m=>({entity:{entity_id:m.entity_id,entity_type:m.type,raw_content:m.content,name:m.name,file_path:m.path},score:m.relevanceScore||.5,content:m.content})),i=a;switch(n){case"high":i=Math.floor(a*1.3);break;case"low":i=Math.floor(a*.7);break;default:break}return at(c,i,o).map(m=>{let f=e.find(_=>_.entity_id===m.entity_id);return f?{...f,content:m.summarizedContent,compression:{originalLength:f.content.length,compressedLength:m.summarizedContent.length,compressionRatio:m.summarizedContent.length/f.content.length,detailLevel:n}}:null}).filter(Boolean)}var Nn=["anyway","moving on","changing subject","regarding","switching to","on another note","back to","speaking of","about","let's talk about","with respect to","turning to","shifting to","let's discuss","instead"],On=["what","how","why","can","could","would","should","is","are","do","does","did","have","has","will"];async function ut(e,t){try{if(!e?.content||!t||t.length===0)return!1;let n=t.slice(-5),r=kn(e,n),o=Ln(e,n),s=Dn(e.content),a=$n(e,n);return r*.4+o*.3+(s?.8:0)*.2+a*.1>.45}catch(n){return console.error("Error detecting topic shift:",n),!1}}function kn(e,t){let n=I(e.content),r=L(n,10),o=new Set(r);if(o.size===0)return 0;let s=new Set;for(let c of t){let i=I(c.content);L(i,10).forEach(m=>s.add(m))}let a=0;for(let c of o)s.has(c)||a++;return a/o.size}function Ln(e,t){if(!e.entity_ids||!Array.isArray(e.entity_ids)||e.entity_ids.length===0)return 0;let n=new Set;for(let o of t)o.entity_ids&&Array.isArray(o.entity_ids)&&o.entity_ids.forEach(s=>n.add(s));if(n.size===0)return e.entity_ids.length>0?1:0;let r=0;for(let o of e.entity_ids)n.has(o)||r++;return r/e.entity_ids.length}function Dn(e){if(!e)return!1;let t=e.toLowerCase();for(let n of Nn)if(new RegExp(`\\b${n}\\b`,"i").test(t))return!0;return!1}function $n(e,t){if(!Oe(e.content))return 0;let r=0,o=0;for(let s=0;s<t.length-1;s++)t[s].role==="user"&&Oe(t[s].content)&&(r++,s+1<t.length&&t[s+1].role==="assistant"&&o++);if(r>0&&o>0){let s=Mn(t,a=>a.role==="user"&&Oe(a.content));if(s>=0){let a=t[s].content;return Fn(e.content,a)}}return .2}function Oe(e){if(!e)return!1;if(e.includes("?"))return!0;let t=e.toLowerCase().trim();for(let n of On)if(t.startsWith(n+" "))return!0;return!1}function Fn(e,t){let n=I(e),r=I(t),o=new Set(n),s=new Set(r),a=0;for(let u of o)s.has(u)&&a++;let c=o.size+s.size-a;return 1-(c>0?a/c:0)}function Mn(e,t){for(let n=e.length-1;n>=0;n--)if(t(e[n]))return n;return-1}async function pe(e,t,n={}){try{let r=In(),o=n.name;if(!o){o=`New Topic ${new Date().toISOString()}`;try{let f=await x("SELECT content FROM conversation_history WHERE message_id = ?",[t]);if(f&&f.length>0){let _=f[0].content,h=_.split(/\s+/).slice(0,5).join(" ");h.length>3&&(o=`Topic: ${h}${h.length<_.length?"...":""}`)}}catch(m){console.warn("Could not fetch message content for topic naming:",m)}}let s=n.primaryEntities?JSON.stringify(n.primaryEntities):"[]",a=n.keywords?JSON.stringify(n.keywords):"[]",c=new Date().toISOString();await x("PRAGMA foreign_keys = OFF;");let i=`
      INSERT INTO conversation_topics (
        topic_id,
        conversation_id,
        topic_name,
        description,
        start_message_id,
        start_timestamp,
        primary_entities,
        keywords
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `,u=[r,e,o,n.description||"",t,c,s,a];return await x(i,u),await x("PRAGMA foreign_keys = ON;"),console.log(`Created new topic segment: ${o} (${r})`),r}catch(r){throw console.error("Error creating new topic segment:",r),new Error(`Failed to create new topic segment: ${r.message}`)}}async function pt(e,t){try{let r=new Date().toISOString();try{let c=await x("SELECT timestamp FROM conversation_history WHERE message_id = ?",[t]);c&&c.length>0&&c[0].timestamp&&(r=c[0].timestamp)}catch(a){console.warn("Could not fetch message timestamp, using current timestamp:",a)}await x(`
      UPDATE conversation_topics
      SET end_message_id = ?,
          end_timestamp = ?
      WHERE topic_id = ?
    `,[t,r,e]),console.log(`Closed topic segment: ${e} with end message: ${t}`)}catch(n){throw console.error(`Error closing topic segment ${e}:`,n),new Error(`Failed to close topic segment: ${n.message}`)}}async function de(e){try{let n=await x(`
      SELECT * FROM conversation_topics
      WHERE conversation_id = ?
        AND end_message_id IS NULL
      ORDER BY start_timestamp DESC
      LIMIT 1
    `,[e]);if(!n.rows||n.rows.length===0)return null;let r=n.rows[0];try{let o={...r};return r.keywords&&typeof r.keywords=="string"&&(o.keywords=JSON.parse(r.keywords)),r.related_entities&&typeof r.related_entities=="string"&&(o.related_entities=JSON.parse(r.related_entities)),r.primary_entities&&typeof r.primary_entities=="string"&&(o.primary_entities=JSON.parse(r.primary_entities)),o}catch(o){return console.error(`Error parsing JSON fields for topic ${r.topic_id}:`,o),r}}catch(t){throw console.error(`Error getting active topic for conversation ${e}:`,t),t}}async function dt(e){try{if(!e||e.length===0)return"Untitled Topic";let n=`
      SELECT content, related_context_entity_ids
      FROM conversation_history 
      WHERE message_id IN (${e.map(()=>"?").join(",")})
      ORDER BY timestamp ASC
    `,r=await x(n,e);if(!r||r.length===0)return"Untitled Topic";let o=r.map(u=>u.content).join(" "),s=I(o),a=L(s,3),c=new Set;for(let u of r)if(u.related_context_entity_ids){let m;try{if(m=typeof u.related_context_entity_ids=="string"?JSON.parse(u.related_context_entity_ids):u.related_context_entity_ids,Array.isArray(m)&&m.length>0){let f=f.slice(0,2),_=`
              SELECT name FROM code_entities WHERE id IN (${f.map(()=>"?").join(",")})
            `,h=await x(_,f);h&&h.length>0&&h.forEach(T=>c.add(T.name))}}catch(f){console.warn("Error parsing entity IDs",f)}}let i;if(c.size>0)i=`Discussion about ${Array.from(c).slice(0,2).join(" and ")}`;else if(a.length>0)i=`Topic: ${a.join(", ")}`;else{let u=r[0].content,m=u.split(/\s+/).slice(0,5).join(" ");i=`Topic: ${m}${u.length>m.length?"...":""}`}return i.length>50&&(i=i.substring(0,47)+"..."),i}catch(t){return console.error("Error generating topic name:",t),"Untitled Topic"}}async function mt(e){try{let n=await x(`
      SELECT * FROM conversation_topics
      WHERE conversation_id = ?
      ORDER BY start_timestamp ASC
    `,[e]);if(!n||n.length===0)return{rootTopics:[],topicMap:{}};let r={};for(let s of n)try{s.primary_entities=s.primary_entities?JSON.parse(s.primary_entities):[],s.keywords=s.keywords?JSON.parse(s.keywords):[],s.children=[],r[s.topic_id]=s}catch(a){console.warn(`Error parsing JSON fields for topic ${s.topic_id}:`,a),s.primary_entities=[],s.keywords=[],s.children=[],r[s.topic_id]=s}let o=[];for(let s of n)s.parent_topic_id&&r[s.parent_topic_id]?r[s.parent_topic_id].children.push(s):o.push(s);return{rootTopics:o,topicMap:r}}catch(t){throw console.error(`Error building topic hierarchy for conversation ${e}:`,t),new Error(`Failed to build topic hierarchy: ${t.message}`)}}N();import{v4 as Pn}from"uuid";var me={debugging:{keywords:["error","stacktrace","bug","fix","not working","exception","issue","failed","failing","crash","debug","broken","incorrect","problem","trouble","unexpected","diagnose","investigate"],patterns:[/TypeError:/i,/Error:/i,/Exception:/i,/failed with/i,/doesn't work/i,/not working/i,/unexpected behavior/i],weight:1},feature_planning:{keywords:["requirement","design","new feature","implement","proposal","roadmap","spec","specification","plan","architecture","blueprint","feature","enhancement","improvement","add","create","develop","extend"],patterns:[/could we add/i,/we need to implement/i,/design for/i,/planning to/i,/we should build/i,/requirement is to/i],weight:.9},code_review:{keywords:["PR","pull request","LGTM","suggestion","change request","review","approve","feedback","comment","revision","looks good","merge","style","convention","readability","clarity"],patterns:[/pull request #\d+/i,/PR #\d+/i,/please review/i,/looks good to me/i,/suggested changes/i,/can you review/i],weight:.85},learning:{keywords:["learn","understand","explanation","tutorial","example","how does","what is","meaning","concept","definition","help me understand","documentation","guide","explain","clarify","teach"],patterns:[/how does (it|this) work/i,/what (is|does|are)/i,/could you explain/i,/I'm trying to understand/i,/explain how/i],weight:.8},code_generation:{keywords:["generate","create","build","write","implement","code for","function","class","method","module","script","algorithm","solution"],patterns:[/can you (write|create|generate)/i,/implement a/i,/create a function/i,/generate code for/i,/need code to/i],weight:.9},optimization:{keywords:["optimize","performance","efficiency","slow","faster","speed up","reduce","improve","bottleneck","memory","CPU","utilization","profiling","benchmark"],patterns:[/too slow/i,/needs to be faster/i,/performance issue/i,/optimize for/i,/reduce (memory|time|usage)/i],weight:.85},refactoring:{keywords:["refactor","restructure","rewrite","reorganize","clean up","improve","modernize","update","simplify","decouple","modularity","readability"],patterns:[/need to refactor/i,/code smells/i,/technical debt/i,/simplify the code/i,/make it more maintainable/i],weight:.8},general_query:{keywords:["question","ask","wondering","curious","thoughts","opinion","advice","suggestion","recommend","help","guidance"],patterns:[/I have a question/i,/can you help/i,/what do you think/i,/do you have any advice/i],weight:.7}};async function ke(e){try{if(!e)return{purposeType:"general_query",confidence:.5};let t=Array.isArray(e)?e:[e];if(t.length===0)return{purposeType:"general_query",confidence:.5};let n="",r=t.map(_=>({role:_.role||(_.messageId,"user"),content:_.content||""})),o=r.filter(_=>_.role==="user");o.length>0?n=o.map(_=>_.content).join(" "):n=r.map(_=>_.content).join(" ");let s=I(n),a=L(s,20),c={};for(let[_,h]of Object.entries(me)){let T=0;for(let S of h.keywords)n.toLowerCase().includes(S.toLowerCase())&&(T+=1),a.some(y=>typeof y=="string"&&y.toLowerCase()===S.toLowerCase())&&(T+=2);for(let S of h.patterns)S.test(n)&&(T+=3);T*=h.weight,c[_]=T}let i=0,u="general_query";for(let[_,h]of Object.entries(c))h>i&&(i=h,u=_);let m=me[u].keywords.length*3+me[u].patterns.length*3,f=.3+.7*(i/(m*me[u].weight));return f=Math.min(f,1),i<3&&u!=="general_query"?{purposeType:"general_query",confidence:.6}:{purposeType:u,confidence:f}}catch(t){return console.error("Error detecting conversation purpose:",t),{purposeType:"general_query",confidence:.5}}}async function J(e){try{let n=await x(`
      SELECT * FROM conversation_purposes
      WHERE conversation_id = ?
        AND end_timestamp IS NULL
      ORDER BY start_timestamp DESC
      LIMIT 1
    `,[e]),r=n&&n.rows&&Array.isArray(n.rows)?n.rows:Array.isArray(n)?n:[];return r.length===0?null:r[0]}catch(t){throw console.error(`Error getting active purpose for conversation ${e}:`,t),new Error(`Failed to get active purpose: ${t.message}`)}}async function Le(e,t,n,r,o=.7){try{let s=await J(e);if(s&&s.purpose_type!==n){let f=new Date().toISOString();await x(`
        UPDATE conversation_purposes
        SET end_timestamp = ?
        WHERE purpose_id = ?
      `,[f,s.purpose_id]),console.log(`Closed purpose ${s.purpose_type} for conversation ${e}`)}else if(s&&s.purpose_type===n)return s.purpose_id;let a=Pn(),c=new Date().toISOString(),i=r?JSON.stringify({trigger_message_id:r}):null;return await x(`
      INSERT INTO conversation_purposes (
        purpose_id,
        conversation_id,
        purpose_type,
        confidence,
        start_timestamp,
        metadata
      ) VALUES (?, ?, ?, ?, ?, ?)
    `,[a,e,n,o,c,i]),console.log(`Created new purpose record: ${n} (${a}) for conversation ${e}`),a}catch(s){throw console.error(`Error tracking purpose transition for conversation ${e}:`,s),new Error(`Failed to track purpose transition: ${s.message}`)}}async function ft(e,t){try{let r=await ke([{content:t,role:"user"}]);(!r||!r.purposeType)&&(r.purposeType="general_query",r.confidence=.5);try{await Le(e,r.purposeType,r.purposeType,null,r.confidence),console.log(`Initial purpose for conversation ${e}: ${r.purposeType} (${r.confidence})`)}catch(o){console.error("Error tracking purpose transition:",o),console.log("Continuing with initialization despite purpose tracking error")}return r}catch(n){return console.error("Error detecting initial purpose:",n),{purposeType:"general_query",confidence:.5}}}async function yt(e,t,n,r=[],o,s){try{let a=De(),c=new Date().toISOString();console.log("===== RECORD MESSAGE - START ====="),console.log("Input parameters:"),console.log("- message_id:",a),console.log("- conversation_id:",n),console.log("- role:",t),console.log("- content:",e&&e.substring(0,50)+(e.length>50?"...":"")),console.log("- timestamp:",c),console.log("- topic_segment_id:",o||"null"),console.log("- user_intent:",s||"null"),console.log("- related_context_entity_ids:",JSON.stringify(r||[]));let i=[];t==="user"&&xe?i=xe(e,"plaintext")||[]:(e.includes("!")&&i.push("emphasis"),e.includes("?")&&i.push("question"));let u=["great","good","excellent","awesome","love","like","well done","thanks","thank you","perfect","amazing","fantastic","nice","happy","success","yay"],m=["bad","error","fail","hate","problem","issue","bug","broken","wrong","difficult","hard","annoy","frustrate","sad","unhappy","disappoint","no","not working","doesn't work","crash","stuck"],f=u.filter(S=>e.toLowerCase().includes(S)),_=m.filter(S=>e.toLowerCase().includes(S)),h={positive_keywords:f,negative_keywords:_},T={message_id:a,conversation_id:n,role:t,content:e,timestamp:c,relatedContextEntityIds:JSON.stringify(r||[]),summary:null,userIntent:s||null,topicSegmentId:o||null,semantic_markers:JSON.stringify(i),sentiment_indicators:JSON.stringify(h)};return console.log("Message object to be indexed:",{message_id:T.message_id,conversation_id:T.conversation_id,role:T.role,topic_segment_id:T.topicSegmentId,user_intent:T.userIntent}),await st(T),console.log("===== RECORD MESSAGE - COMPLETE ====="),console.log("Successfully recorded message with ID:",a),a}catch(a){throw console.error("===== RECORD MESSAGE - ERROR ====="),console.error("Failed to record message:",a),console.error("Error stack:",a.stack),new Error("Failed to record message: "+a.message)}}async function _t(e,t){let n=await $(t,10);return await ut({content:e,role:"user"},n)}async function $e(e,t=!1){try{if(t)return await mt(e);let r=await x(`
      SELECT * FROM conversation_topics
      WHERE conversation_id = ?
      ORDER BY start_timestamp ASC
    `,[e]);return!r||!r.rows||r.rows.length===0?(console.log(`No topics found for conversation: ${e}`),[]):r.rows.map(o=>{let s={...o};try{s.primary_entities=o.primary_entities?JSON.parse(o.primary_entities):[],s.keywords=o.keywords?JSON.parse(o.keywords):[]}catch(a){console.warn(`Error parsing JSON fields in topic: ${a.message}`),s.primary_entities=[],s.keywords=[]}return s})}catch(n){return console.warn("Failed to retrieve conversation topics",{error:n.message,conversationId:e}),[]}}async function Et(e){let n=await x(`
    SELECT role, content FROM conversation_history
    WHERE conversation_id = ?
    ORDER BY timestamp ASC
  `,[e]);if(!n||!n.rows||!Array.isArray(n.rows)||n.rows.length===0)return console.warn(`No valid messages found for conversation ${e}`),"";let r=n.rows.map(s=>`${s.role}: ${s.content}`).join(`
`);return await F(r,{targetLength:250,preserveKeyPoints:!0})}async function wt(e,t){try{let n=new Date().toISOString(),r=null;t&&t.trim()&&(r=De(),await x(`
        INSERT INTO conversation_history (
          message_id,
          conversation_id, 
          role,
          content,
          timestamp,
          related_context_entity_ids,
          summary,
          user_intent
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
      `,[r,e,"user",t,n,JSON.stringify([]),"Initial user query","start_conversation"]),console.log(`User query recorded with ID: ${r}`));let o=De();await x(`
      INSERT INTO conversation_history (
        message_id,
        conversation_id, 
        role,
        content,
        timestamp,
        related_context_entity_ids,
        summary,
        user_intent
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `,[o,e,"system",t?"Conversation started with query":"Conversation started",n,JSON.stringify([]),"Conversation initialization","start_conversation"]),t&&await ft(e,t),await pe(e,r||o,{name:"Initial conversation",description:t||"Conversation start",primaryEntities:[],keywords:[]}),console.log(`Conversation initialized with ID: ${e}`)}catch(n){throw console.error("Error initializing conversation:",n),new Error("Failed to initialize conversation: "+n.message)}}async function $(e,t=50,n=0){try{if(!e)throw new Error("Conversation ID is required");let o=await x(`
      SELECT 
        message_id,
        conversation_id,
        role,
        content,
        timestamp,
        related_context_entity_ids,
        summary,
        user_intent,
        topic_segment_id,
        semantic_markers,
        sentiment_indicators
      FROM 
        conversation_history
      WHERE 
        conversation_id = ?
      ORDER BY 
        timestamp ASC
      LIMIT ? OFFSET ?
    `,[e,t,n]);return!o||!o.rows||!Array.isArray(o.rows)?(console.warn("No valid rows returned from conversation history query"),[]):o.rows.map(s=>{try{let a={messageId:s.message_id,conversationId:s.conversation_id,role:s.role,content:s.content,timestamp:s.timestamp,relatedContextEntityIds:[],summary:s.summary,userIntent:s.user_intent,topicSegmentId:s.topic_segment_id,semanticMarkers:[],sentimentIndicators:{}};return s.related_context_entity_ids&&(a.relatedContextEntityIds=JSON.parse(s.related_context_entity_ids)),s.semantic_markers&&(a.semanticMarkers=JSON.parse(s.semantic_markers)),s.sentiment_indicators&&(a.sentimentIndicators=JSON.parse(s.sentiment_indicators)),a}catch(a){return console.error("Error parsing JSON fields in conversation message:",a),{messageId:s.message_id,conversationId:s.conversation_id,role:s.role,content:s.content,timestamp:s.timestamp,relatedContextEntityIds:[],summary:s.summary,userIntent:s.user_intent,topicSegmentId:s.topic_segment_id,semanticMarkers:[],sentimentIndicators:{}}}})}catch(r){return console.error(`Error getting conversation history for ${e}:`,r),[]}}async function St(e){try{if(!e)throw new Error("Conversation ID is required");let t=await J(e);return t||{purposeType:"general_query",confidence:.5,startTimestamp:new Date().toISOString()}}catch(t){return console.error(`Error getting conversation purpose for ${e}:`,t),{purposeType:"general_query",confidence:.5,startTimestamp:new Date().toISOString()}}}async function ge(e,t=5){try{if(!e)throw new Error("Conversation ID is required");let r=await x(`
      SELECT 
        message_id,
        conversation_id,
        role,
        content,
        timestamp,
        related_context_entity_ids,
        summary,
        user_intent,
        topic_segment_id,
        semantic_markers,
        sentiment_indicators
      FROM 
        conversation_history
      WHERE 
        conversation_id = ?
      ORDER BY 
        timestamp DESC
      LIMIT ?
    `,[e,t]);return!r||!r.rows||!Array.isArray(r.rows)?(console.warn("No valid rows returned from recent messages query"),[]):r.rows.map(o=>{try{let s={messageId:o.message_id,conversationId:o.conversation_id,role:o.role,content:o.content,timestamp:o.timestamp,relatedContextEntityIds:[],summary:o.summary,userIntent:o.user_intent,topicSegmentId:o.topic_segment_id,semanticMarkers:[],sentimentIndicators:{}};return o.related_context_entity_ids&&(s.relatedContextEntityIds=JSON.parse(o.related_context_entity_ids)),o.semantic_markers&&(s.semanticMarkers=JSON.parse(o.semantic_markers)),o.sentiment_indicators&&(s.sentimentIndicators=JSON.parse(o.sentiment_indicators)),s}catch(s){return console.error("Error parsing JSON fields in conversation message:",s),{messageId:o.message_id,conversationId:o.conversation_id,role:o.role,content:o.content,timestamp:o.timestamp,relatedContextEntityIds:[],summary:o.summary,userIntent:o.user_intent,topicSegmentId:o.topic_segment_id,semanticMarkers:[],sentimentIndicators:{}}}})}catch(n){return console.error(`Error getting recent messages for ${e}:`,n),[]}}N();import{v4 as zn}from"uuid";N();import{v4 as Tt}from"uuid";async function P(e,t,n=[],r=null){try{let o=Tt(),s=JSON.stringify(t),a=JSON.stringify(n),c=Date.now();return await x(`
      INSERT INTO timeline_events (
        event_id, 
        event_type, 
        timestamp, 
        data, 
        associated_entity_ids,
        conversation_id
      ) VALUES (?, ?, ?, ?, ?, ?)
    `,[o,e,c,s,a,r]),o}catch(o){throw console.error(`Error recording timeline event (${e}):`,o),o}}async function vt(e,t=null,n=null,r=null){try{let o=Tt(),s=JSON.stringify(e);return await x(`
      INSERT INTO context_snapshots (
        snapshot_id,
        name,
        description,
        snapshot_data,
        timeline_event_id
      ) VALUES (?, ?, ?, ?, ?)
    `,[o,t,n,s,r]),o}catch(o){throw console.error("Error creating context snapshot:",o),o}}async function z(e={}){try{let{types:t,limit:n,conversationId:r,includeMilestones:o=!0,excludeConversationId:s}=e,a="SELECT * FROM timeline_events WHERE 1=1",c=[];if(t&&t.length>0&&(a+=` AND event_type IN (${t.map(()=>"?").join(",")})`,c.push(...t)),r&&(a+=" AND conversation_id = ?",c.push(r)),s&&(a+=" AND (conversation_id != ? OR conversation_id IS NULL)",c.push(s)),!o){let m=["milestone_created","implicit_checkpoint_creation","checkpoint_created"];a+=` AND event_type NOT IN (${m.map(()=>"?").join(",")})`,c.push(...m),a+=` AND NOT EXISTS (
        SELECT 1 FROM context_snapshots 
        WHERE context_snapshots.timeline_event_id = timeline_events.event_id
      )`}a+=" ORDER BY timestamp DESC",n&&Number.isInteger(n)&&n>0&&(a+=" LIMIT ?",c.push(n));let i=await x(a,c),u=i&&i.rows&&Array.isArray(i.rows)?i.rows:Array.isArray(i)?i:[];return u.length===0?(console.warn("No valid timeline events found"),[]):u.map(m=>({...m,data:JSON.parse(m.data||"{}"),associated_entity_ids:JSON.parse(m.associated_entity_ids||"[]")}))}catch(t){throw console.error("Error retrieving timeline events:",t),t}}async function xt(e,t=10,n=null){try{if(!e)throw new Error("Conversation ID is required");let r=`
      SELECT 
        event_id,
        event_type,
        timestamp,
        data,
        associated_entity_ids,
        conversation_id
      FROM 
        timeline_events
      WHERE 
        conversation_id = ?
    `,o=[e];if(n&&Array.isArray(n)&&n.length>0){let c=n.map(()=>"?").join(",");r+=` AND event_type IN (${c})`,o.push(...n)}r+=`
      ORDER BY 
        timestamp DESC
      LIMIT ?
    `,o.push(t);let s=await x(r,o),a=s&&s.rows&&Array.isArray(s.rows)?s.rows:Array.isArray(s)?s:[];return a.length===0?(console.warn("No recent events found for conversation:",e),[]):a.map(c=>({...c,data:JSON.parse(c.data||"{}"),associated_entity_ids:JSON.parse(c.associated_entity_ids||"[]")}))}catch(r){return console.error(`Error getting recent events for conversation ${e}:`,r),[]}}function fe(e,t=[]){let n={GENERAL_QUERY:"general_query",CODE_SEARCH:"code_search",EXPLANATION_REQUEST:"explanation_request",DEBUGGING_ASSIST:"debugging_assist",REFACTORING_SUGGESTION:"refactoring_suggestion",IMPLEMENTATION_REQUEST:"implementation_request",DOCUMENTATION_REQUEST:"documentation_request"},r={[n.GENERAL_QUERY]:.1,[n.CODE_SEARCH]:0,[n.EXPLANATION_REQUEST]:0,[n.DEBUGGING_ASSIST]:0,[n.REFACTORING_SUGGESTION]:0,[n.IMPLEMENTATION_REQUEST]:0,[n.DOCUMENTATION_REQUEST]:0},o=e.toLowerCase(),s=I(e),a=L(s);o.includes("?")&&(r[n.EXPLANATION_REQUEST]+=.3);let c=[/```[\s\S]*?```/,/function\s+\w+\s*\(.*?\)/,/const|let|var\s+\w+\s*=/,/class\s+\w+/,/import\s+.*?from/];for(let f of c)if(f.test(e)){r[n.CODE_SEARCH]+=.2,r[n.DEBUGGING_ASSIST]+=.2;break}let i=[{patterns:["find","search","where is","locate","look for"],intent:n.CODE_SEARCH,score:.6},{patterns:["explain","how does","what is","why","how to","tell me about"],intent:n.EXPLANATION_REQUEST,score:.6},{patterns:["error","bug","issue","problem","fix","debug","not working","exception","fail"],intent:n.DEBUGGING_ASSIST,score:.7},{patterns:["refactor","improve","optimize","clean","better way","restructure","revise"],intent:n.REFACTORING_SUGGESTION,score:.65},{patterns:["implement","create","make","build","develop","code","add","new feature"],intent:n.IMPLEMENTATION_REQUEST,score:.6},{patterns:["document","comment","describe","explain code","documentation"],intent:n.DOCUMENTATION_REQUEST,score:.55}];for(let{patterns:f,intent:_,score:h}of i)for(let T of f)if(o.includes(T)){r[_]+=h;break}if(t&&t.length>0){let f=t.slice(-3).filter(_=>_.content);for(let _ of f){let h=_.content.toLowerCase();/error|bug|issue|problem|fix|debug|not working|exception|fail/.test(h)&&(r[n.DEBUGGING_ASSIST]+=.2),/refactor|improve|optimize|clean|better|restructure|architecture/.test(h)&&(r[n.REFACTORING_SUGGESTION]+=.2),/explain|how does|what is|why|how to|understand/.test(h)&&(r[n.EXPLANATION_REQUEST]+=.15)}}let u=0,m=n.GENERAL_QUERY;for(let[f,_]of Object.entries(r))_>u&&(u=_,m=f);return{intent:m,keywords:a}}async function Fe(e=[],t=[]){try{let n=new Map,r=new Map,o=new Map,s=new Set;for(let h of e){if(o.set(h.event_type,(o.get(h.event_type)||0)+1),h.data&&h.data.path){let T=h.data.path;n.set(T,(n.get(T)||0)+1);let S=T.split("/");for(let y=1;y<S.length;y++){let g=S.slice(0,y).join("/");g&&n.set(g,(n.get(g)||0)+.3)}}if(h.associated_entity_ids&&h.associated_entity_ids.length>0)for(let T of h.associated_entity_ids)r.set(T,(r.get(T)||0)+1);if(h.data&&typeof h.data=="object"){let T=[h.data.description,h.data.message,h.data.content,h.data.query].filter(Boolean);for(let S of T)if(S&&typeof S=="string"){let y=I(S);L(y).forEach(l=>s.add(l))}}}for(let h of t){let T=h.path;n.set(T,(n.get(T)||0)+3);let S=T.split("/");for(let y=1;y<S.length;y++){let g=S.slice(0,y).join("/");g&&n.set(g,(n.get(g)||0)+.5)}if(h.content){let y=I(h.content);L(y).forEach(l=>s.add(l))}}let a="",c=0,i="file";for(let[h,T]of n.entries())T>c&&(c=T,a=h,i=h.includes(".")&&!h.endsWith("/")?"file":"directory");if(!a&&o.size>0){let h="";c=0;for(let[T,S]of o.entries())S>c&&(c=S,h=T);h&&(a=`activity:${h}`,i="task_type")}if(!a)return null;let u="";i==="file"?u=`Working on file ${a}`:i==="directory"?u=`Working in directory ${a}`:u=`${a.replace("activity:","")} activity`;let m=Array.from(r.entries()).sort((h,T)=>T[1]-h[1]).slice(0,10).map(([h])=>h),f=Array.from(s).slice(0,20),_={focus_id:zn(),focus_type:i,identifier:a,description:u,related_entity_ids:JSON.stringify(m),keywords:JSON.stringify(f),last_activated_at:Date.now(),is_active:!0};try{await Un(_)}catch(h){console.error("Error updating focus area in database:",h)}return _}catch(n){return console.error("Error predicting focus area:",n),null}}async function Un(e){try{let t=typeof e.related_entity_ids=="string"?e.related_entity_ids:JSON.stringify(e.related_entity_ids||[]),n=typeof e.keywords=="string"?e.keywords:JSON.stringify(e.keywords||[]),r=e.last_activated_at||Date.now();await x("BEGIN TRANSACTION");try{await x("UPDATE focus_areas SET is_active = FALSE WHERE is_active = TRUE");let o=await x("SELECT focus_id FROM focus_areas WHERE identifier = ?",[e.identifier]);o&&o.length>0?await x(`UPDATE focus_areas SET 
            focus_type = ?,
            description = ?,
            related_entity_ids = ?,
            keywords = ?,
            last_activated_at = ?,
            is_active = TRUE
          WHERE focus_id = ?`,[e.focus_type,e.description,t,n,r,o[0].focus_id]):await x(`INSERT INTO focus_areas (
            focus_id,
            focus_type,
            identifier,
            description,
            related_entity_ids,
            keywords,
            last_activated_at,
            is_active
          ) VALUES (?, ?, ?, ?, ?, ?, ?, TRUE)`,[e.focus_id,e.focus_type,e.identifier,e.description,t,n,r]),await x("COMMIT")}catch(o){throw await x("ROLLBACK"),o}}catch(t){throw console.error("Error updating focus area in database:",t),t}}async function Me(e){try{let{conversationId:t,newMessage:n,isUser:r=!1,activeFile:o,codeChanges:s=[]}=e,a=null,c=!1,i=null;if(n&&r){let _=(await x(`SELECT content, role, timestamp 
         FROM conversation_history 
         WHERE conversation_id = ? 
         ORDER BY timestamp DESC 
         LIMIT 5`,[t])).map(l=>({content:l.content,role:l.role}));_.unshift({content:n,role:"user"});let{intent:h,keywords:T}=fe(n,_),S=await x("SELECT * FROM focus_areas WHERE is_active = TRUE LIMIT 1"),y=null;if(S&&S.length>0){let l=S[0];y={...l,related_entity_ids:JSON.parse(l.related_entity_ids||"[]"),keywords:JSON.parse(l.keywords||"[]")}}let g=.5;if(h!=="general_query"&&y&&(g=.7,y.keywords&&T)){let l=T.filter(E=>y.keywords.includes(E));l.length>0&&(g+=Math.min(.3,l.length*.05))}a={intent:h,confidence:g,keywords:T,focusArea:y}}let u=[];o&&u.push({path:o}),s&&s.length>0&&u.push(...s);let m=await z({limit:20,types:["code_change","file_open","cursor_move","navigation"]});if(u.length>0||m.length>0){let f=await Fe(m,u);if(f)c=!0,i=f;else{let _=await x("SELECT * FROM focus_areas WHERE is_active = TRUE LIMIT 1");if(_&&_.length>0){let h=_[0];i={...h,related_entity_ids:JSON.parse(h.related_entity_ids||"[]"),keywords:JSON.parse(h.keywords||"[]")}}}}else{let f=await x("SELECT * FROM focus_areas WHERE is_active = TRUE LIMIT 1");if(f&&f.length>0){let _=f[0];i={..._,related_entity_ids:JSON.parse(_.related_entity_ids||"[]"),keywords:JSON.parse(_.keywords||"[]")}}}return a&&!a.focusArea&&i&&(a.focusArea=i),{newIntent:a,focusUpdated:c,currentFocus:i}}catch(t){return console.error("Error updating intent:",t),{focusUpdated:!1}}}N();async function K(e,t={}){try{if(!e||!Array.isArray(e)||e.length===0)throw new Error("Keywords array is required and cannot be empty");e.length===1&&/\s+(AND|OR|NOT|NEAR\/\d+)\s+/i.test(e[0])||(e=e.map(r=>r.trim()).filter(r=>r.length>0)),t={strategy:"combined",booleanOperator:"OR",limit:100,...t};let n=[];if((t.strategy==="fts"||t.strategy==="combined")&&(n=[...await Bn(e,t)]),t.strategy==="keywords"||t.strategy==="combined"||t.strategy==="fts"&&n.length===0){let r=await jn(e,t);t.strategy==="combined"&&n.length>0?n=Gn(n,r):n=r}return t.minRelevance&&(n=n.filter(r=>r.relevanceScore>=t.minRelevance)),t.limit&&n.length>t.limit&&(n=n.slice(0,t.limit)),n}catch(n){throw console.error("Error in searchByKeywords:",n),n}}async function Bn(e,t){try{let n=e.map(u=>Ce(u.toLowerCase()).replace(/[\\"\(\)\[\]\{\}\^\$\+\*\?\.]/g,_=>`\\${_}`)),r=t.booleanOperator?.toUpperCase()==="AND"?"AND":"OR",o;if(t.useExactMatch)o=`"${n.join(" ")}"`;else if(t.useProximity&&n.length>1){let u=t.proximityDistance||10;o=`${n.join(` NEAR/${u} `)}`}else o=n.join(` ${r} `);e.length===1&&/\s+(AND|OR|NOT|NEAR\/\d+)\s+/i.test(e[0])&&(o=e[0]);let s=`
      SELECT
        e.*,
        fts.rank as relevance_score
      FROM
        code_entities_fts fts
      JOIN
        code_entities e ON fts.rowid = e.rowid
      WHERE
        fts.code_entities_fts MATCH ?
    `,a=[o];if(t.entityTypes&&t.entityTypes.length>0){let u=t.entityTypes.map(()=>"?").join(", ");s+=` AND e.entity_type IN (${u})`,a.push(...t.entityTypes)}if(t.filePaths&&t.filePaths.length>0){s+=" AND (";let u=[];for(let m of t.filePaths){let f=m.replace(/\*/g,"%").replace(/\?/g,"_");f=f.replace(/%\/%/g,"%"),u.push("e.file_path LIKE ?"),a.push(f)}s+=u.join(" OR "),s+=")"}t.dateRange&&(t.dateRange.start&&(s+=" AND e.last_modified_at >= ?",a.push(t.dateRange.start.toISOString())),t.dateRange.end&&(s+=" AND e.last_modified_at <= ?",a.push(t.dateRange.end.toISOString()))),t.customRanking?s+=` ORDER BY ${t.customRanking}`:s+=`
        ORDER BY 
          relevance_score * 
          CASE 
            WHEN e.entity_type = 'file' THEN 1.2
            WHEN e.entity_type = 'class' THEN 1.1
            WHEN e.entity_type = 'function' THEN 1.0
            ELSE 0.9
          END DESC
      `;let c=t.limit&&t.limit>0?t.limit:100;s+=" LIMIT ?",a.push(c);let i=await x(s,a);return Ct(i)}catch(n){throw console.error("Error in searchUsingFTS:",n),n}}async function jn(e,t){try{let n;e.length===1&&/\s+(AND|OR|NOT)\s+/i.test(e[0])?n=e[0].split(/\s+(?:AND|OR|NOT)\s+/i).map(i=>i.trim()).filter(i=>i.length>0):n=e;let r=n.map(i=>Ce(i.toLowerCase())),o=`
      SELECT 
        e.*,
        SUM(ek.weight * (1.0 + (0.1 * count_matches))) as relevance_score
      FROM (
        SELECT 
          entity_id, 
          COUNT(DISTINCT keyword) as count_matches,
          MAX(weight) as weight
        FROM 
          entity_keywords
        WHERE 
          keyword IN (${r.map(()=>"?").join(",")})
        GROUP BY 
          entity_id
      ) as ek
      JOIN 
        code_entities e ON ek.entity_id = e.entity_id
    `,s=[...r];o=qn(o,t,s),t.sortBy?o+=` ORDER BY e.${t.sortBy}`:o+=`
        ORDER BY 
          relevance_score * 
          CASE 
            WHEN e.entity_type = 'file' THEN 1.2
            WHEN e.entity_type = 'class' THEN 1.1
            WHEN e.entity_type = 'function' THEN 1.0
            ELSE 0.9
          END DESC
      `;let a=t.limit&&t.limit>0?t.limit:100;o+=" LIMIT ?",s.push(a);let c=await x(o,s);return Ct(c)}catch(n){throw console.error("Error in searchUsingKeywords:",n),n}}function qn(e,t,n){if(t.entityTypes&&t.entityTypes.length>0){let r=t.entityTypes.map(()=>"?").join(", ");e+=` AND e.entity_type IN (${r})`,n.push(...t.entityTypes)}if(t.filePaths&&t.filePaths.length>0){e+=" AND (";let r=[];for(let o of t.filePaths){let s=o.replace(/\*/g,"%").replace(/\?/g,"_");s=s.replace(/%\/%/g,"%"),r.push("e.file_path LIKE ?"),n.push(s)}e+=r.join(" OR "),e+=")"}return t.dateRange&&(t.dateRange.start&&(e+=" AND e.last_modified_at >= ?",n.push(t.dateRange.start.toISOString())),t.dateRange.end&&(e+=" AND e.last_modified_at <= ?",n.push(t.dateRange.end.toISOString()))),e}function Ct(e){let t=e&&e.rows&&Array.isArray(e.rows)?e.rows:Array.isArray(e)?e:[];return t.length===0?(console.warn("No valid search results found to map"),[]):t.map(n=>({entity:{entity_id:n.entity_id,file_path:n.file_path,entity_type:n.entity_type,name:n.name,parent_entity_id:n.parent_entity_id,content_hash:n.content_hash,raw_content:n.raw_content,start_line:n.start_line,end_line:n.end_line,language:n.language,created_at:n.created_at,last_modified_at:n.last_modified_at},relevanceScore:n.relevance_score}))}function Gn(e,t){let n=new Map;for(let r of e)n.set(r.entity.entity_id,r);for(let r of t){let o=r.entity.entity_id;if(n.has(o)){let s=n.get(o),a=s.relevanceScore*.7+r.relevanceScore*.3;n.set(o,{...s,relevanceScore:a})}else n.set(o,r)}return Array.from(n.values()).sort((r,o)=>o.relevanceScore-r.relevanceScore)}N();q();N();B();async function bt(){try{let t=new Date(Date.now()-2592e6),n=`
      UPDATE code_entities 
      SET importance_score = importance_score * ? 
      WHERE last_accessed_at < ? 
      AND importance_score > ?
    `,r=[Xe,t.toISOString(),.1],o=await x(n,r);console.log(`Applied decay to ${o.changes||0} entities`)}catch(e){throw console.error("Error applying decay to importance scores:",e),e}}var Z=new Set,he=null,ne=[];function X(){return he}function re(e){he=e,e&&Array.isArray(e.related_entity_ids)&&Ue(e.related_entity_ids,[])}function Ue(e=[],t=[]){let n={timestamp:Date.now()};e.length>0&&(e.forEach(r=>Z.add(r)),n.added=[...e]),t.length>0&&(t.forEach(r=>Z.delete(r)),n.removed=[...t]),(e.length>0||t.length>0)&&(ne.push(n),ne.length>50&&ne.shift())}function Wn(){return[...Z]}function Y(){Z.clear(),he=null,ne.push({timestamp:Date.now(),event:"clear_context"})}async function Be(){let e=Wn();if(e.length===0)return[];try{let n=`SELECT * FROM code_entities WHERE id IN (${e.map(()=>"?").join(",")})`;return await x(n,e)}catch(t){return console.error("Error retrieving active context entities:",t),[]}}async function ye(){try{let e=await Be(),t=X(),n=ne.slice(-10);return{activeEntityIds:[...Z],activeFocus:t,entities:e,recentChanges:n,timestamp:Date.now()}}catch(e){return console.error("Error getting active context state:",e),{activeEntityIds:[...Z],activeFocus:he,entities:[],recentChanges:[],timestamp:Date.now(),error:e.message}}}N();import{v4 as Xn}from"uuid";async function Ee(e={}){try{let{type:t,minConfidence:n,limit:r,language:o}=e,s="SELECT * FROM project_patterns WHERE is_global = TRUE",a=[];t&&(s+=" AND pattern_type = ?",a.push(t)),n!==void 0&&!isNaN(n)&&(s+=" AND confidence_score >= ?",a.push(n)),o&&(s+=" AND (language = ? OR language = ? OR language IS NULL)",a.push(o,"any")),s+=" ORDER BY confidence_score DESC, utility_score DESC",r!==void 0&&!isNaN(r)&&r>0&&(s+=" LIMIT ?",a.push(r));let c=await x(s,a),i=c&&c.rows&&Array.isArray(c.rows)?c.rows:Array.isArray(c)?c:[];return i.length===0?(console.warn("No valid global patterns found"),[]):i.map(u=>({...u,detection_rules:JSON.parse(u.detection_rules||"{}"),is_global:!!u.is_global}))}catch(t){throw console.error("Error retrieving global patterns:",t),new Error(`Failed to retrieve global patterns: ${t.message}`)}}async function we(e,t){try{let n="UPDATE project_patterns SET is_global = TRUE",r=[];t!==void 0&&!isNaN(t)&&(n+=", confidence_score = ?",r.push(t));let o=new Date().toISOString();n+=", updated_at = ?",r.push(o),n+=" WHERE pattern_id = ?",r.push(e);let a=(await x(n,r)).affectedRows>0;return a?(console.log(`Pattern ${e} successfully promoted to global status`),t!==void 0&&console.log(`Updated confidence score to ${t}`)):console.warn(`No pattern with ID ${e} found to promote`),a}catch(n){throw console.error(`Error promoting pattern ${e} to global:`,n),new Error(`Failed to promote pattern: ${n.message}`)}}async function je(e,t,n={}){try{let r=Xn(),o=new Date().toISOString(),s=JSON.stringify(n||{}),a={usage:.03,confirmation:.05,rejection:-.08},c={usage:.04,confirmation:.03,rejection:-.02};await x("BEGIN TRANSACTION");try{await x(`
        INSERT INTO pattern_observations (
          observation_id,
          pattern_id,
          observation_type,
          observation_data,
          timestamp
        ) VALUES (?, ?, ?, ?, ?)
      `,[r,e,t,s,o]);let m=await x("SELECT confidence_score, utility_score, reinforcement_count FROM project_patterns WHERE pattern_id = ?",[e]);if(m.length===0)throw new Error(`Pattern with ID ${e} not found`);let f=m[0],_=f.confidence_score+(a[t]||0),h=f.utility_score+(c[t]||0);_=Math.max(0,Math.min(1,_)),h=Math.max(0,Math.min(1,h));let T=`
        UPDATE project_patterns SET
          reinforcement_count = reinforcement_count + 1,
          confidence_score = ?,
          utility_score = ?,
          updated_at = ?
      `,S=t==="usage"?", last_detected_at = ?":"",y=[_,h,o];t==="usage"&&y.push(o);let g=T+S+" WHERE pattern_id = ?";y.push(e),await x(g,y),await x("COMMIT"),console.log(`Pattern ${e} reinforced with '${t}' observation`)}catch(i){throw await x("ROLLBACK"),i}}catch(r){throw console.error(`Error reinforcing pattern ${e}:`,r),new Error(`Failed to reinforce pattern: ${r.message}`)}}function Hn(e,t){let n=0,r=0,o=0,s=1;o=e.pattern_type===t.pattern_type?1:.3,e.language&&t.language?e.language==="any"||t.language==="any"?s=.9:e.language!==t.language&&(s=.2):(e.language||t.language)&&(s=.7),n=At(_e(e.representation),_e(t.representation)),r=At(_e(e.detection_rules),_e(t.detection_rules));let a=n*.5+r*.3+s*.15+o*.05;return Math.max(0,Math.min(1,a))}function _e(e){if(!e)return[];let t=e;if(typeof e=="string"&&(e.startsWith("{")||e.startsWith("[")))try{let n=JSON.parse(e);t=JSON.stringify(n,null,0).toLowerCase()}catch{t=e.toLowerCase()}else typeof e=="object"?t=JSON.stringify(e,null,0).toLowerCase():t=String(e).toLowerCase();return t.split(/[^a-z0-9_]+/).filter(n=>n.length>1).map(n=>n.trim())}function At(e,t){if(!e.length&&!t.length)return 1;if(!e.length||!t.length)return 0;let n=new Set(e),r=new Set(t),o=0;for(let a of n)r.has(a)&&o++;let s=n.size+r.size-o;return o/s}async function Jn(e={}){try{let{minReinforcementCount:t=3,minConfidence:n=.6,similarityThreshold:r=.8}=e;console.log(`Starting pattern consolidation process (minReinforcementCount=${t}, minConfidence=${n})`);let o=0,s=0,c=await x(`
      SELECT * FROM project_patterns 
      WHERE is_global = FALSE 
      AND reinforcement_count >= ? 
      AND confidence_score >= ?
    `,[t,n]);if(console.log(`Found ${c.length} session patterns that qualify for promotion or merging`),c.length===0)return{promoted:0,merged:0};let i=await Ee();for(let u of c){let m=u.pattern_id,f=!0,_=null;for(let h of i)if(Hn(u,h)>=r){f=!1,_=h;break}f?(console.log(`Promoting session pattern ${m} to global status`),await we(m,u.confidence_score)&&(o++,console.log(`Successfully promoted pattern ${m}`))):_&&(console.log(`Merge attempt for pattern ${m} with ${_.pattern_id}`),s++)}return console.log(`Pattern consolidation complete. Promoted: ${o}, Merged: ${s}`),{promoted:o,merged:s}}catch(t){throw console.error("Error consolidating session patterns:",t),new Error(`Failed to consolidate session patterns: ${t.message}`)}}function It(e=60){let t=e*60*1e3;return console.log(`Scheduling pattern consolidation to run every ${e} minutes`),setInterval(async()=>{console.log(`Running scheduled pattern consolidation (interval: ${e} minutes)`);try{let r=await Jn({minReinforcementCount:5,minConfidence:.7});console.log(`Pattern consolidation completed: ${r.promoted} patterns promoted, ${r.merged} patterns merged`)}catch(r){console.error("Error during scheduled pattern consolidation:",r)}},t)}B();import{z as p}from"zod";var Nt={initialQuery:p.string().optional(),focusHint:p.object({type:p.string(),identifier:p.string()}).optional(),includeArchitecture:p.boolean().optional().default(!0),includeRecentConversations:p.boolean().optional().default(!0),maxCodeContextItems:p.number().optional().default(5),maxRecentChanges:p.number().optional().default(5),contextDepth:p.enum(["minimal","standard","comprehensive"]).optional().default("standard"),tokenBudget:p.number().optional().default(U)},Ot={conversationId:p.string(),initialContextSummary:p.string(),predictedIntent:p.string().optional(),comprehensiveContext:p.object({codeContext:p.array(p.any()).optional(),architectureContext:p.object({summary:p.string(),sources:p.array(p.object({name:p.string(),path:p.string()}))}).nullable(),recentConversations:p.array(p.object({timestamp:p.number(),summary:p.string(),purpose:p.string()})).optional(),activeWorkflows:p.array(p.object({name:p.string(),description:p.string(),timestamp:p.number()})).optional(),projectStructure:p.any().nullable(),recentChanges:p.array(p.object({timestamp:p.number(),files:p.array(p.string()),summary:p.string()})).optional(),globalPatterns:p.array(p.object({name:p.string(),type:p.string(),description:p.string(),confidence:p.number()})).optional()}).optional()},kt={conversationId:p.string(),newMessages:p.array(p.object({role:p.enum(["user","assistant","system"]),content:p.string()})).optional().default([]),codeChanges:p.array(p.object({filePath:p.string(),newContent:p.string(),languageHint:p.string().optional()})).optional().default([]),preserveContextOnTopicShift:p.boolean().optional().default(!0),contextIntegrationLevel:p.enum(["minimal","balanced","aggressive"]).optional().default("balanced"),trackIntentTransitions:p.boolean().optional().default(!0),tokenBudget:p.number().optional().default(U)},Lt={status:p.enum(["success","partial","failure"]),updatedFocus:p.object({type:p.string(),identifier:p.string()}).optional(),contextContinuity:p.object({preserved:p.boolean(),topicShift:p.boolean(),intentTransition:p.boolean()}),contextSynthesis:p.object({summary:p.string(),topPriorities:p.array(p.string()).optional()}).optional(),intentTransition:p.object({from:p.string().nullable(),to:p.string().nullable(),confidence:p.number()}).optional()},Dt={conversationId:p.string(),query:p.string(),tokenBudget:p.number().optional().default(U),constraints:p.object({entityTypes:p.array(p.string()).optional(),filePaths:p.array(p.string()).optional(),includeConversation:p.boolean().optional().default(!0),crossTopicSearch:p.boolean().optional().default(!1),focusOverride:p.object({type:p.string(),identifier:p.string()}).optional()}).optional().default({}),contextFilters:p.object({minRelevanceScore:p.number().optional().default(.3),excludeTypes:p.array(p.string()).optional(),preferredLanguages:p.array(p.string()).optional(),timeframe:p.object({from:p.number().optional(),to:p.number().optional()}).optional()}).optional().default({}),weightingStrategy:p.enum(["relevance","recency","hierarchy","balanced"]).optional().default("balanced"),balanceStrategy:p.enum(["proportional","equal_representation","priority_based"]).optional().default("proportional"),contextBalance:p.union([p.enum(["auto","code_heavy","balanced","documentation_focused"]),p.object({code:p.number().optional(),conversation:p.number().optional(),documentation:p.number().optional(),patterns:p.number().optional()})]).optional().default("auto"),sourceTypePreferences:p.object({includePatterns:p.boolean().optional().default(!0),includeDocumentation:p.boolean().optional().default(!0),prioritizeTestCases:p.boolean().optional().default(!1),prioritizeExamples:p.boolean().optional().default(!1)}).optional().default({})},$t={contextSnippets:p.array(p.object({type:p.string(),content:p.string(),entity_id:p.string(),relevanceScore:p.number(),confidenceScore:p.number(),metadata:p.any(),sourceAttribution:p.string(),relevanceExplanation:p.string()})),retrievalSummary:p.string(),contextMetrics:p.object({totalFound:p.number(),selected:p.number(),averageConfidence:p.number(),typeDistribution:p.object({code:p.number(),conversation:p.number(),documentation:p.number(),pattern:p.number()})}).optional()},Ft={conversationId:p.string(),name:p.string(),description:p.string().optional(),customData:p.any().optional(),milestoneCategory:p.enum(["bug_fix","feature_completion","refactoring","documentation","test","configuration","uncategorized"]).optional().default("uncategorized"),assessImpact:p.boolean().optional().default(!0)},Mt={milestoneId:p.string(),status:p.string(),milestoneCategory:p.string(),relatedEntitiesCount:p.number(),impactAssessment:p.object({impactScore:p.number(),impactLevel:p.string(),impactSummary:p.string(),scopeMetrics:p.object({directlyModifiedEntities:p.number(),potentiallyImpactedEntities:p.number(),impactedComponents:p.number(),criticalPathsCount:p.number()}).optional(),stabilityRisk:p.number().optional(),criticalPaths:p.array(p.object({sourceId:p.string(),path:p.string(),dependencyCount:p.number()})).optional(),mostImpactedComponents:p.array(p.object({name:p.string(),count:p.number()})).optional(),error:p.string().optional()}).nullable()},Pt={conversationId:p.string(),clearActiveContext:p.boolean().optional().default(!1),extractLearnings:p.boolean().optional().default(!0),promotePatterns:p.boolean().optional().default(!0),synthesizeRelatedTopics:p.boolean().optional().default(!0),generateNextSteps:p.boolean().optional().default(!0),outcome:p.enum(["completed","abandoned","paused","reference_only"]).optional().default("completed")},zt={status:p.string(),summary:p.string(),purpose:p.string(),extractedLearnings:p.object({learnings:p.array(p.object({type:p.string(),content:p.string(),confidence:p.number(),patternId:p.string().optional(),context:p.array(p.any()).optional(),messageReference:p.string().optional(),relatedIssues:p.array(p.any()).optional(),alternatives:p.array(p.string()).optional(),rationale:p.string().optional(),codeReferences:p.array(p.any()).optional(),applicability:p.number().optional()})),count:p.number(),byType:p.record(p.string(),p.number()),averageConfidence:p.number(),error:p.string().optional()}).nullable(),promotedPatterns:p.object({promoted:p.number(),patterns:p.array(p.object({patternId:p.string(),name:p.string(),type:p.string(),promoted:p.boolean(),confidence:p.number()})),error:p.string().optional()}).nullable(),relatedConversations:p.object({relatedCount:p.number(),conversations:p.array(p.object({conversationId:p.string(),summary:p.string(),timestamp:p.number(),similarityScore:p.number(),commonTopics:p.array(p.string())})),synthesizedInsights:p.array(p.object({topic:p.string(),insight:p.string(),conversationCount:p.number(),sourceSummaries:p.array(p.object({conversationId:p.string(),summary:p.string()}))})),error:p.string().optional()}).nullable(),nextSteps:p.object({suggestedNextSteps:p.array(p.object({action:p.string(),priority:p.enum(["high","medium","low"]),rationale:p.string()})),followUpTopics:p.array(p.object({topic:p.string(),priority:p.enum(["high","medium","low"]),rationale:p.string()})),referenceMaterials:p.array(p.object({title:p.string(),path:p.string(),type:p.string(),relevance:p.number()})),error:p.string().optional()}).nullable()};M();async function Kn(e,t){try{d("INFO","initialize_conversation_context tool started",{initialQuery:e.initialQuery});let n=e.conversationId||Qn();d("DEBUG",`Using conversation ID: ${n}`);let{initialQuery:r="",focusHint:o,includeArchitecture:s=!0,includeRecentConversations:a=!0,maxCodeContextItems:c=5,maxRecentChanges:i=5,contextDepth:u="standard",tokenBudget:m=4e3}=e;try{await Y(),o&&(await re(o.type,o.identifier),d("INFO","Set initial focus",{type:o.type,identifier:o.identifier}))}catch(y){d("WARN","Failed to set initial focus, continuing with initialization",{error:y.message,focusHint:o})}try{await P("conversation_started",{initialQuery:r,focusHint:o,contextDepth:u},[],n),d("DEBUG","Recorded conversation start in timeline",{conversationId:n})}catch(y){d("WARN","Failed to record conversation start in timeline",{error:y.message,conversationId:n})}try{d("INFO",`Initializing conversation intelligence tracker with user query: "${r}"`,{conversationId:n}),await wt(n,r);let y=await ge(n,3);d("INFO",`Conversation initialized with ${y.length} messages`,{messages:y.map(g=>({role:g.role,content:g.content.substring(0,50)+(g.content.length>50?"...":"")}))})}catch(y){throw d("ERROR","Failed to initialize conversation intelligence",{error:y.message,conversationId:n}),new Error(`Conversation intelligence initialization failed: ${y.message}`)}let f="";if(r)try{let y=await fe(r);f=y.intent,d("INFO","Predicted initial intent",{intent:f,confidence:y.confidence||"N/A"})}catch(y){d("WARN","Intent prediction failed, continuing without intent",{error:y.message,initialQuery:r})}d("INFO","Starting comprehensive context gathering",{conversationId:n,includeArchitecture:s,maxCodeContextItems:c,contextDepth:u});let _=await Zn(r,o,n,{includeArchitecture:s,includeRecentConversations:a,maxCodeContextItems:c,maxRecentChanges:i,contextDepth:u,tokenBudget:m}),h={codeContextItems:_.codeContext?.length||0,architectureItems:_.architectureContext?.length||0,recentChanges:_.recentChanges?.length||0,patterns:_.globalPatterns?.length||0};d("INFO","Comprehensive context gathered successfully",h);let T=sr(_,r,f);d("INFO","Generated initial context summary",{summaryLength:T?.length||0});let S={message:`Conversation context initialized with ID: ${n}`,conversationId:n,initialContextSummary:T,predictedIntent:f,comprehensiveContext:_};return{content:[{type:"text",text:JSON.stringify(S)}]}}catch(n){d("ERROR","Error in initialize_conversation_context tool",{error:n.message,stack:n.stack,input:{initialQuery:e.initialQuery,focusHint:e.focusHint,contextDepth:e.contextDepth}});let r={error:!0,errorCode:n.code||"INITIALIZATION_FAILED",errorDetails:n.message};return{content:[{type:"text",text:JSON.stringify(r)}]}}}async function Zn(e,t,n,r){let o={};try{if(d("DEBUG","Starting to gather code context",{initialQuery:e?.substring(0,50),focusHint:t}),o.codeContext=await Yn(e,t,r),d("DEBUG","Gathered code context",{itemCount:o.codeContext?.length||0}),r.includeArchitecture)try{o.architectureContext=await Vn(r),d("DEBUG","Gathered architecture context",{itemCount:o.architectureContext?.length||0})}catch(s){d("WARN","Failed to gather architecture context",{error:s.message}),o.architectureContext=null}else o.architectureContext=null;try{o.projectStructure=await er(),d("DEBUG","Gathered project structure",{directoryCount:o.projectStructure?.directories?.length||0,fileCount:o.projectStructure?.files?.length||0})}catch(s){d("WARN","Failed to gather project structure",{error:s.message}),o.projectStructure={directories:[],files:[]}}if(r.includeRecentConversations)try{o.recentConversations=await tr(r),d("DEBUG","Gathered recent conversations",{count:o.recentConversations?.length||0})}catch(s){d("WARN","Failed to gather recent conversations",{error:s.message}),o.recentConversations=[]}try{o.recentChanges=await nr(r.maxRecentChanges),d("DEBUG","Gathered recent changes",{count:o.recentChanges?.length||0})}catch(s){d("WARN","Failed to gather recent changes",{error:s.message}),o.recentChanges=[]}try{o.activeWorkflows=await rr(),d("DEBUG","Gathered active workflows",{count:o.activeWorkflows?.length||0})}catch(s){d("WARN","Failed to gather active workflows",{error:s.message}),o.activeWorkflows=[]}try{o.globalPatterns=await or(e,r),d("DEBUG","Gathered global patterns",{count:o.globalPatterns?.length||0})}catch(s){d("WARN","Failed to gather global patterns",{error:s.message}),o.globalPatterns=[]}return o}catch(s){throw d("ERROR","Error gathering comprehensive context",{error:s.message,conversationId:n}),s}}async function Yn(e,t,n){try{let r={limit:n.maxCodeContextItems*2};t&&(t.type==="file"||t.type==="directory")&&(r.filePaths=[t.identifier]);let o=e?await ir(e):["README","main","index","config"],a=(await K(o,r)).map(u=>({entity_id:u.entity.entity_id,path:u.entity.file_path,type:u.entity.entity_type,name:u.entity.name,content:u.entity.raw_content,relevanceScore:u.relevanceScore}));a=a.slice(0,n.maxCodeContextItems);let c={detailLevel:n.contextDepth,targetTokens:Math.floor(n.tokenBudget*.6)};return await lt(a,c)}catch(r){return console.error(`[gatherCodeContext] Error: ${r.message}`),[]}}async function Vn(e){try{let t=await K(["README","documentation","architecture","overview","guide","setup"],{limit:5,strategy:"keywords"});if(t.length===0)return null;let n=t.map(a=>({name:a.entity.name,path:a.entity.file_path})),r=t.map(a=>a.entity.raw_content).join(`

`),o={detailLevel:e.contextDepth,targetTokens:Math.floor(e.tokenBudget*.2)};return{summary:r.length>1e3?r.substring(0,1e3)+"...":r,sources:n}}catch(t){return console.error(`[gatherArchitectureContext] Error: ${t.message}`),null}}async function er(){try{let t=await x(`
      SELECT 
        file_path,
        COUNT(*) as file_count
      FROM 
        code_entities
      WHERE 
        entity_type = 'file'
      GROUP BY 
        SUBSTR(file_path, 1, INSTR(file_path, '/'))
      ORDER BY 
        file_count DESC
      LIMIT 10
    `),n=t&&t.rows&&Array.isArray(t.rows)?t.rows:Array.isArray(t)?t:[];return n.length===0?{topLevelDirs:[],totalFiles:0}:{topLevelDirs:n.map(r=>({path:r.file_path.split("/")[0],fileCount:r.file_count})),totalFiles:n.reduce((r,o)=>r+o.file_count,0)}}catch(e){return console.error(`[gatherProjectStructure] Error: ${e.message}`),null}}async function tr(e){try{let t=await z({types:["conversation_completed"],limit:3});return t.length===0?[]:t.map(n=>({timestamp:n.timestamp,summary:n.data.summary||"Conversation completed",purpose:n.data.purpose||"Unknown purpose"}))}catch(t){return console.error(`[gatherRecentConversations] Error: ${t.message}`),[]}}async function nr(e){try{let t=await z({types:["file_change","file_create","code_commit"],limit:e});return t.length===0?[]:t.map(n=>({timestamp:n.timestamp,files:n.data.files||[n.data.filePath||"Unknown file"],summary:n.data.message||`${n.event_type} event occurred`}))}catch(t){return console.error(`[gatherRecentChanges] Error: ${t.message}`),[]}}async function rr(){try{let e=await z({types:["milestone"],limit:3,includeMilestones:!0});return e.length===0?[]:e.map(t=>({name:t.data.name||"Unnamed milestone",description:t.data.description||"No description provided",timestamp:t.timestamp}))}catch(e){return console.error(`[gatherActiveWorkflows] Error: ${e.message}`),[]}}async function or(e,t){try{let n=await Ee({minConfidence:.4,limit:5});return n.length===0?[]:n.map(r=>({name:r.name,type:r.pattern_type,description:r.description,confidence:r.confidence_score}))}catch(n){return console.error(`[gatherGlobalPatterns] Error: ${n.message}`),[]}}function sr(e,t,n){let r="Project context initialized";return t&&(r+=` for query: "${t}"`),n&&(r+=` with intent: ${n}`),e.codeContext&&e.codeContext.length>0&&(r+=`. Found ${e.codeContext.length} relevant code items`),e.architectureContext&&(r+=". Project documentation available"),e.recentChanges&&e.recentChanges.length>0&&(r+=`. ${e.recentChanges.length} recent file changes detected`),e.globalPatterns&&e.globalPatterns.length>0&&(r+=`. ${e.globalPatterns.length} relevant patterns identified`),r}async function ir(e){return e.toLowerCase().replace(/[^\w\s]/g,"").split(/\s+/).filter(t=>t.length>2).filter(t=>!["the","and","for","with"].includes(t))}var Ut={name:"initialize_conversation_context",description:"Initializes a new conversation context with comprehensive codebase information",inputSchema:Nt,outputSchema:Ot,handler:Kn};N();import"zod";N();async function Bt(e){if(!e||!e.filePath||!e.newContent)throw console.error("Invalid code change object:",e),new Error("Invalid code change: missing required fields");try{console.log(`Processing code change for ${e.filePath}`),await ot(e.filePath,e.newContent,e.languageHint);let t=await ar([e.filePath]);return{filePath:e.filePath,success:!0,entityCount:t.length,timestamp:new Date().toISOString()}}catch(t){throw console.error(`Error processing code change for ${e.filePath}:`,t),new Error(`Failed to process code change: ${t.message}`)}}async function ar(e){if(!e||e.length===0)return[];try{let n=`SELECT * FROM code_entities WHERE path IN (${e.map(()=>"?").join(",")})`,r=await x(n,e),o=r.filter(s=>s.type==="file").map(s=>s.id);if(o.length>0){let a=`SELECT * FROM code_entities WHERE parent_id IN (${o.map(()=>"?").join(",")})`,c=await x(a,o),i=[...r],u=new Set(i.map(m=>m.id));for(let m of c)u.has(m.id)||(i.push(m),u.add(m.id));return i}return r}catch(t){throw console.error("Error retrieving entities from changed files:",t),t}}M();import"uuid";async function lr(e,t){try{d("INFO","update_conversation_context tool started",{conversationId:e.conversationId,messageCount:e.newMessages?.length||0,codeChangeCount:e.codeChanges?.length||0});let{conversationId:n,newMessages:r=[],codeChanges:o=[],preserveContextOnTopicShift:s=!0,contextIntegrationLevel:a="balanced",trackIntentTransitions:c=!0,tokenBudget:i=4e3}=e;if(!n){let g=new Error("conversationId is required");throw g.code="MISSING_CONVERSATION_ID",g}d("DEBUG","Processing update with parameters",{preserveContextOnTopicShift:s,contextIntegrationLevel:a,trackIntentTransitions:c});let u=!1,m=!1,f=null,_=null,h=!0,T=null;try{let g=await ye();d("DEBUG","Retrieved previous context state",{hasPreviousContext:!!g}),c&&(f=await J(n),d("DEBUG","Retrieved previous intent",{previousIntent:f}))}catch(g){d("WARN","Failed to retrieve previous context state, continuing with defaults",{error:g.message})}if(r.length>0){d("INFO",`Processing ${r.length} new messages`);try{let g=await ur(n,r,{trackIntentTransitions:c});u=g.topicShift,d("DEBUG","Message processing completed",{topicShift:u}),c&&(m=g.intentTransition,_=g.currentIntent,m&&d("INFO","Intent transition detected",{from:f,to:_}))}catch(g){d("ERROR","Failed to process new messages",{error:g.message,conversationId:n})}}if(o.length>0){d("INFO",`Processing ${o.length} code changes`);try{let g=await pr(n,o);if(g.focusChanged&&(d("INFO","Focus changed due to code changes",{newFocus:g.newFocus}),c&&!m))try{let l=await Me({conversationId:n,codeChanges:o});l.intentChanged&&(m=!0,_=l.newIntent,d("INFO","Intent changed due to code changes",{newIntent:_}))}catch(l){d("WARN","Failed to update intent from code changes",{error:l.message})}}catch(g){d("ERROR","Failed to process code changes",{error:g.message,conversationId:n})}}if(u||m)if(d("INFO","Topic shift or intent transition detected, managing context continuity",{topicShift:u,intentTransition:m,preserveContextOnTopicShift:s}),s)try{let g=await ye()||{},l=await dr(g,{topicShift:u,intentTransition:m,previousIntent:f,currentIntent:_,codeChanges:o},a);await Ue(l),h=!0,d("INFO","Integrated previous and new context",{contextIntegrationLevel:a})}catch(g){d("ERROR","Failed to integrate contexts",{error:g.message})}else try{if(await Y(),h=!1,d("INFO","Cleared previous context due to topic shift"),_)try{let g=await xt(n,10),l=await Fe(g,o);l&&(await re(l.type,l.identifier),T=l,d("INFO","Set new focus area based on intent",{type:l.type,identifier:l.identifier}))}catch(g){d("WARN","Failed to set new focus area",{error:g.message})}}catch(g){d("ERROR","Failed to clear context",{error:g.message})}else d("DEBUG","No topic shift or intent transition detected, preserving context");if(!T)try{T=await X(),d("DEBUG","Retrieved current focus",{focus:T?`${T.type}:${T.identifier}`:"none"})}catch(g){d("WARN","Failed to get current focus",{error:g.message})}let S;try{S=await mr(n,_,u||m),d("DEBUG","Generated context synthesis",{synthesisLength:S?.length||0})}catch(g){d("WARN","Failed to generate context synthesis",{error:g.message}),S=null}try{await P("context_updated",{newMessagesCount:r.length,codeChangesCount:o.length,topicShift:u,intentTransition:m?{from:f,to:_}:null,contextPreserved:h,contextIntegrationLevel:h?a:"none"},[],n),d("DEBUG","Recorded context update in timeline")}catch(g){d("WARN","Failed to record context update in timeline",{error:g.message})}d("INFO","update_conversation_context tool completed successfully");let y={status:"success",message:`Conversation context updated for ${n}`,updatedFocus:T?{type:T.type,identifier:T.identifier}:void 0,contextContinuity:{topicShift:u,intentTransition:m,contextPreserved:h},synthesis:S};return{content:[{type:"text",text:JSON.stringify(y)}]}}catch(n){d("ERROR","Error in update_conversation_context tool",{error:n.message,stack:n.stack,input:{conversationId:e.conversationId,messageCount:e.newMessages?.length||0,codeChangeCount:e.codeChanges?.length||0}});let r={error:!0,errorCode:n.code||"UPDATE_FAILED",errorDetails:n.message};return{content:[{type:"text",text:JSON.stringify(r)}]}}}async function ur(e,t,n={}){try{d("DEBUG",`Processing ${t.length} messages for conversation ${e}`);let r={topicShift:!1,intentTransition:!1,currentIntent:null},o=null;if(n.trackIntentTransitions)try{o=await J(e),d("DEBUG","Retrieved previous intent",{previousIntent:o})}catch(s){d("WARN","Failed to retrieve previous intent",{error:s.message})}for(let s of t)try{let a=!1,c=null;s.role==="user"&&(d("DEBUG","Checking for topic shift with user message"),a=await _t(s.content,e),a&&(d("INFO","Topic shift detected",{messageContent:s.content.substring(0,50)+(s.content.length>50?"...":"")}),r.topicShift=!0)),d("DEBUG",`Recording message from ${s.role}`);let i=await yt(s.content,s.role,e,[],null,n.trackIntentTransitions&&r.currentIntent?r.currentIntent.purposeType:null);if(d("DEBUG",`Message recorded with ID: ${i}`),s.role==="user"&&a){try{let m=await de(e);m&&(d("INFO","Closing active topic segment",{topicId:m.topic_id}),await pt(m.topic_id,i))}catch(m){d("WARN","Failed to close active topic segment",{error:m.message})}let u="";try{u=await dt([i])}catch(m){u=`Topic from: ${s.content.substring(0,30)}...`,d("WARN","Failed to generate topic name, using fallback",{error:m.message})}try{d("INFO","Creating new topic segment");let m=await pe(e,i,{name:u,description:s.content});d("INFO","Created new topic segment",{topicId:m});try{await x(`
                UPDATE conversation_history
                SET topic_segment_id = ?
                WHERE message_id = ?
              `,[m,i]),d("DEBUG","Updated message with new topic ID",{messageId:i,topicId:m}),c=m}catch(f){d("ERROR","Failed to update message with topic ID",{error:f.message})}}catch(m){d("ERROR","Failed to create new topic segment",{error:m.message})}}else if(s.role==="user"&&!a)try{let u=await de(e);u&&(await x(`
                UPDATE conversation_history
                SET topic_segment_id = ?
                WHERE message_id = ?
              `,[u.topic_id,i]),d("DEBUG","Updated message with existing topic ID",{messageId:i,topicId:u.topic_id}),c=u.topic_id)}catch(u){d("WARN","Failed to associate message with active topic",{error:u.message})}if(s.role==="user"&&n.trackIntentTransitions)try{let u=await $(e,10),m=await ke(s.content,u);if(m){let f=m.purpose,_=o?o.purposeType:null;f!==_&&(d("INFO","Conversation purpose change detected",{from:_,to:f}),await Le(e,_,f,i),r.intentTransition=!0,r.currentIntent={purposeType:f,confidence:m.confidence},o={purposeType:f,confidence:m.confidence})}}catch(u){d("WARN","Failed to detect conversation purpose",{error:u.message})}if(n.trackIntentTransitions)try{let u=await Me({conversationId:e,messages:[s],messageId:i});u.intentChanged&&!r.intentTransition&&(r.intentTransition=!0,r.currentIntent=u.newIntent,d("INFO","Intent updated based on message content",{intent:u.newIntent}))}catch(u){d("WARN","Failed to update intent",{error:u.message})}}catch(a){d("ERROR","Failed to process message",{error:a.message,role:s.role,content:s.content?.substring(0,50)+"..."})}return r}catch(r){throw d("ERROR","Error processing new messages",{error:r.message,conversationId:e}),r}}async function pr(e,t){try{d("DEBUG",`Processing ${t.length} code changes for conversation ${e}`);let n={focusChanged:!1,newFocus:null};if(!t.length)return n;for(let o of t)try{await Bt(o),d("DEBUG",`Processed code change for ${o.path}`)}catch(s){d("WARN","Failed to process code change",{error:s.message,path:o.path})}let r=t.reduce((o,s)=>{let a=o.changedLines?.length||0;return(s.changedLines?.length||0)>a?s:o},t[0]);try{await re("file",r.path),n.focusChanged=!0,n.newFocus={type:"file",identifier:r.path},d("INFO","Set focus to most significantly changed file",{path:r.path,changedLines:r.changedLines?.length||"N/A"})}catch(o){d("WARN","Failed to set focus to changed file",{error:o.message,path:r.path})}try{await P("code_changes",{count:t.length,paths:t.map(o=>o.path)},[],e),d("DEBUG","Recorded code changes in timeline")}catch(o){d("WARN","Failed to record code changes in timeline",{error:o.message})}return n}catch(n){throw d("ERROR","Error processing code changes",{error:n.message,conversationId:e}),n}}async function dr(e,t,n){let{topicShift:r,intentTransition:o,previousIntent:s,currentIntent:a,codeChanges:c}=t;try{d("INFO",`Integrating contexts with level: ${n}`);let i={...e};switch(n){case"minimal":if(r){let u=i.focus;i.recentContextItems=[],i.focus=u}break;case"aggressive":o&&(i.currentIntent=a);break;case"balanced":default:if(r){let u=i.focus;if(i.recentContextItems){let m=c.map(f=>f.filePath);i.recentContextItems=i.recentContextItems.filter(f=>!!(f.relatedTo&&f.relatedTo.includes(u?.identifier)||f.path&&m.some(_=>f.path.includes(_))||f.timestamp&&Date.now()-f.timestamp<5*60*1e3))}}o&&(i.currentIntent=a,c.length>0&&i.recentContextItems&&(i.recentContextItems.forEach(u=>{u.contentType==="code"&&a&&(a==="debugging"&&u.path&&u.path.includes("test")||a==="feature_planning"&&u.path&&u.path.includes("docs"))&&(u.priority=Math.min(u.priority+.2,1))}),i.recentContextItems.sort((u,m)=>m.priority-u.priority)));break}return i}catch(i){return d("ERROR","Error integrating contexts",{error:i.message}),e}}async function mr(e,t,n){try{d("INFO","Generating context synthesis");let r=await ye(),o=await X(),s=await ge(e,5),a="Current conversation context";if(n){if(o){if(a=`The conversation is now focused on ${o.type} "${o.identifier}"`,t){let i=typeof t=="string"?t.replace(/_/g," "):t;a+=` with the purpose of ${i}`}}else t&&(a=`The conversation is focused on ${typeof t=="string"?t.replace(/_/g," "):t}`);if(s.length>0){let i=s.map(m=>m.content).join(" "),u=await F(i,{targetLength:150});a+=`. Recent discussion: ${u}`}}else if(o){if(a=`Continuing focus on ${o.type} "${o.identifier}"`,t){let i=typeof t=="string"?t.replace(/_/g," "):t;a+=` with ${i}`}}else t&&(a=`Continuing with ${typeof t=="string"?t.replace(/_/g," "):t}`);let c=[];if(o&&c.push(`Focus on ${o.type}: ${o.identifier}`),t)switch(t){case"debugging":c.push("Identify and fix issues in the code");break;case"feature_planning":c.push("Design and plan new features");break;case"code_review":c.push("Review code for quality and correctness");break;case"learning":c.push("Explain concepts and provide information");break;case"code_generation":c.push("Generate or modify code");break;default:c.push("Address user's current needs")}if(r&&r.recentContextItems){let i=r.recentContextItems.slice(0,2).map(u=>u.type==="file"?`Maintain context on file: ${u.name||u.path}`:u.type==="entity"?`Keep focus on: ${u.name}`:null).filter(Boolean);c.push(...i)}return{summary:a,topPriorities:c.length>0?c:void 0}}catch(r){return d("ERROR","Error generating context synthesis",{error:r.message}),{summary:"Context updated"}}}var jt={name:"update_conversation_context",description:"Updates an existing conversation context with new messages, code changes, and context management",inputSchema:kt,outputSchema:Lt,handler:lr};N();import"zod";q();q();B();M();async function gr(e,t){try{d("INFO","retrieve_relevant_context tool started",{query:e.query?.substring(0,50),conversationId:e.conversationId,tokenBudget:e.tokenBudget||U});let{conversationId:n,query:r,tokenBudget:o=U,constraints:s={},contextFilters:a={},weightingStrategy:c="balanced",balanceStrategy:i="proportional",contextBalance:u="auto",sourceTypePreferences:m={}}=e;if(!r){let S=new Error("Query is required");throw S.code="MISSING_QUERY",S}if(!n){let S=new Error("Conversation ID is required");throw S.code="MISSING_CONVERSATION_ID",S}d("DEBUG","Context retrieval parameters",{balanceStrategy:i,contextBalance:u,constraints:Object.keys(s),filters:Object.keys(a)});let f=[],_=null,h=null;try{f=await $(n,20),d("DEBUG","Retrieved conversation history",{messageCount:f.length})}catch(S){d("WARN","Failed to retrieve conversation history",{error:S.message,conversationId:n})}let T={relevantContext:[],conversationContext:f.map(S=>({type:"conversation",content:S.content,metadata:{role:S.role,messageId:S.messageId},relevanceScore:.9})),currentTopic:_,currentPurpose:h,statusMessage:"Retrieved conversation context successfully",metrics:{totalSnippets:f.length,relevanceThreshold:.5,tokenUsage:f.reduce((S,y)=>S+fr(y.content),0)}};return d("INFO",`Returning simplified context with ${T.conversationContext.length} conversation messages`),{content:[{type:"text",text:JSON.stringify({conversationId:e.conversationId,query:e.query,retrievalTime:Date.now(),relevantContext:{conversationContext:T.conversationContext,codeContext:[],patternContext:[],fileContext:[]},focusInfo:{currentTopic:T.currentTopic,currentPurpose:T.currentPurpose},queryAnalysis:{status:T.statusMessage,metrics:T.metrics}})}]}}catch(n){return d("ERROR","Error in retrieve_relevant_context handler",{error:n.message,code:n.code}),{content:[{type:"text",text:JSON.stringify({error:!0,errorCode:n.code||"RETRIEVAL_FAILED",errorDetails:n.message,conversationId:e.conversationId,query:e.query})}]}}}function fr(e){try{return e?Math.ceil(e.length/4):0}catch(t){return d("WARN","Error estimating token count",{error:t.message,textLength:e?.length||0}),e?Math.ceil(e.length/4):0}}var qt={name:"retrieve_relevant_context",description:"Retrieves context from multiple sources that is relevant to the current query or conversation",inputSchema:Dt,outputSchema:$t,handler:gr};N();import"zod";import{v4 as _r}from"uuid";N();q();N();import{v4 as Es}from"uuid";import{v4 as bs}from"uuid";async function Gt(e){try{console.log(`[LearningSystem] Analyzing patterns around milestone: ${e}`);let n=await x("SELECT * FROM context_states WHERE milestone_id = ?",[e]);if(!n||!n.rows||n.rows.length===0){console.warn(`[LearningSystem] No context snapshot found for milestone ${e}`);return}let r=n.rows[0];if(!r){console.warn(`[LearningSystem] Empty snapshot data for milestone ${e}`);return}let o=r.created_at||new Date().toISOString(),s=r.focus_areas||[],a=r.conversation_id;if(!a){console.warn(`[LearningSystem] No conversation_id in snapshot for milestone ${e}`);return}let c=new Date(o).getTime(),i=2*60*60*1e3,u=1*60*60*1e3,m=new Date(c-i).toISOString(),f=new Date(c+u).toISOString(),h=await x(`
      SELECT * FROM timeline_events
      WHERE conversation_id = ?
        AND timestamp >= ?
        AND timestamp <= ?
      ORDER BY timestamp ASC
    `,[a,m,f]);if(!h||!h.rows||h.rows.length===0){console.log(`[LearningSystem] No events found in the time window for milestone ${e}`);return}let T=h.rows||[],y=await x(`
      SELECT * FROM conversation_history
      WHERE conversation_id = ?
        AND timestamp >= ?
        AND timestamp <= ?
      ORDER BY timestamp ASC
    `,[a,m,f]),g=y&&y.rows?y.rows:[],l={};for(let C of T)if(C.data)try{let v=typeof C.data=="string"?JSON.parse(C.data):C.data;if(v.activeFile&&(l[v.activeFile]=(l[v.activeFile]||0)+1),v.relatedFiles&&Array.isArray(v.relatedFiles))for(let R of v.relatedFiles)l[R]=(l[R]||0)+1}catch{}let E=T.filter(C=>C.type==="search_query").map(C=>{try{let v=typeof C.data=="string"?JSON.parse(C.data):C.data;return v&&v.query?v.query:null}catch{return null}}).filter(Boolean),w={},b={};for(let C of g)C.topic_segment_id&&(w[C.topic_segment_id]=(w[C.topic_segment_id]||0)+1),C.purpose_type&&(b[C.purpose_type]=(b[C.purpose_type]||0)+1);console.log(`[LearningSystem] Milestone ${e} context analysis:`),console.log("  Most accessed code entities:",Object.entries(l).sort((C,v)=>v[1]-C[1]).slice(0,5)),console.log("  Most common search queries:",E.slice(0,5)),console.log("  Most discussed topics:",Object.entries(w).sort((C,v)=>v[1]-C[1]).slice(0,3)),console.log("  Most discussed purposes:",Object.entries(b).sort((C,v)=>v[1]-C[1]).slice(0,3)),console.log(`[LearningSystem] Analysis around milestone ${e} complete.`)}catch(t){console.error(`[LearningSystem] Error analyzing patterns around milestone ${e}:`,t)}}q();M();async function Er(e,t){try{d("INFO","record_milestone_context tool started",{milestoneName:e.name,category:e.milestoneCategory||"uncategorized",conversationId:e.conversationId});let{conversationId:n,name:r,description:o="",customData:s={},milestoneCategory:a="uncategorized",assessImpact:c=!0}=e;if(!r){let y=new Error("Milestone name is required");throw y.code="MISSING_NAME",y}let i=[],u=null,m=[];try{i=await Be(),u=await X(),m=i.map(y=>y.id),d("DEBUG","Retrieved active context",{entityCount:m.length,hasFocus:!!u})}catch(y){d("WARN","Error retrieving active context, continuing with empty context",{error:y.message})}let f={milestoneCategory:a,name:r,description:o,activeFocus:u,entityIds:m,customData:s,timestamp:Date.now(),conversationId:n},_;try{_=await P("milestone_created",{name:r,category:a,entityCount:m.length,timestamp:Date.now()},m,n),d("DEBUG","Recorded milestone event in timeline",{eventId:_})}catch(y){throw d("ERROR","Failed to record milestone event in timeline",{error:y.message,name:r,category:a}),y}let h;try{h=await vt(f,r,o,_),d("INFO",`Created milestone with ID: ${h}`);try{let y=_r(),g=new Date().toISOString(),l=JSON.stringify(f),E=`
          INSERT INTO context_states (
            state_id, milestone_id, conversation_id, state_type, 
            state_data, created_at, metadata
          ) VALUES (?, ?, ?, ?, ?, ?, ?)
        `,w=[y,h,n,"milestone",l,g,JSON.stringify({name:r,description:o,category:a})];await x(E,w),d("INFO",`Saved milestone state in context_states with ID: ${y}`)}catch(y){d("ERROR","Failed to save milestone in context_states table",{error:y.message,milestoneId:h})}}catch(y){throw d("ERROR","Failed to create milestone snapshot",{error:y.message,name:r,eventId:_}),y}let T=null;if(c)try{d("INFO","Starting impact assessment for milestone",{milestoneId:h,category:a}),T=await wr(h,a,m)}catch(y){d("WARN","Failed to assess milestone impact",{error:y.message,milestoneId:h}),T={impactScore:0,impactLevel:"unknown",impactSummary:`Unable to assess impact: ${y.message}`,error:y.message,scopeMetrics:{directlyModifiedEntities:m.length,potentiallyImpactedEntities:0,impactedComponents:0,criticalPathsCount:0}}}else d("DEBUG","Skipping impact assessment (not requested)");setTimeout(()=>{d("DEBUG",`Starting background pattern analysis for milestone: ${h}`),Gt(h).catch(y=>{d("ERROR","Error in background pattern analysis",{error:y.message,milestoneId:h})})},100),d("INFO","record_milestone_context tool completed successfully",{milestoneId:h,entityCount:m.length,hasImpactAssessment:!!T});let S={message:`Milestone "${r}" recorded successfully with ${m.length} related entities.`,milestoneId:h,status:"success",milestoneCategory:a,relatedEntitiesCount:m.length,impactAssessment:T};return{content:[{type:"text",text:JSON.stringify(S)}]}}catch(n){d("ERROR","Error in record_milestone_context tool",{error:n.message,stack:n.stack,input:{name:e.name,category:e.milestoneCategory,conversationId:e.conversationId}});let r={error:!0,errorCode:n.code||"MILESTONE_RECORDING_FAILED",errorDetails:n.message,milestoneId:null,status:"error",milestoneCategory:e.milestoneCategory||"uncategorized",relatedEntitiesCount:0,impactAssessment:{error:n.message}};return{content:[{type:"text",text:JSON.stringify(r)}]}}}async function wr(e,t,n){try{if(d("DEBUG",`Assessing impact for milestone: ${e}`,{category:t,entityCount:n?.length||0}),!n||n.length===0)return d("DEBUG","No active context entities, skipping detailed impact assessment"),{impactScore:0,impactLevel:"none",impactSummary:"No code entities were modified in this milestone.",scopeMetrics:{directlyModifiedEntities:0,potentiallyImpactedEntities:0,impactedComponents:0,criticalPathsCount:0}};let r=[];try{d("DEBUG",`Fetching details for ${n.length} entities`),r=(await Promise.all(n.map(async y=>{try{let l=await x("SELECT * FROM code_entities WHERE entity_id = ?",[y]);return l.length>0?l[0]:null}catch(g){return d("WARN","Failed to fetch entity details",{error:g.message,entityId:y}),null}}))).filter(Boolean),d("DEBUG",`Retrieved details for ${r.length}/${n.length} entities`)}catch(S){return d("ERROR","Failed to fetch entity details",{error:S.message}),{impactScore:.1,impactLevel:"unknown",impactSummary:`Impact could not be fully assessed due to database error: ${S.message}`,scopeMetrics:{directlyModifiedEntities:n.length,potentiallyImpactedEntities:0,impactedComponents:0,criticalPathsCount:0},error:S.message}}let o=new Set(n),s=[],a=new Map,c=new Map;r.forEach(S=>{c.set(S.entity_id,S.entity_type)});try{for(let S of r){let y=await ue(S.entity_id,"outgoing");d("DEBUG",`Retrieved ${y.length} outgoing relationships for entity`,{entityId:S.entity_id,entityType:S.entity_type});for(let E of y)o.has(E.target_entity_id)||(o.add(E.target_entity_id),(E.relationship_type==="calls"||E.relationship_type==="extends"||E.relationship_type==="implements")&&s.push({source:S.entity_id,target:E.target_entity_id,type:E.relationship_type,criticality:.8}));let l=(S.file_path||"").split("/").slice(0,2).join("/");if(l){let E=a.get(l)||0;a.set(l,E+1)}}}catch(S){d("WARN","Error analyzing relationships",{error:S.message,milestoneId:e})}d("DEBUG","Completed relationship analysis",{impactedEntities:o.size,criticalPaths:s.length,componentCount:a.size});let i=n.length,u=o.size-i,m=a.size,f=s.length,_,h;try{let S=Math.min(1,i*.02+u*.01+m*.1+f*.05),y=1;switch(t){case"major_feature":y=1.2;break;case"refactoring":y=1.5;break;case"bug_fix":y=.7;break;case"critical_fix":y=1.3;break;default:y=1}_=Math.min(1,S*y),_<.2?h="low":_<.5?h="medium":_<.8?h="high":h="critical",d("INFO","Calculated impact assessment",{impactScore:_,impactLevel:h,directlyModified:i,potentiallyImpacted:u,components:m})}catch(S){d("ERROR","Error calculating impact score",{error:S.message}),_=.3,h="medium"}let T;try{T=Sr(h,i,u,m,f,t)}catch(S){d("WARN","Error generating impact summary",{error:S.message}),T=`This milestone has a ${h} impact, affecting ${i} entities directly and potentially impacting ${u} others.`}return{impactScore:_,impactLevel:h,impactSummary:T,scopeMetrics:{directlyModifiedEntities:i,potentiallyImpactedEntities:u,impactedComponents:m,criticalPathsCount:f},componentBreakdown:Object.fromEntries(a),criticalPathsTop:s.slice(0,5)}}catch(r){return d("ERROR","Error in impact assessment",{error:r.message,stack:r.stack,milestoneId:e,category:t}),{impactScore:.1,impactLevel:"unknown",impactSummary:`Impact assessment encountered an error: ${r.message}`,error:r.message,scopeMetrics:{directlyModifiedEntities:n?n.length:0,potentiallyImpactedEntities:0,impactedComponents:0,criticalPathsCount:0}}}}function Sr(e,t,n,r,o,s){try{let a=`This ${s} milestone has a ${e} impact, `;switch(a+=`directly modifying ${t} entities and potentially affecting ${n} additional entities. `,r>0&&(a+=`Changes span ${r} component${r===1?"":"s"}. `),o>0&&(a+=`Found ${o} critical dependency path${o===1?"":"s"} that may require careful testing. `),s){case"refactoring":a+="Since this is a refactoring, consider comprehensive regression testing.";break;case"major_feature":a+="As a major feature, ensure adequate test coverage for new functionality.";break;case"bug_fix":a+="For this bug fix, focus testing on the specific issue resolution.";break;case"critical_fix":a+="This critical fix requires careful validation in production-like environments.";break}return a}catch(a){return d("WARN","Error generating impact summary text",{error:a.message}),`This milestone has a ${e} impact, affecting ${t} entities directly.`}}var Wt={name:"record_milestone_context",description:"Records a development milestone and its context, creating a snapshot for reference and learning",inputSchema:Ft,outputSchema:Mt,handler:Er};N();import"zod";async function Ge(e){try{console.log(`[LearningSystem] Extracting patterns from conversation ${e}`);let t=await $(e,50,0);return!t||t.length===0?(console.log(`[LearningSystem] No messages found in conversation ${e}`),[]):[]}catch(t){return console.error(`[LearningSystem] Error extracting patterns: ${t.message}`),[]}}async function Xt(e){try{console.log(`[LearningSystem] Extracting bug patterns from conversation ${e}`);let t=await $(e,50,0);if(!t||t.length===0)return console.log(`[LearningSystem] No messages found in conversation ${e}`),[];let n=["error","bug","issue","problem","crash","fail","exception","TypeError","undefined"],r=[];for(let s=0;s<t.length;s++){let a=t[s];a.role==="user"&&n.some(c=>a.content.toLowerCase().includes(c))&&s+1<t.length&&t[s+1].role==="assistant"&&r.push({errorMessage:a.content,solutionMessage:t[s+1].content})}let o=r.map((s,a)=>{let c=s.errorMessage.substring(0,100),i=s.solutionMessage.substring(0,150),u=`Bug Pattern ${a+1}`,m=s.errorMessage.match(/(TypeError|ReferenceError|SyntaxError|RangeError|Error):/);if(m&&m[1])u=`${m[1]} Pattern`;else{let f=n.filter(_=>s.errorMessage.toLowerCase().includes(_));f.length>0&&(u=`${f[0].charAt(0).toUpperCase()+f[0].slice(1)} Pattern`)}return{name:u,description:c,solution:i||"No specific solution identified",detected_at:new Date().toISOString(),source_conversation_id:e,frequency:1,confidence_score:.7}});return console.log(`[LearningSystem] Extracted ${o.length} bug patterns from conversation ${e}`),o}catch(t){return console.error(`[LearningSystem] Error extracting bug patterns: ${t.message}`),[]}}async function Ht(e){try{let t;if(typeof e=="string")console.log(`[LearningSystem] Extracting key-value pairs from conversation ${e}`),t=await $(e,50,0);else if(Array.isArray(e))t=e;else return console.error(`[LearningSystem] Invalid input type for extractKeyValuePairs: ${typeof e}`),[];if(!t||!Array.isArray(t)||t.length===0)return[];let n=[],r=[/(\w+[\s\w]*)\s+is\s+([\w\s]+)/i,/(\w+[\s\w]*)\s*=\s*([\w\s]+)/i,/(\w+[\s\w]*)\s*:\s*([\w\s]+)/i,/the\s+(\w+[\s\w]*)\s+of\s+(\w+[\s\w]*)\s+is\s+([\w\s]+)/i];for(let o of t){let a=(o.content||"").split(/[.!?]+/);for(let c of a)if(c.trim().length!==0)for(let i of r){let u=c.match(i);u&&(i.toString().includes("of")?n.push({key:`${u[1].trim()} of ${u[2].trim()}`,value:u[3].trim(),confidence:.7,source:"conversation",source_id:typeof e=="string"?e:o.conversation_id,timestamp:new Date().toISOString()}):n.push({key:u[1].trim(),value:u[2].trim(),confidence:.8,source:"conversation",source_id:typeof e=="string"?e:o.conversation_id,timestamp:new Date().toISOString()}))}}return console.log(`[LearningSystem] Extracted ${n.length} key-value pairs`),n}catch(t){return console.error(`[LearningSystem] Error extracting key-value pairs: ${t.message}`),[]}}M();import{v4 as vr}from"uuid";async function xr(e,t){try{d("INFO","finalize_conversation_context tool started",{conversationId:e.conversationId,outcome:e.outcome||"completed",clearActiveContext:e.clearActiveContext||!1});let{conversationId:n,clearActiveContext:r=!1,extractLearnings:o=!0,promotePatterns:s=!0,synthesizeRelatedTopics:a=!0,generateNextSteps:c=!0,outcome:i="completed"}=e;if(!n){let l=new Error("Conversation ID is required");throw l.code="MISSING_CONVERSATION_ID",l}d("DEBUG","Processing options",{extractLearnings:o,promotePatterns:s,synthesizeRelatedTopics:a,generateNextSteps:c});let u=[],m=null,f=[];try{if(u=await $(n),!u||u.length===0){let l=new Error(`No conversation history found for ID: ${n}`);throw l.code="CONVERSATION_NOT_FOUND",l}d("DEBUG","Retrieved conversation history",{messageCount:u.length})}catch(l){throw d("ERROR","Failed to retrieve conversation history",{error:l.message,conversationId:n}),l}try{m=await St(n),d("DEBUG",`Retrieved conversation purpose: ${m||"Unknown"}`)}catch(l){d("WARN","Failed to retrieve conversation purpose",{error:l.message,conversationId:n})}try{f=await $e(n),d("DEBUG",`Retrieved ${f.length} conversation topics`)}catch(l){d("WARN","Failed to retrieve conversation topics",{error:l.message,conversationId:n}),f=[]}let _="";try{_=await Et(n),d("INFO","Generated conversation summary",{summaryLength:_.length})}catch(l){d("WARN","Failed to generate conversation summary",{error:l.message,conversationId:n}),_=`Conversation ${n} with ${u.length} messages`}try{await P("conversation_end",{summary:_,purpose:m,topics:f.length,outcome:i},[],n),d("DEBUG","Recorded conversation_end event in timeline")}catch(l){d("WARN","Failed to record conversation_end event",{error:l.message,conversationId:n})}let h=null,T=null,S=null,y=null;if(o)try{d("INFO","Extracting learnings from conversation"),h=await Cr(n,u),d("INFO",`Extracted ${h?.patterns?.length||0} patterns and ${h?.bugPatterns?.length||0} bug patterns`)}catch(l){d("WARN","Failed to extract learnings",{error:l.message,conversationId:n}),h={patterns:[],bugPatterns:[],conceptualInsights:[],error:l.message}}else d("DEBUG","Skipping learning extraction (not requested)");if(s)try{d("INFO","Promoting patterns from conversation"),T=await br(n,i),d("INFO",`Promoted ${T?.count||0} patterns`)}catch(l){d("WARN","Failed to promote patterns",{error:l.message,conversationId:n}),T={count:0,patterns:[],error:l.message}}else d("DEBUG","Skipping pattern promotion (not requested)");if(a)try{d("INFO","Finding and synthesizing related conversations"),S=await Rr(n,f,m),d("INFO",`Found ${S?.conversations?.length||0} related conversations`)}catch(l){d("WARN","Failed to synthesize related conversations",{error:l.message,conversationId:n}),S={conversations:[],insights:[],error:l.message}}else d("DEBUG","Skipping related topic synthesis (not requested)");if(c)try{d("INFO","Generating next step suggestions"),y=await Ir(n,m,_,h),d("INFO",`Generated ${y?.suggestions?.length||0} next step suggestions`)}catch(l){d("WARN","Failed to generate next step suggestions",{error:l.message,conversationId:n}),y={suggestions:[],error:l.message}}else d("DEBUG","Skipping next step generation (not requested)");if(r)try{await Y(),d("INFO","Cleared active context")}catch(l){d("WARN","Failed to clear active context",{error:l.message})}try{let l=new Date().toISOString();if(await x(`
        UPDATE conversation_purposes
        SET end_timestamp = ?
        WHERE conversation_id = ? AND end_timestamp IS NULL
      `,[l,n]),d("INFO","Marked all active conversation purposes as ended"),!((await x(`
        SELECT COUNT(*) as count FROM conversation_purposes 
        WHERE conversation_id = ?
      `,[n]))?.rows?.[0]?.count>0)){let v=vr(),R=new Date(Date.now()-6e4).toISOString();await x(`
          INSERT INTO conversation_purposes (
            purpose_id, conversation_id, purpose_type, confidence,
            start_timestamp, end_timestamp, metadata
          ) VALUES (?, ?, ?, ?, ?, ?, ?)
        `,[v,n,"general_query",.8,R,l,JSON.stringify({source:"finalization",outcome:i})]),d("INFO","Created general_query purpose record for finalization")}}catch(l){d("WARN","Failed to finalize conversation purposes",{error:l.message,conversationId:n})}d("INFO","finalize_conversation_context tool completed successfully");let g={message:`Conversation ${n} finalized successfully with outcome: ${i}`,status:"success",summary:_,purpose:m||"Unknown purpose",extractedLearnings:h,promotedPatterns:T,relatedConversations:S,nextSteps:y};return{content:[{type:"text",text:JSON.stringify(g)}]}}catch(n){d("ERROR","Error in finalize_conversation_context tool",{error:n.message,stack:n.stack,input:{conversationId:e.conversationId,outcome:e.outcome}});let r={error:!0,errorCode:n.code||"FINALIZATION_FAILED",errorDetails:n.message,summary:"Failed to finalize conversation context",purpose:"Unknown due to error",extractedLearnings:null,promotedPatterns:null,relatedConversations:null,nextSteps:null};return{content:[{type:"text",text:JSON.stringify(r)}]}}}async function Cr(e,t=!0,n=!1){try{d("INFO","Extracting learnings from conversation");let r=0,o=0;if(t)try{let s=await Ge(e);s&&s.length>0&&(r=s.length,n&&s.length>0)}catch(s){d("WARN",`Failed to extract patterns: ${s.message}`)}try{let s=await Xt(e);s&&s.length>0&&(o=s.length)}catch(s){d("WARN",`Failed to extract bug patterns: ${s.message}`)}try{let s=await Ht(e);s&&s.length>0}catch(s){d("WARN",`Failed to extract key-value pairs: ${s.message}`)}return d("INFO",`Extracted ${r} patterns and ${o} bug patterns`),{patternCount:r,bugPatternCount:o}}catch(r){return d("ERROR",`Error extracting conversation learnings: ${r.message}`),{patternCount:0,bugPatternCount:0}}}async function br(e,t){try{console.log(`[_promoteConversationPatterns] Promoting patterns for conversation ${e}`);let n=await Ge(e);if(!n||n.length===0)return console.log(`[_promoteConversationPatterns] No patterns found in conversation ${e}`),{promoted:0,patterns:[]};console.log(`[_promoteConversationPatterns] Found ${n.length} patterns to evaluate for promotion`);let r={promoted:0,patterns:[]},o=.5;t==="completed"&&(o=.6),t==="abandoned"&&(o=.7);for(let s of n)try{if(s.is_global){r.patterns.push({patternId:s.pattern_id,name:s.name,type:s.pattern_type,promoted:!1,confidence:s.confidence_score});continue}if(s.confidence_score<o){r.patterns.push({patternId:s.pattern_id,name:s.name,type:s.pattern_type,promoted:!1,confidence:s.confidence_score});continue}await we(s.pattern_id,s.confidence_score);let a=t==="completed"||t==="reference_only"?"confirmation":"usage";await je(s.pattern_id,a,{conversationId:e}),r.promoted++,r.patterns.push({patternId:s.pattern_id,name:s.name,type:s.pattern_type,promoted:!0,confidence:s.confidence_score}),console.log(`[_promoteConversationPatterns] Successfully promoted pattern ${s.pattern_id}`)}catch(a){console.warn(`[_promoteConversationPatterns] Error processing pattern ${s.pattern_id}:`,a)}return console.log(`[_promoteConversationPatterns] Promoted ${r.promoted} patterns to global repository`),r}catch(n){return console.error("[_promoteConversationPatterns] Error promoting patterns:",n),{promoted:0,patterns:[],error:n.message}}}async function Rr(e,t,n){try{console.log(`[_findAndSynthesizeRelatedConversations] Finding related conversations for ${e}`);let r=new Set;t&&Array.isArray(t)?t.forEach(u=>{u.keywords&&Array.isArray(u.keywords)&&u.keywords.forEach(m=>r.add(m))}):console.warn("[_findAndSynthesizeRelatedConversations] conversationTopics is not an array:",typeof t);let o=Array.from(r),s=await z({types:["conversation_end","conversation_completed"],limit:10,excludeConversationId:e});if(!s||s.length===0)return console.log("[_findAndSynthesizeRelatedConversations] No recent conversations found to compare"),{relatedCount:0,conversations:[],synthesizedInsights:[]};let a=[];for(let u of s)try{if(!u.data||!u.conversation_id)continue;let m=await $e(u.conversation_id),f=new Set;if(m&&Array.isArray(m))m.forEach(y=>{y.keywords&&Array.isArray(y.keywords)&&y.keywords.forEach(g=>f.add(g))});else{console.warn(`[_findAndSynthesizeRelatedConversations] eventTopics for ${u.conversation_id} is not an array`);continue}let _=o.filter(y=>f.has(y)).length,h=new Set([...o,...f]).size,T=h>0?_/h:0,S=[];m&&Array.isArray(m)&&t&&Array.isArray(t)&&m.forEach(y=>{t.forEach(g=>{y.topic_name&&g.topic_name&&y.topic_name.toLowerCase()===g.topic_name.toLowerCase()&&S.push(y.topic_name)})}),(T>.2||S.length>0)&&a.push({conversationId:u.conversation_id,summary:u.data.summary||"No summary available",timestamp:u.timestamp,similarityScore:T,commonTopics:S})}catch(m){console.warn(`[_findAndSynthesizeRelatedConversations] Error processing event ${u.event_id}:`,m)}a.sort((u,m)=>m.similarityScore-u.similarityScore);let c=a.slice(0,5);console.log(`[_findAndSynthesizeRelatedConversations] Found ${c.length} related conversations`);let i=await Ar(c,n);return{relatedCount:c.length,conversations:c,synthesizedInsights:i}}catch(r){return console.error("[_findAndSynthesizeRelatedConversations] Error finding related conversations:",r),{relatedCount:0,conversations:[],synthesizedInsights:[],error:r.message}}}async function Ar(e,t){try{if(!e||e.length===0)return[];let n={};if(e.forEach(o=>{o.commonTopics&&o.commonTopics.length>0&&o.commonTopics.forEach(s=>{n[s]||(n[s]=[]),n[s].push(o)})}),Object.keys(n).length===0&&t){let o=`Conversations about ${t}`;n[o]=e}let r=[];for(let[o,s]of Object.entries(n))if(s.length>=2){let a=s.map(i=>i.summary).join(" | "),c=await F(a,{targetLength:150,preserveKeyPoints:!0});r.push({topic:o,insight:c,conversationCount:s.length,sourceSummaries:s.map(i=>({conversationId:i.conversationId,summary:i.summary}))})}return r}catch(n){return console.error("[_synthesizeInsightsFromRelatedConversations] Error synthesizing insights:",n),[]}}async function Ir(e,t,n,r){try{console.log(`[_generateNextStepSuggestions] Generating next steps for conversation ${e}`);let o={suggestedNextSteps:[],followUpTopics:[],referenceMaterials:[]},s=I(n),a=L(s,10),c="general_query";t&&(typeof t=="string"?c=t:typeof t=="object"&&t.purposeType?c=t.purposeType:typeof t=="object"&&t.purpose_type&&(c=t.purpose_type)),console.log(`[_generateNextStepSuggestions] Using purpose type: ${c}`);let i=[],u=[];if(c)switch(typeof c=="string"?c.toLowerCase():"general_query"){case"debugging":case"bug_fixing":i.push({action:"Create a test case that verifies the bug fix",priority:"high",rationale:"Ensure the bug doesn't reoccur in the future"}),i.push({action:"Document the root cause and solution",priority:"medium",rationale:"Help prevent similar issues in the future"});break;case"feature_planning":case"design_discussion":i.push({action:"Create tickets/tasks for implementation work",priority:"high",rationale:"Break down the feature into manageable pieces"}),i.push({action:"Draft initial implementation plan with milestones",priority:"medium",rationale:"Establish a timeline and checkpoints"});break;case"code_review":i.push({action:"Address feedback points and resubmit for review",priority:"high",rationale:"Incorporate the suggested improvements"}),i.push({action:"Update documentation to reflect changes",priority:"medium",rationale:"Keep documentation in sync with code"});break;case"onboarding":case"knowledge_sharing":i.push({action:"Create summary documentation of discussed topics",priority:"high",rationale:"Solidify knowledge transfer"}),i.push({action:"Schedule follow-up session for additional questions",priority:"medium",rationale:"Address remaining questions after initial processing"});break;default:i.push({action:"Document key decisions from the conversation",priority:"medium",rationale:"Preserve important context for future reference"})}if(r&&r.learnings){let m=r.learnings.filter(_=>_.type==="design_decision");m.length>0&&m.filter(h=>h.confidence>=.7).slice(0,2).forEach(h=>{u.push({topic:`Implementation details for: ${h.content}`,priority:"high",rationale:"Turn design decision into concrete implementation"})});let f=r.learnings.filter(_=>_.type==="bug_pattern");f.length>0&&f.filter(h=>h.confidence>=.8).slice(0,2).forEach(h=>{u.push({topic:`Root cause analysis for: ${h.content}`,priority:"medium",rationale:"Prevent similar bugs in the future"})})}try{let m=Array.isArray(a)?a.filter(f=>typeof f=="string"):[];if(m.length>0){let _=(await K(m,{fileTypes:["md","txt","rst","pdf","doc"],maxResults:5,searchDocumentation:!0})).map(h=>({title:h.name||h.file_path||"Unnamed reference",path:h.file_path,type:h.entity_type||"document",relevance:h.score||.5}));o.referenceMaterials=_}}catch(m){console.error("Error in searchByKeywords:",m)}return o.suggestedNextSteps=i,o.followUpTopics=u,console.log(`[_generateNextStepSuggestions] Generated ${i.length} next steps and ${u.length} follow-up topics`),o}catch(o){return console.error("[_generateNextStepSuggestions] Error generating next steps:",o),{suggestedNextSteps:[],followUpTopics:[],referenceMaterials:[],error:o.message}}}var Jt={name:"finalize_conversation_context",description:"Finalizes a conversation context, extracting learnings, promoting patterns, and generating insights",inputSchema:Pt,outputSchema:zt,handler:xr};var Nr=[Ut,jt,qt,Wt,Jt],Qt=Nr;M();typeof global.lastConversationId>"u"&&(global.lastConversationId=null);function Se(e,t){return async(n,r)=>{try{d("DEBUG",`${t} tool handler invoked`,{paramsKeys:Object.keys(n)});let o=n;if(n&&typeof n=="object"&&Object.keys(n).length===1&&n.signal&&Object.keys(n.signal).length===0)o={},d("WARN",`${t} received only signal object, using defaults`,{params:n});else if(n&&n.signal&&Object.keys(n).length>1){let{signal:u,...m}=n;o=m,d("DEBUG",`${t} extracted parameters from signal object`,{extractedParams:Object.keys(o)})}let s=Or(o);d("DEBUG",`${t} extracted parameters`,{extractedParams:s});let c={...kr(t),...s};d("DEBUG",`${t} merged parameters`,{mergedParams:c}),c.conversationId?global.lastConversationId=c.conversationId:global.lastConversationId&&(c.conversationId=global.lastConversationId,d("INFO",`Using last conversation ID: ${global.lastConversationId}`));let i=await e(c,r);return{content:[{type:"text",text:typeof i=="string"?i:JSON.stringify(i)}]}}catch(o){return d("ERROR",`Error in ${t} tool handler`,{error:o.message,stack:o.stack}),{content:[{type:"text",text:JSON.stringify({error:!0,message:o.message,details:o.stack})}]}}}}function Or(e){let t={};try{if(e&&typeof e=="object"){if(Object.keys(e).forEach(n=>{n!=="signal"&&n!=="requestId"&&(t[n]=e[n])}),e.random_string)try{let n=JSON.parse(e.random_string);Object.assign(t,n)}catch{typeof e.random_string=="string"&&e.random_string.length>30&&e.random_string.includes("-")&&(t.conversationId=e.random_string)}e.conversationId&&(t.conversationId=e.conversationId),e.initialQuery&&(t.initialQuery=e.initialQuery),e.contextDepth&&(t.contextDepth=e.contextDepth),e.query&&(t.query=e.query),e.name&&(t.name=e.name),e.newMessages&&(t.newMessages=Array.isArray(e.newMessages)?e.newMessages:[e.newMessages]),e.codeChanges&&(t.codeChanges=Array.isArray(e.codeChanges)?e.codeChanges:[e.codeChanges])}else if(typeof e=="string")try{let n=JSON.parse(e);Object.assign(t,n)}catch{e.length>30&&e.includes("-")&&(t.conversationId=e)}}catch(n){d("ERROR",`Error extracting params: ${n.message}`)}return t}function kr(e){switch(e){case"initialize_conversation_context":return{initialQuery:"Starting a new conversation with DevContext",includeArchitecture:!0,includeRecentConversations:!0,maxCodeContextItems:5,maxRecentChanges:5,contextDepth:"standard"};case"update_conversation_context":return{conversationId:global.lastConversationId,newMessages:[{role:"user",content:"Working with DevContext tools"}],preserveContextOnTopicShift:!0,contextIntegrationLevel:"balanced",trackIntentTransitions:!0};case"retrieve_relevant_context":return{conversationId:global.lastConversationId,query:"DevContext tools and functionality",constraints:{includeConversation:!0,crossTopicSearch:!1},contextFilters:{minRelevanceScore:.3},weightingStrategy:"balanced",balanceStrategy:"proportional",contextBalance:"auto"};case"record_milestone_context":return{conversationId:global.lastConversationId,name:"DevContext Tool Milestone",description:"Milestone recorded during DevContext tools testing",milestoneCategory:"uncategorized",assessImpact:!0};case"finalize_conversation_context":return{conversationId:global.lastConversationId,clearActiveContext:!1,extractLearnings:!0,promotePatterns:!0,synthesizeRelatedTopics:!0,generateNextSteps:!0,outcome:"completed"};default:return{}}}function Kt(e){return Se(e,"initialize_conversation_context")}function Zt(e){return Se(e,"finalize_conversation_context")}var Te=null;async function $r(){(!V||!ee)&&(d("error","Database credentials not set. TURSO_DATABASE_URL and TURSO_AUTH_TOKEN are required."),process.exit(1));try{d("info","Getting database client...");let n=H();d("info","Database client created successfully.")}catch(n){d("error",`Failed to create database client: ${n.message}`),process.exit(1)}try{d("info","Testing database connection..."),await He(),d("info","Database connection successful.")}catch(n){d("error",`Database connection failed: ${n.message}`),process.exit(1)}try{d("info","Initializing database schema..."),await Je(),d("info","Database schema initialized successfully.")}catch(n){d("error",`Failed to initialize database schema: ${n.message}`),process.exit(1)}try{It(60),d("info","Scheduled periodic pattern consolidation.");let n=24*60*60*1e3;Te=setInterval(async()=>{try{d("info","Applying context decay..."),await bt(),d("info","Context decay applied successfully.")}catch(r){d("error","Error applying context decay:",{error:r.message})}},n),d("info",`Scheduled periodic context decay every ${n/(60*60*1e3)} hours.`)}catch(n){d("warn",`Failed to schedule background tasks: ${n.message}`)}let e=new Lr({name:"cursor10x",version:"2.0.0"});for(let n of Qt){let r;n.name==="initialize_conversation_context"?r=Kt(n.handler):n.name==="finalize_conversation_context"?r=Zt(n.handler):r=Se(n.handler,n.name),e.tool(n.name,n.inputSchema,r),d("info",`Registered tool: ${n.name}`)}let t=new Dr;d("info",`Starting MCP server with PID ${process.pid}...`),Fr();try{await e.connect(t),d("info","MCP server stopped."),se()}catch(n){d("error",`MCP server error: ${n.message}`),se(),process.exit(1)}}function Fr(){process.on("SIGINT",()=>{d("info","Received SIGINT signal. Shutting down gracefully..."),se(),process.exit(0)}),process.on("SIGTERM",()=>{d("info","Received SIGTERM signal. Shutting down gracefully..."),se(),process.exit(0)})}function se(){Te&&(clearInterval(Te),Te=null,d("info","Cleared context decay timer."))}(import.meta.url===import.meta.mainUrl||process.env.NODE_ENV!=="test")&&$r().catch(e=>{d("error",`Unhandled error in startServer: ${e.message}`),console.error(e),se(),process.exit(1)});export{$r as startServer};
//# sourceMappingURL=mcp-server.bundle.js.map
